<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="518" onload="init(evt)" viewBox="0 0 1200 518" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="518" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="501.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="501.00"> </text><svg id="frames" x="10" width="1180" total_samples="10801"><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="0.0093%" y="437" width="0.0185%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="2"/><text x="0.2593%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.02%)</title><rect x="0.0278%" y="437" width="0.0185%" height="15" fill="rgb(217,0,24)" fg:x="3" fg:w="2"/><text x="0.2778%" y="447.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_next (4 samples, 0.04%)</title><rect x="0.0741%" y="437" width="0.0370%" height="15" fill="rgb(221,193,54)" fg:x="8" fg:w="4"/><text x="0.3241%" y="447.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.03%)</title><rect x="0.1111%" y="437" width="0.0278%" height="15" fill="rgb(248,212,6)" fg:x="12" fg:w="3"/><text x="0.3611%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (13 samples, 0.12%)</title><rect x="0.1389%" y="437" width="0.1204%" height="15" fill="rgb(208,68,35)" fg:x="15" fg:w="13"/><text x="0.3889%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.18%)</title><rect x="0.2592%" y="437" width="0.1759%" height="15" fill="rgb(232,128,0)" fg:x="28" fg:w="19"/><text x="0.5092%" y="447.50"></text></g><g><title>&lt;ray_tracing_3d::geometry::point::Point as core::cmp::PartialEq&gt;::eq (13 samples, 0.12%)</title><rect x="0.4537%" y="437" width="0.1204%" height="15" fill="rgb(207,160,47)" fg:x="49" fg:w="13"/><text x="0.7037%" y="447.50"></text></g><g><title>&lt;ray_tracing_3d::geometry::shape::Sphere as core::cmp::PartialEq&gt;::eq (8 samples, 0.07%)</title><rect x="0.5740%" y="437" width="0.0741%" height="15" fill="rgb(228,23,34)" fg:x="62" fg:w="8"/><text x="0.8240%" y="447.50"></text></g><g><title>&lt;&amp;ray_tracing_3d::optic::color::Color as core::ops::arith::Add&gt;::add (2 samples, 0.02%)</title><rect x="0.6481%" y="421" width="0.0185%" height="15" fill="rgb(218,30,26)" fg:x="70" fg:w="2"/><text x="0.8981%" y="431.50"></text></g><g><title>&lt;&amp;ray_tracing_3d::optic::color::Color as core::ops::arith::Mul&lt;&amp;ray_tracing_3d::optic::color::DiffusionCoefficient&gt;&gt;::mul (2 samples, 0.02%)</title><rect x="0.6666%" y="421" width="0.0185%" height="15" fill="rgb(220,122,19)" fg:x="72" fg:w="2"/><text x="0.9166%" y="431.50"></text></g><g><title>&lt;&amp;ray_tracing_3d::optic::color::Color as core::ops::arith::Mul&gt;::mul (4 samples, 0.04%)</title><rect x="0.6851%" y="421" width="0.0370%" height="15" fill="rgb(250,228,42)" fg:x="74" fg:w="4"/><text x="0.9351%" y="431.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="0.7314%" y="421" width="0.0278%" height="15" fill="rgb(240,193,28)" fg:x="79" fg:w="3"/><text x="0.9814%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.02%)</title><rect x="0.7592%" y="421" width="0.0185%" height="15" fill="rgb(216,20,37)" fg:x="82" fg:w="2"/><text x="1.0092%" y="431.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::ops::range::RangeBounds&lt;T&gt;&gt;::start_bound (5 samples, 0.05%)</title><rect x="0.7777%" y="421" width="0.0463%" height="15" fill="rgb(206,188,39)" fg:x="84" fg:w="5"/><text x="1.0277%" y="431.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (21 samples, 0.19%)</title><rect x="0.8240%" y="421" width="0.1944%" height="15" fill="rgb(217,207,13)" fg:x="89" fg:w="21"/><text x="1.0740%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (31 samples, 0.29%)</title><rect x="1.0184%" y="421" width="0.2870%" height="15" fill="rgb(231,73,38)" fg:x="110" fg:w="31"/><text x="1.2684%" y="431.50"></text></g><g><title>&lt;ray_tracing_3d::optic::color::Color as core::cmp::PartialEq&gt;::eq (3 samples, 0.03%)</title><rect x="1.3054%" y="421" width="0.0278%" height="15" fill="rgb(225,20,46)" fg:x="141" fg:w="3"/><text x="1.5554%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="1.3332%" y="421" width="0.0185%" height="15" fill="rgb(210,31,41)" fg:x="144" fg:w="2"/><text x="1.5832%" y="431.50"></text></g><g><title>core::cmp::max_by (3 samples, 0.03%)</title><rect x="1.3702%" y="421" width="0.0278%" height="15" fill="rgb(221,200,47)" fg:x="148" fg:w="3"/><text x="1.6202%" y="431.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (3 samples, 0.03%)</title><rect x="1.4165%" y="421" width="0.0278%" height="15" fill="rgb(226,26,5)" fg:x="153" fg:w="3"/><text x="1.6665%" y="431.50"></text></g><g><title>core::ops::range::RangeBounds::contains (3 samples, 0.03%)</title><rect x="1.4443%" y="421" width="0.0278%" height="15" fill="rgb(249,33,26)" fg:x="156" fg:w="3"/><text x="1.6943%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::set_len_on_drop::SetLenOnDrop&gt; (2 samples, 0.02%)</title><rect x="1.4813%" y="421" width="0.0185%" height="15" fill="rgb(235,183,28)" fg:x="160" fg:w="2"/><text x="1.7313%" y="431.50"></text></g><g><title>ray_tracing_3d::geometry::ray::Ray::first_point_hit_by_ray (56 samples, 0.52%)</title><rect x="1.5091%" y="421" width="0.5185%" height="15" fill="rgb(221,5,38)" fg:x="163" fg:w="56"/><text x="1.7591%" y="431.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::new_from_points (3 samples, 0.03%)</title><rect x="2.0276%" y="421" width="0.0278%" height="15" fill="rgb(247,18,42)" fg:x="219" fg:w="3"/><text x="2.2776%" y="431.50"></text></g><g><title>[[heap]] (156 samples, 1.44%)</title><rect x="0.6481%" y="437" width="1.4443%" height="15" fill="rgb(241,131,45)" fg:x="70" fg:w="156"/><text x="0.8981%" y="447.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powi (3 samples, 0.03%)</title><rect x="2.0646%" y="421" width="0.0278%" height="15" fill="rgb(249,31,29)" fg:x="223" fg:w="3"/><text x="2.3146%" y="431.50"></text></g><g><title>&lt;&amp;ray_tracing_3d::geometry::point::Point as core::ops::arith::Sub&gt;::sub (18 samples, 0.17%)</title><rect x="2.0924%" y="421" width="0.1667%" height="15" fill="rgb(225,111,53)" fg:x="226" fg:w="18"/><text x="2.3424%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.02%)</title><rect x="2.2683%" y="421" width="0.0185%" height="15" fill="rgb(238,160,17)" fg:x="245" fg:w="2"/><text x="2.5183%" y="431.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="2.2868%" y="421" width="0.0278%" height="15" fill="rgb(214,148,48)" fg:x="247" fg:w="3"/><text x="2.5368%" y="431.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.09%)</title><rect x="2.3146%" y="421" width="0.0926%" height="15" fill="rgb(232,36,49)" fg:x="250" fg:w="10"/><text x="2.5646%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (49 samples, 0.45%)</title><rect x="2.4164%" y="421" width="0.4537%" height="15" fill="rgb(209,103,24)" fg:x="261" fg:w="49"/><text x="2.6664%" y="431.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_next (2 samples, 0.02%)</title><rect x="2.8701%" y="421" width="0.0185%" height="15" fill="rgb(229,88,8)" fg:x="310" fg:w="2"/><text x="3.1201%" y="431.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (66 samples, 0.61%)</title><rect x="2.8979%" y="421" width="0.6111%" height="15" fill="rgb(213,181,19)" fg:x="313" fg:w="66"/><text x="3.1479%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (2 samples, 0.02%)</title><rect x="3.5089%" y="421" width="0.0185%" height="15" fill="rgb(254,191,54)" fg:x="379" fg:w="2"/><text x="3.7589%" y="431.50"></text></g><g><title>&lt;rand::distributions::uniform::Uniform&lt;X&gt; as rand::distributions::distribution::Distribution&lt;X&gt;&gt;::sample (4 samples, 0.04%)</title><rect x="3.5367%" y="421" width="0.0370%" height="15" fill="rgb(241,83,37)" fg:x="382" fg:w="4"/><text x="3.7867%" y="431.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformFloat&lt;f64&gt; as rand::distributions::uniform::UniformSampler&gt;::new (2 samples, 0.02%)</title><rect x="3.5737%" y="421" width="0.0185%" height="15" fill="rgb(233,36,39)" fg:x="386" fg:w="2"/><text x="3.8237%" y="431.50"></text></g><g><title>&lt;rand_xorshift::XorShiftRng as rand_core::RngCore&gt;::next_u64 (4 samples, 0.04%)</title><rect x="3.5923%" y="421" width="0.0370%" height="15" fill="rgb(226,3,54)" fg:x="388" fg:w="4"/><text x="3.8423%" y="431.50"></text></g><g><title>&lt;ray_tracing_3d::geometry::shape::Sphere as core::cmp::PartialEq&gt;::eq (13 samples, 0.12%)</title><rect x="3.6293%" y="421" width="0.1204%" height="15" fill="rgb(245,192,40)" fg:x="392" fg:w="13"/><text x="3.8793%" y="431.50"></text></g><g><title>&lt;u64 as core::iter::range::Step&gt;::forward_unchecked (2 samples, 0.02%)</title><rect x="3.7497%" y="421" width="0.0185%" height="15" fill="rgb(238,167,29)" fg:x="405" fg:w="2"/><text x="3.9997%" y="431.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4 samples, 0.04%)</title><rect x="3.7682%" y="421" width="0.0370%" height="15" fill="rgb(232,182,51)" fg:x="407" fg:w="4"/><text x="4.0182%" y="431.50"></text></g><g><title>[libc.so.6] (11 samples, 0.10%)</title><rect x="3.8052%" y="421" width="0.1018%" height="15" fill="rgb(231,60,39)" fg:x="411" fg:w="11"/><text x="4.0552%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.05%)</title><rect x="3.9163%" y="421" width="0.0463%" height="15" fill="rgb(208,69,12)" fg:x="423" fg:w="5"/><text x="4.1663%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.02%)</title><rect x="3.9626%" y="421" width="0.0185%" height="15" fill="rgb(235,93,37)" fg:x="428" fg:w="2"/><text x="4.2126%" y="431.50"></text></g><g><title>core::cmp::PartialEq::ne (8 samples, 0.07%)</title><rect x="4.0181%" y="421" width="0.0741%" height="15" fill="rgb(213,116,39)" fg:x="434" fg:w="8"/><text x="4.2681%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (3 samples, 0.03%)</title><rect x="4.0922%" y="421" width="0.0278%" height="15" fill="rgb(222,207,29)" fg:x="442" fg:w="3"/><text x="4.3422%" y="431.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::from_bits (3 samples, 0.03%)</title><rect x="4.1200%" y="421" width="0.0278%" height="15" fill="rgb(206,96,30)" fg:x="445" fg:w="3"/><text x="4.3700%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::filter (2 samples, 0.02%)</title><rect x="4.1570%" y="421" width="0.0185%" height="15" fill="rgb(218,138,4)" fg:x="449" fg:w="2"/><text x="4.4070%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (36 samples, 0.33%)</title><rect x="4.1755%" y="421" width="0.3333%" height="15" fill="rgb(250,191,14)" fg:x="451" fg:w="36"/><text x="4.4255%" y="431.50"></text></g><g><title>core::ops::range::RangeBounds::contains (5 samples, 0.05%)</title><rect x="4.5088%" y="421" width="0.0463%" height="15" fill="rgb(239,60,40)" fg:x="487" fg:w="5"/><text x="4.7588%" y="431.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::contains (24 samples, 0.22%)</title><rect x="4.5551%" y="421" width="0.2222%" height="15" fill="rgb(206,27,48)" fg:x="492" fg:w="24"/><text x="4.8051%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;ray_tracing_3d::geometry::point::Point&gt;&gt; (2 samples, 0.02%)</title><rect x="4.8051%" y="421" width="0.0185%" height="15" fill="rgb(225,35,8)" fg:x="519" fg:w="2"/><text x="5.0551%" y="431.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u64&gt; for rand::distributions::Standard&gt;::sample (6 samples, 0.06%)</title><rect x="4.8329%" y="421" width="0.0556%" height="15" fill="rgb(250,213,24)" fg:x="522" fg:w="6"/><text x="5.0829%" y="431.50"></text></g><g><title>rand::rng::Rng::gen (3 samples, 0.03%)</title><rect x="4.8884%" y="421" width="0.0278%" height="15" fill="rgb(247,123,22)" fg:x="528" fg:w="3"/><text x="5.1384%" y="431.50"></text></g><g><title>rand_core::impls::next_u64_via_u32 (4 samples, 0.04%)</title><rect x="4.9162%" y="421" width="0.0370%" height="15" fill="rgb(231,138,38)" fg:x="531" fg:w="4"/><text x="5.1662%" y="431.50"></text></g><g><title>ray_tracing_3d::geometry::ray::Ray::cos_weighted_random_ray_unit_sphere (7 samples, 0.06%)</title><rect x="4.9532%" y="421" width="0.0648%" height="15" fill="rgb(231,145,46)" fg:x="535" fg:w="7"/><text x="5.2032%" y="431.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="4.9995%" y="405" width="0.0185%" height="15" fill="rgb(251,118,11)" fg:x="540" fg:w="2"/><text x="5.2495%" y="415.50"></text></g><g><title>ray_tracing_3d::geometry::ray::Ray::first_point_hit_by_ray (17 samples, 0.16%)</title><rect x="5.0181%" y="421" width="0.1574%" height="15" fill="rgb(217,147,25)" fg:x="542" fg:w="17"/><text x="5.2681%" y="431.50"></text></g><g><title>ray_tracing_3d::geometry::ray::Ray::first_point_hit_by_ray::_{{closure}} (18 samples, 0.17%)</title><rect x="5.1754%" y="421" width="0.1667%" height="15" fill="rgb(247,81,37)" fg:x="559" fg:w="18"/><text x="5.4254%" y="431.50"></text></g><g><title>ray_tracing_3d::geometry::ray::Ray::intersect (124 samples, 1.15%)</title><rect x="5.3421%" y="421" width="1.1480%" height="15" fill="rgb(209,12,38)" fg:x="577" fg:w="124"/><text x="5.5921%" y="431.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::new_from_points (18 samples, 0.17%)</title><rect x="6.4901%" y="421" width="0.1667%" height="15" fill="rgb(227,1,9)" fg:x="701" fg:w="18"/><text x="6.7401%" y="431.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::normalize (32 samples, 0.30%)</title><rect x="6.6568%" y="421" width="0.2963%" height="15" fill="rgb(248,47,43)" fg:x="719" fg:w="32"/><text x="6.9068%" y="431.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::norme (3 samples, 0.03%)</title><rect x="6.9531%" y="421" width="0.0278%" height="15" fill="rgb(221,10,30)" fg:x="751" fg:w="3"/><text x="7.2031%" y="431.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::norme_vec (15 samples, 0.14%)</title><rect x="6.9808%" y="421" width="0.1389%" height="15" fill="rgb(210,229,1)" fg:x="754" fg:w="15"/><text x="7.2308%" y="431.50"></text></g><g><title>ray_tracing_3d::optic::color::Color::new (13 samples, 0.12%)</title><rect x="7.1197%" y="421" width="0.1204%" height="15" fill="rgb(222,148,37)" fg:x="769" fg:w="13"/><text x="7.3697%" y="431.50"></text></g><g><title>ray_tracing_3d::optic::image::Grid::trace_pixel_color (18 samples, 0.17%)</title><rect x="7.2401%" y="421" width="0.1667%" height="15" fill="rgb(234,67,33)" fg:x="782" fg:w="18"/><text x="7.4901%" y="431.50"></text></g><g><title>ray_tracing_3d::optic::image::get_background_color (6 samples, 0.06%)</title><rect x="7.4067%" y="421" width="0.0556%" height="15" fill="rgb(247,98,35)" fg:x="800" fg:w="6"/><text x="7.6567%" y="431.50"></text></g><g><title>realloc (3 samples, 0.03%)</title><rect x="7.4623%" y="421" width="0.0278%" height="15" fill="rgb(247,138,52)" fg:x="806" fg:w="3"/><text x="7.7123%" y="431.50"></text></g><g><title>[[stack]] (585 samples, 5.42%)</title><rect x="2.0924%" y="437" width="5.4162%" height="15" fill="rgb(213,79,30)" fg:x="226" fg:w="585"/><text x="2.3424%" y="447.50">[[stack..</text></g><g><title>std::f64::&lt;impl f64&gt;::powi (2 samples, 0.02%)</title><rect x="7.4900%" y="421" width="0.0185%" height="15" fill="rgb(246,177,23)" fg:x="809" fg:w="2"/><text x="7.7400%" y="431.50"></text></g><g><title>[ld-linux-x86-64.so.2] (5 samples, 0.05%)</title><rect x="7.5086%" y="437" width="0.0463%" height="15" fill="rgb(230,62,27)" fg:x="811" fg:w="5"/><text x="7.7586%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.02%)</title><rect x="7.5641%" y="421" width="0.0185%" height="15" fill="rgb(216,154,8)" fg:x="817" fg:w="2"/><text x="7.8141%" y="431.50"></text></g><g><title>[ray_tracing_3d] (4 samples, 0.04%)</title><rect x="7.5549%" y="437" width="0.0370%" height="15" fill="rgb(244,35,45)" fg:x="816" fg:w="4"/><text x="7.8049%" y="447.50"></text></g><g><title>&lt;&amp;ray_tracing_3d::geometry::point::Point as core::ops::arith::Sub&gt;::sub (2 samples, 0.02%)</title><rect x="7.5919%" y="421" width="0.0185%" height="15" fill="rgb(251,115,12)" fg:x="820" fg:w="2"/><text x="7.8419%" y="431.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="7.6197%" y="421" width="0.0185%" height="15" fill="rgb(240,54,50)" fg:x="823" fg:w="2"/><text x="7.8697%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (4 samples, 0.04%)</title><rect x="7.6660%" y="421" width="0.0370%" height="15" fill="rgb(233,84,52)" fg:x="828" fg:w="4"/><text x="7.9160%" y="431.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (3 samples, 0.03%)</title><rect x="7.6752%" y="405" width="0.0278%" height="15" fill="rgb(207,117,47)" fg:x="829" fg:w="3"/><text x="7.9252%" y="415.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_next (2 samples, 0.02%)</title><rect x="7.7400%" y="421" width="0.0185%" height="15" fill="rgb(249,43,39)" fg:x="836" fg:w="2"/><text x="7.9900%" y="431.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (42 samples, 0.39%)</title><rect x="7.7585%" y="421" width="0.3889%" height="15" fill="rgb(209,38,44)" fg:x="838" fg:w="42"/><text x="8.0085%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (2 samples, 0.02%)</title><rect x="8.1474%" y="421" width="0.0185%" height="15" fill="rgb(236,212,23)" fg:x="880" fg:w="2"/><text x="8.3974%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="8.1659%" y="421" width="0.0185%" height="15" fill="rgb(242,79,21)" fg:x="882" fg:w="2"/><text x="8.4159%" y="431.50"></text></g><g><title>&lt;f64 as float_cmp::eq::ApproxEq&gt;::approx_eq (2 samples, 0.02%)</title><rect x="8.1844%" y="421" width="0.0185%" height="15" fill="rgb(211,96,35)" fg:x="884" fg:w="2"/><text x="8.4344%" y="431.50"></text></g><g><title>&lt;f64 as num_traits::cast::NumCast&gt;::from (7 samples, 0.06%)</title><rect x="8.2029%" y="421" width="0.0648%" height="15" fill="rgb(253,215,40)" fg:x="886" fg:w="7"/><text x="8.4529%" y="431.50"></text></g><g><title>&lt;f64 as num_traits::identities::One&gt;::one (2 samples, 0.02%)</title><rect x="8.2863%" y="421" width="0.0185%" height="15" fill="rgb(211,81,21)" fg:x="895" fg:w="2"/><text x="8.5363%" y="431.50"></text></g><g><title>&lt;rand::distributions::uniform::Uniform&lt;X&gt; as rand::distributions::distribution::Distribution&lt;X&gt;&gt;::sample (2 samples, 0.02%)</title><rect x="8.3048%" y="421" width="0.0185%" height="15" fill="rgb(208,190,38)" fg:x="897" fg:w="2"/><text x="8.5548%" y="431.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformFloat&lt;f64&gt; as rand::distributions::uniform::UniformSampler&gt;::sample (5 samples, 0.05%)</title><rect x="8.3233%" y="421" width="0.0463%" height="15" fill="rgb(235,213,38)" fg:x="899" fg:w="5"/><text x="8.5733%" y="431.50"></text></g><g><title>&lt;rand_distr::unit_sphere::UnitSphere as rand::distributions::distribution::Distribution&lt;[F: 3]&gt;&gt;::sample (20 samples, 0.19%)</title><rect x="8.3696%" y="421" width="0.1852%" height="15" fill="rgb(237,122,38)" fg:x="904" fg:w="20"/><text x="8.6196%" y="431.50"></text></g><g><title>&lt;rand_xorshift::XorShiftRng as rand_core::RngCore&gt;::next_u32 (10 samples, 0.09%)</title><rect x="8.5548%" y="421" width="0.0926%" height="15" fill="rgb(244,218,35)" fg:x="924" fg:w="10"/><text x="8.8048%" y="431.50"></text></g><g><title>&lt;ray_tracing_3d::geometry::point::Point as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="8.6473%" y="421" width="0.0185%" height="15" fill="rgb(240,68,47)" fg:x="934" fg:w="2"/><text x="8.8973%" y="431.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (5 samples, 0.05%)</title><rect x="8.6751%" y="421" width="0.0463%" height="15" fill="rgb(210,16,53)" fg:x="937" fg:w="5"/><text x="8.9251%" y="431.50"></text></g><g><title>[libc.so.6] (8 samples, 0.07%)</title><rect x="8.7399%" y="421" width="0.0741%" height="15" fill="rgb(235,124,12)" fg:x="944" fg:w="8"/><text x="8.9899%" y="431.50"></text></g><g><title>__rdl_realloc (2 samples, 0.02%)</title><rect x="8.8233%" y="421" width="0.0185%" height="15" fill="rgb(224,169,11)" fg:x="953" fg:w="2"/><text x="9.0733%" y="431.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2 samples, 0.02%)</title><rect x="8.8233%" y="405" width="0.0185%" height="15" fill="rgb(250,166,2)" fg:x="953" fg:w="2"/><text x="9.0733%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.04%)</title><rect x="8.8418%" y="421" width="0.0370%" height="15" fill="rgb(242,216,29)" fg:x="955" fg:w="4"/><text x="9.0918%" y="431.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="8.8603%" y="405" width="0.0185%" height="15" fill="rgb(230,116,27)" fg:x="957" fg:w="2"/><text x="9.1103%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (3 samples, 0.03%)</title><rect x="8.9158%" y="421" width="0.0278%" height="15" fill="rgb(228,99,48)" fg:x="963" fg:w="3"/><text x="9.1658%" y="431.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="8.9436%" y="421" width="0.0185%" height="15" fill="rgb(253,11,6)" fg:x="966" fg:w="2"/><text x="9.1936%" y="431.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (2 samples, 0.02%)</title><rect x="8.9621%" y="421" width="0.0185%" height="15" fill="rgb(247,143,39)" fg:x="968" fg:w="2"/><text x="9.2121%" y="431.50"></text></g><g><title>core::cmp::max_by (2 samples, 0.02%)</title><rect x="8.9806%" y="421" width="0.0185%" height="15" fill="rgb(236,97,10)" fg:x="970" fg:w="2"/><text x="9.2306%" y="431.50"></text></g><g><title>core::ops::range::RangeBounds::contains (20 samples, 0.19%)</title><rect x="9.0084%" y="421" width="0.1852%" height="15" fill="rgb(233,208,19)" fg:x="973" fg:w="20"/><text x="9.2584%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;ray_tracing_3d::geometry::point::Point,alloc::alloc::Global&gt;&gt; (2 samples, 0.02%)</title><rect x="9.2029%" y="421" width="0.0185%" height="15" fill="rgb(216,164,2)" fg:x="994" fg:w="2"/><text x="9.4529%" y="431.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="9.2306%" y="421" width="0.0185%" height="15" fill="rgb(220,129,5)" fg:x="997" fg:w="2"/><text x="9.4806%" y="431.50"></text></g><g><title>rand::rng::Rng::gen (4 samples, 0.04%)</title><rect x="9.2677%" y="421" width="0.0370%" height="15" fill="rgb(242,17,10)" fg:x="1001" fg:w="4"/><text x="9.5177%" y="431.50"></text></g><g><title>rand_core::impls::next_u64_via_u32 (5 samples, 0.05%)</title><rect x="9.3047%" y="421" width="0.0463%" height="15" fill="rgb(242,107,0)" fg:x="1005" fg:w="5"/><text x="9.5547%" y="431.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::normalize (42 samples, 0.39%)</title><rect x="9.3510%" y="421" width="0.3889%" height="15" fill="rgb(251,28,31)" fg:x="1010" fg:w="42"/><text x="9.6010%" y="431.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::norme (34 samples, 0.31%)</title><rect x="9.7398%" y="421" width="0.3148%" height="15" fill="rgb(233,223,10)" fg:x="1052" fg:w="34"/><text x="9.9898%" y="431.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::norme_vec (33 samples, 0.31%)</title><rect x="10.0546%" y="421" width="0.3055%" height="15" fill="rgb(215,21,27)" fg:x="1086" fg:w="33"/><text x="10.3046%" y="431.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::scalar_product (2 samples, 0.02%)</title><rect x="10.3602%" y="421" width="0.0185%" height="15" fill="rgb(232,23,21)" fg:x="1119" fg:w="2"/><text x="10.6102%" y="431.50"></text></g><g><title>ray_tracing_3d::optic::image::Grid::ray_eye_pixel_point (5 samples, 0.05%)</title><rect x="10.3879%" y="421" width="0.0463%" height="15" fill="rgb(244,5,23)" fg:x="1122" fg:w="5"/><text x="10.6379%" y="431.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powi (2 samples, 0.02%)</title><rect x="10.4342%" y="421" width="0.0185%" height="15" fill="rgb(226,81,46)" fg:x="1127" fg:w="2"/><text x="10.6842%" y="431.50"></text></g><g><title>[unknown] (312 samples, 2.89%)</title><rect x="7.5919%" y="437" width="2.8886%" height="15" fill="rgb(247,70,30)" fg:x="820" fg:w="312"/><text x="7.8419%" y="447.50">[u..</text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (3 samples, 0.03%)</title><rect x="10.4527%" y="421" width="0.0278%" height="15" fill="rgb(212,68,19)" fg:x="1129" fg:w="3"/><text x="10.7027%" y="431.50"></text></g><g><title>&lt;ray_tracing_3d::optic::image::Grid as core::default::Default&gt;::default (2 samples, 0.02%)</title><rect x="10.4805%" y="261" width="0.0185%" height="15" fill="rgb(240,187,13)" fg:x="1132" fg:w="2"/><text x="10.7305%" y="271.50"></text></g><g><title>alloc::vec::from_elem (2 samples, 0.02%)</title><rect x="10.4805%" y="245" width="0.0185%" height="15" fill="rgb(223,113,26)" fg:x="1132" fg:w="2"/><text x="10.7305%" y="255.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (2 samples, 0.02%)</title><rect x="10.4805%" y="229" width="0.0185%" height="15" fill="rgb(206,192,2)" fg:x="1132" fg:w="2"/><text x="10.7305%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (2 samples, 0.02%)</title><rect x="10.4805%" y="213" width="0.0185%" height="15" fill="rgb(241,108,4)" fg:x="1132" fg:w="2"/><text x="10.7305%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (5 samples, 0.05%)</title><rect x="10.6101%" y="229" width="0.0463%" height="15" fill="rgb(247,173,49)" fg:x="1146" fg:w="5"/><text x="10.8601%" y="239.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (4 samples, 0.04%)</title><rect x="10.6194%" y="213" width="0.0370%" height="15" fill="rgb(224,114,35)" fg:x="1147" fg:w="4"/><text x="10.8694%" y="223.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (4 samples, 0.04%)</title><rect x="10.6194%" y="197" width="0.0370%" height="15" fill="rgb(245,159,27)" fg:x="1147" fg:w="4"/><text x="10.8694%" y="207.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (4 samples, 0.04%)</title><rect x="10.6194%" y="181" width="0.0370%" height="15" fill="rgb(245,172,44)" fg:x="1147" fg:w="4"/><text x="10.8694%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (13 samples, 0.12%)</title><rect x="10.6009%" y="245" width="0.1204%" height="15" fill="rgb(236,23,11)" fg:x="1145" fg:w="13"/><text x="10.8509%" y="255.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (7 samples, 0.06%)</title><rect x="10.6564%" y="229" width="0.0648%" height="15" fill="rgb(205,117,38)" fg:x="1151" fg:w="7"/><text x="10.9064%" y="239.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (7 samples, 0.06%)</title><rect x="10.6564%" y="213" width="0.0648%" height="15" fill="rgb(237,72,25)" fg:x="1151" fg:w="7"/><text x="10.9064%" y="223.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.03%)</title><rect x="10.7212%" y="245" width="0.0278%" height="15" fill="rgb(244,70,9)" fg:x="1158" fg:w="3"/><text x="10.9712%" y="255.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (7 samples, 0.06%)</title><rect x="10.7490%" y="245" width="0.0648%" height="15" fill="rgb(217,125,39)" fg:x="1161" fg:w="7"/><text x="10.9990%" y="255.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (6 samples, 0.06%)</title><rect x="10.7583%" y="229" width="0.0556%" height="15" fill="rgb(235,36,10)" fg:x="1162" fg:w="6"/><text x="11.0083%" y="239.50"></text></g><g><title>&lt;&amp;ray_tracing_3d::optic::color::Color as core::ops::arith::Add&gt;::add (35 samples, 0.32%)</title><rect x="13.9987%" y="229" width="0.3240%" height="15" fill="rgb(251,123,47)" fg:x="1512" fg:w="35"/><text x="14.2487%" y="239.50"></text></g><g><title>&lt;&amp;ray_tracing_3d::optic::color::Color as core::ops::arith::Mul&lt;&amp;ray_tracing_3d::optic::color::DiffusionCoefficient&gt;&gt;::mul (9 samples, 0.08%)</title><rect x="14.3227%" y="229" width="0.0833%" height="15" fill="rgb(221,13,13)" fg:x="1547" fg:w="9"/><text x="14.5727%" y="239.50"></text></g><g><title>&lt;&amp;ray_tracing_3d::optic::color::DiffusionCoefficient as core::ops::arith::Mul&lt;&amp;ray_tracing_3d::optic::color::Color&gt;&gt;::mul (9 samples, 0.08%)</title><rect x="14.3227%" y="213" width="0.0833%" height="15" fill="rgb(238,131,9)" fg:x="1547" fg:w="9"/><text x="14.5727%" y="223.50"></text></g><g><title>&lt;&amp;ray_tracing_3d::optic::color::Color as core::ops::arith::Mul&lt;f64&gt;&gt;::mul (11 samples, 0.10%)</title><rect x="14.4061%" y="229" width="0.1018%" height="15" fill="rgb(211,50,8)" fg:x="1556" fg:w="11"/><text x="14.6561%" y="239.50"></text></g><g><title>&lt;&amp;ray_tracing_3d::optic::color::Color as core::ops::arith::Mul&gt;::mul (3 samples, 0.03%)</title><rect x="14.5079%" y="229" width="0.0278%" height="15" fill="rgb(245,182,24)" fg:x="1567" fg:w="3"/><text x="14.7579%" y="239.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (63 samples, 0.58%)</title><rect x="14.5357%" y="229" width="0.5833%" height="15" fill="rgb(242,14,37)" fg:x="1570" fg:w="63"/><text x="14.7857%" y="239.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="15.1745%" y="213" width="0.0185%" height="15" fill="rgb(246,228,12)" fg:x="1639" fg:w="2"/><text x="15.4245%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (9 samples, 0.08%)</title><rect x="15.1190%" y="229" width="0.0833%" height="15" fill="rgb(213,55,15)" fg:x="1633" fg:w="9"/><text x="15.3690%" y="239.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (8 samples, 0.07%)</title><rect x="15.5263%" y="213" width="0.0741%" height="15" fill="rgb(209,9,3)" fg:x="1677" fg:w="8"/><text x="15.7763%" y="223.50"></text></g><g><title>core::mem::zeroed (5 samples, 0.05%)</title><rect x="15.6004%" y="213" width="0.0463%" height="15" fill="rgb(230,59,30)" fg:x="1685" fg:w="5"/><text x="15.8504%" y="223.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::zeroed (5 samples, 0.05%)</title><rect x="15.6004%" y="197" width="0.0463%" height="15" fill="rgb(209,121,21)" fg:x="1685" fg:w="5"/><text x="15.8504%" y="207.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (5 samples, 0.05%)</title><rect x="15.6004%" y="181" width="0.0463%" height="15" fill="rgb(220,109,13)" fg:x="1685" fg:w="5"/><text x="15.8504%" y="191.50"></text></g><g><title>core::intrinsics::write_bytes (2 samples, 0.02%)</title><rect x="15.6282%" y="165" width="0.0185%" height="15" fill="rgb(232,18,1)" fg:x="1688" fg:w="2"/><text x="15.8782%" y="175.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::wrapping_byte_sub (2 samples, 0.02%)</title><rect x="15.6467%" y="213" width="0.0185%" height="15" fill="rgb(215,41,42)" fg:x="1690" fg:w="2"/><text x="15.8967%" y="223.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::wrapping_sub (2 samples, 0.02%)</title><rect x="15.6467%" y="197" width="0.0185%" height="15" fill="rgb(224,123,36)" fg:x="1690" fg:w="2"/><text x="15.8967%" y="207.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (2 samples, 0.02%)</title><rect x="15.6467%" y="181" width="0.0185%" height="15" fill="rgb(240,125,3)" fg:x="1690" fg:w="2"/><text x="15.8967%" y="191.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (9 samples, 0.08%)</title><rect x="15.6652%" y="213" width="0.0833%" height="15" fill="rgb(205,98,50)" fg:x="1692" fg:w="9"/><text x="15.9152%" y="223.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (61 samples, 0.56%)</title><rect x="15.2023%" y="229" width="0.5648%" height="15" fill="rgb(205,185,37)" fg:x="1642" fg:w="61"/><text x="15.4523%" y="239.50"></text></g><g><title>core::ptr::read (2 samples, 0.02%)</title><rect x="15.7485%" y="213" width="0.0185%" height="15" fill="rgb(238,207,15)" fg:x="1701" fg:w="2"/><text x="15.9985%" y="223.50"></text></g><g><title>[libc.so.6] (68 samples, 0.63%)</title><rect x="16.1004%" y="213" width="0.6296%" height="15" fill="rgb(213,199,42)" fg:x="1739" fg:w="68"/><text x="16.3504%" y="223.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (113 samples, 1.05%)</title><rect x="15.7671%" y="229" width="1.0462%" height="15" fill="rgb(235,201,11)" fg:x="1703" fg:w="113"/><text x="16.0171%" y="239.50"></text></g><g><title>memcpy@plt (9 samples, 0.08%)</title><rect x="16.7299%" y="213" width="0.0833%" height="15" fill="rgb(207,46,11)" fg:x="1807" fg:w="9"/><text x="16.9799%" y="223.50"></text></g><g><title>&lt;ray_tracing_3d::optic::color::Color as core::cmp::PartialEq&gt;::eq (16 samples, 0.15%)</title><rect x="16.8133%" y="229" width="0.1481%" height="15" fill="rgb(241,35,35)" fg:x="1816" fg:w="16"/><text x="17.0633%" y="239.50"></text></g><g><title>[libc.so.6] (13 samples, 0.12%)</title><rect x="16.9614%" y="229" width="0.1204%" height="15" fill="rgb(243,32,47)" fg:x="1832" fg:w="13"/><text x="17.2114%" y="239.50"></text></g><g><title>&lt;u64 as core::iter::range::Step&gt;::forward_unchecked (4 samples, 0.04%)</title><rect x="17.3873%" y="197" width="0.0370%" height="15" fill="rgb(247,202,23)" fg:x="1878" fg:w="4"/><text x="17.6373%" y="207.50"></text></g><g><title>core::mem::replace (2 samples, 0.02%)</title><rect x="17.4243%" y="197" width="0.0185%" height="15" fill="rgb(219,102,11)" fg:x="1882" fg:w="2"/><text x="17.6743%" y="207.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="17.4243%" y="181" width="0.0185%" height="15" fill="rgb(243,110,44)" fg:x="1882" fg:w="2"/><text x="17.6743%" y="191.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::next (56 samples, 0.52%)</title><rect x="17.0818%" y="229" width="0.5185%" height="15" fill="rgb(222,74,54)" fg:x="1845" fg:w="56"/><text x="17.3318%" y="239.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_next (53 samples, 0.49%)</title><rect x="17.1095%" y="213" width="0.4907%" height="15" fill="rgb(216,99,12)" fg:x="1848" fg:w="53"/><text x="17.3595%" y="223.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::is_empty (17 samples, 0.16%)</title><rect x="17.4428%" y="197" width="0.1574%" height="15" fill="rgb(226,22,26)" fg:x="1884" fg:w="17"/><text x="17.6928%" y="207.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u64&gt;::le (2 samples, 0.02%)</title><rect x="17.5817%" y="181" width="0.0185%" height="15" fill="rgb(217,163,10)" fg:x="1899" fg:w="2"/><text x="17.8317%" y="191.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::new (6 samples, 0.06%)</title><rect x="17.6002%" y="229" width="0.0556%" height="15" fill="rgb(213,25,53)" fg:x="1901" fg:w="6"/><text x="17.8502%" y="239.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (36 samples, 0.33%)</title><rect x="17.8317%" y="149" width="0.3333%" height="15" fill="rgb(252,105,26)" fg:x="1926" fg:w="36"/><text x="18.0817%" y="159.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (28 samples, 0.26%)</title><rect x="17.9057%" y="133" width="0.2592%" height="15" fill="rgb(220,39,43)" fg:x="1934" fg:w="28"/><text x="18.1557%" y="143.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (26 samples, 0.24%)</title><rect x="17.9243%" y="117" width="0.2407%" height="15" fill="rgb(229,68,48)" fg:x="1936" fg:w="26"/><text x="18.1743%" y="127.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (44 samples, 0.41%)</title><rect x="17.7854%" y="181" width="0.4074%" height="15" fill="rgb(252,8,32)" fg:x="1921" fg:w="44"/><text x="18.0354%" y="191.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (44 samples, 0.41%)</title><rect x="17.7854%" y="165" width="0.4074%" height="15" fill="rgb(223,20,43)" fg:x="1921" fg:w="44"/><text x="18.0354%" y="175.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.03%)</title><rect x="18.1650%" y="149" width="0.0278%" height="15" fill="rgb(229,81,49)" fg:x="1962" fg:w="3"/><text x="18.4150%" y="159.50"></text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (3 samples, 0.03%)</title><rect x="18.1650%" y="133" width="0.0278%" height="15" fill="rgb(236,28,36)" fg:x="1962" fg:w="3"/><text x="18.4150%" y="143.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (8 samples, 0.07%)</title><rect x="18.1928%" y="165" width="0.0741%" height="15" fill="rgb(249,185,26)" fg:x="1965" fg:w="8"/><text x="18.4428%" y="175.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (64 samples, 0.59%)</title><rect x="17.6928%" y="197" width="0.5925%" height="15" fill="rgb(249,174,33)" fg:x="1911" fg:w="64"/><text x="17.9428%" y="207.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (10 samples, 0.09%)</title><rect x="18.1928%" y="181" width="0.0926%" height="15" fill="rgb(233,201,37)" fg:x="1965" fg:w="10"/><text x="18.4428%" y="191.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (2 samples, 0.02%)</title><rect x="18.2668%" y="165" width="0.0185%" height="15" fill="rgb(221,78,26)" fg:x="1973" fg:w="2"/><text x="18.5168%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::from_raw_parts_in (6 samples, 0.06%)</title><rect x="18.3039%" y="165" width="0.0556%" height="15" fill="rgb(250,127,30)" fg:x="1977" fg:w="6"/><text x="18.5539%" y="175.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (2 samples, 0.02%)</title><rect x="18.3409%" y="149" width="0.0185%" height="15" fill="rgb(230,49,44)" fg:x="1981" fg:w="2"/><text x="18.5909%" y="159.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (2 samples, 0.02%)</title><rect x="18.3409%" y="133" width="0.0185%" height="15" fill="rgb(229,67,23)" fg:x="1981" fg:w="2"/><text x="18.5909%" y="143.50"></text></g><g><title>__rust_dealloc (3 samples, 0.03%)</title><rect x="18.4798%" y="101" width="0.0278%" height="15" fill="rgb(249,83,47)" fg:x="1996" fg:w="3"/><text x="18.7298%" y="111.50"></text></g><g><title>cfree (23 samples, 0.21%)</title><rect x="18.5075%" y="101" width="0.2129%" height="15" fill="rgb(215,43,3)" fg:x="1999" fg:w="23"/><text x="18.7575%" y="111.50"></text></g><g><title>[libc.so.6] (19 samples, 0.18%)</title><rect x="18.5446%" y="85" width="0.1759%" height="15" fill="rgb(238,154,13)" fg:x="2003" fg:w="19"/><text x="18.7946%" y="95.50"></text></g><g><title>[libc.so.6] (9 samples, 0.08%)</title><rect x="18.6372%" y="69" width="0.0833%" height="15" fill="rgb(219,56,2)" fg:x="2013" fg:w="9"/><text x="18.8872%" y="79.50"></text></g><g><title>alloc::alloc::dealloc (27 samples, 0.25%)</title><rect x="18.4798%" y="117" width="0.2500%" height="15" fill="rgb(233,0,4)" fg:x="1996" fg:w="27"/><text x="18.7298%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (36 samples, 0.33%)</title><rect x="18.4150%" y="133" width="0.3333%" height="15" fill="rgb(235,30,7)" fg:x="1989" fg:w="36"/><text x="18.6650%" y="143.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.02%)</title><rect x="18.7297%" y="117" width="0.0185%" height="15" fill="rgb(250,79,13)" fg:x="2023" fg:w="2"/><text x="18.9797%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;ray_tracing_3d::geometry::vector::Vector&gt;&gt; (127 samples, 1.18%)</title><rect x="17.6558%" y="229" width="1.1758%" height="15" fill="rgb(211,146,34)" fg:x="1907" fg:w="127"/><text x="17.9058%" y="239.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (127 samples, 1.18%)</title><rect x="17.6558%" y="213" width="1.1758%" height="15" fill="rgb(228,22,38)" fg:x="1907" fg:w="127"/><text x="17.9058%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;ray_tracing_3d::geometry::vector::Vector,alloc::alloc::Global&gt;&gt; (59 samples, 0.55%)</title><rect x="18.2853%" y="197" width="0.5462%" height="15" fill="rgb(235,168,5)" fg:x="1975" fg:w="59"/><text x="18.5353%" y="207.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (59 samples, 0.55%)</title><rect x="18.2853%" y="181" width="0.5462%" height="15" fill="rgb(221,155,16)" fg:x="1975" fg:w="59"/><text x="18.5353%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;ray_tracing_3d::geometry::vector::Vector&gt;&gt; (50 samples, 0.46%)</title><rect x="18.3687%" y="165" width="0.4629%" height="15" fill="rgb(215,215,53)" fg:x="1984" fg:w="50"/><text x="18.6187%" y="175.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.46%)</title><rect x="18.3687%" y="149" width="0.4629%" height="15" fill="rgb(223,4,10)" fg:x="1984" fg:w="50"/><text x="18.6187%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (9 samples, 0.08%)</title><rect x="18.7483%" y="133" width="0.0833%" height="15" fill="rgb(234,103,6)" fg:x="2025" fg:w="9"/><text x="18.9983%" y="143.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::cast (2 samples, 0.02%)</title><rect x="18.8131%" y="117" width="0.0185%" height="15" fill="rgb(227,97,0)" fg:x="2032" fg:w="2"/><text x="19.0631%" y="127.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (13 samples, 0.12%)</title><rect x="19.1186%" y="213" width="0.1204%" height="15" fill="rgb(234,150,53)" fg:x="2065" fg:w="13"/><text x="19.3686%" y="223.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (5 samples, 0.05%)</title><rect x="20.4148%" y="181" width="0.0463%" height="15" fill="rgb(228,201,54)" fg:x="2205" fg:w="5"/><text x="20.6648%" y="191.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (31 samples, 0.29%)</title><rect x="20.4611%" y="181" width="0.2870%" height="15" fill="rgb(222,22,37)" fg:x="2210" fg:w="31"/><text x="20.7111%" y="191.50"></text></g><g><title>&lt;f64 as core::ops::arith::Sub&gt;::sub (9 samples, 0.08%)</title><rect x="20.7481%" y="181" width="0.0833%" height="15" fill="rgb(237,53,32)" fg:x="2241" fg:w="9"/><text x="20.9981%" y="191.50"></text></g><g><title>&lt;f64 as num_traits::cast::NumCast&gt;::from (80 samples, 0.74%)</title><rect x="20.8314%" y="181" width="0.7407%" height="15" fill="rgb(233,25,53)" fg:x="2250" fg:w="80"/><text x="21.0814%" y="191.50"></text></g><g><title>&lt;f64 as num_traits::cast::ToPrimitive&gt;::to_f64 (32 samples, 0.30%)</title><rect x="21.2758%" y="165" width="0.2963%" height="15" fill="rgb(210,40,34)" fg:x="2298" fg:w="32"/><text x="21.5258%" y="175.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::sqrt (22 samples, 0.20%)</title><rect x="21.5721%" y="181" width="0.2037%" height="15" fill="rgb(241,220,44)" fg:x="2330" fg:w="22"/><text x="21.8221%" y="191.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (22 samples, 0.20%)</title><rect x="21.5721%" y="165" width="0.2037%" height="15" fill="rgb(235,28,35)" fg:x="2330" fg:w="22"/><text x="21.8221%" y="175.50"></text></g><g><title>&lt;u64 as rand::distributions::float::IntoFloat&gt;::into_float_with_exponent (16 samples, 0.15%)</title><rect x="22.3405%" y="149" width="0.1481%" height="15" fill="rgb(210,56,17)" fg:x="2413" fg:w="16"/><text x="22.5905%" y="159.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::from_bits (4 samples, 0.04%)</title><rect x="22.4516%" y="133" width="0.0370%" height="15" fill="rgb(224,130,29)" fg:x="2425" fg:w="4"/><text x="22.7016%" y="143.50"></text></g><g><title>&lt;core::num::wrapping::Wrapping&lt;u32&gt; as core::ops::bit::BitXor&gt;::bitxor (93 samples, 0.86%)</title><rect x="23.8867%" y="69" width="0.8610%" height="15" fill="rgb(235,212,8)" fg:x="2580" fg:w="93"/><text x="24.1367%" y="79.50"></text></g><g><title>&lt;core::num::wrapping::Wrapping&lt;u32&gt; as core::ops::bit::Shl&lt;usize&gt;&gt;::shl (31 samples, 0.29%)</title><rect x="24.7477%" y="69" width="0.2870%" height="15" fill="rgb(223,33,50)" fg:x="2673" fg:w="31"/><text x="24.9977%" y="79.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_shl (4 samples, 0.04%)</title><rect x="24.9977%" y="53" width="0.0370%" height="15" fill="rgb(219,149,13)" fg:x="2700" fg:w="4"/><text x="25.2477%" y="63.50"></text></g><g><title>core::num::&lt;impl u32&gt;::unchecked_shl (2 samples, 0.02%)</title><rect x="25.0162%" y="37" width="0.0185%" height="15" fill="rgb(250,156,29)" fg:x="2702" fg:w="2"/><text x="25.2662%" y="47.50"></text></g><g><title>&lt;rand_xorshift::XorShiftRng as rand_core::RngCore&gt;::next_u32 (330 samples, 3.06%)</title><rect x="22.8034%" y="85" width="3.0553%" height="15" fill="rgb(216,193,19)" fg:x="2463" fg:w="330"/><text x="23.0534%" y="95.50">&lt;ra..</text></g><g><title>&lt;core::num::wrapping::Wrapping&lt;u32&gt; as core::ops::bit::Shr&lt;usize&gt;&gt;::shr (89 samples, 0.82%)</title><rect x="25.0347%" y="69" width="0.8240%" height="15" fill="rgb(216,135,14)" fg:x="2704" fg:w="89"/><text x="25.2847%" y="79.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_shr (14 samples, 0.13%)</title><rect x="25.7291%" y="53" width="0.1296%" height="15" fill="rgb(241,47,5)" fg:x="2779" fg:w="14"/><text x="25.9791%" y="63.50"></text></g><g><title>core::num::&lt;impl u32&gt;::unchecked_shr (2 samples, 0.02%)</title><rect x="25.8402%" y="37" width="0.0185%" height="15" fill="rgb(233,42,35)" fg:x="2791" fg:w="2"/><text x="26.0902%" y="47.50"></text></g><g><title>&lt;rand::distributions::uniform::Uniform&lt;X&gt; as rand::distributions::distribution::Distribution&lt;X&gt;&gt;::sample (444 samples, 4.11%)</title><rect x="21.7758%" y="181" width="4.1107%" height="15" fill="rgb(231,13,6)" fg:x="2352" fg:w="444"/><text x="22.0258%" y="191.50">&lt;ran..</text></g><g><title>&lt;rand::distributions::uniform::UniformFloat&lt;f64&gt; as rand::distributions::uniform::UniformSampler&gt;::sample (441 samples, 4.08%)</title><rect x="21.8035%" y="165" width="4.0830%" height="15" fill="rgb(207,181,40)" fg:x="2355" fg:w="441"/><text x="22.0535%" y="175.50">&lt;ran..</text></g><g><title>rand::rng::Rng::gen (367 samples, 3.40%)</title><rect x="22.4887%" y="149" width="3.3978%" height="15" fill="rgb(254,173,49)" fg:x="2429" fg:w="367"/><text x="22.7387%" y="159.50">ran..</text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u64&gt; for rand::distributions::Standard&gt;::sample (363 samples, 3.36%)</title><rect x="22.5257%" y="133" width="3.3608%" height="15" fill="rgb(221,1,38)" fg:x="2433" fg:w="363"/><text x="22.7757%" y="143.50">ran..</text></g><g><title>&lt;rand_xorshift::XorShiftRng as rand_core::RngCore&gt;::next_u64 (359 samples, 3.32%)</title><rect x="22.5627%" y="117" width="3.3238%" height="15" fill="rgb(206,124,46)" fg:x="2437" fg:w="359"/><text x="22.8127%" y="127.50">&lt;ra..</text></g><g><title>rand_core::impls::next_u64_via_u32 (358 samples, 3.31%)</title><rect x="22.5720%" y="101" width="3.3145%" height="15" fill="rgb(249,21,11)" fg:x="2438" fg:w="358"/><text x="22.8220%" y="111.50">ran..</text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;u32&gt; for u64&gt;::from (3 samples, 0.03%)</title><rect x="25.8587%" y="85" width="0.0278%" height="15" fill="rgb(222,201,40)" fg:x="2793" fg:w="3"/><text x="26.1087%" y="95.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::ge (5 samples, 0.05%)</title><rect x="25.8865%" y="181" width="0.0463%" height="15" fill="rgb(235,61,29)" fg:x="2796" fg:w="5"/><text x="26.1365%" y="191.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (31 samples, 0.29%)</title><rect x="25.9328%" y="181" width="0.2870%" height="15" fill="rgb(219,207,3)" fg:x="2801" fg:w="31"/><text x="26.1828%" y="191.50"></text></g><g><title>&lt;f64 as rand::distributions::utils::FloatSIMDUtils&gt;::all_finite (38 samples, 0.35%)</title><rect x="26.8864%" y="149" width="0.3518%" height="15" fill="rgb(222,56,46)" fg:x="2904" fg:w="38"/><text x="27.1364%" y="159.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::is_finite (33 samples, 0.31%)</title><rect x="26.9327%" y="133" width="0.3055%" height="15" fill="rgb(239,76,54)" fg:x="2909" fg:w="33"/><text x="27.1827%" y="143.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::abs_private (12 samples, 0.11%)</title><rect x="27.1271%" y="117" width="0.1111%" height="15" fill="rgb(231,124,27)" fg:x="2930" fg:w="12"/><text x="27.3771%" y="127.50"></text></g><g><title>&lt;f64 as rand::distributions::utils::FloatSIMDUtils&gt;::ge_mask (5 samples, 0.05%)</title><rect x="27.2567%" y="149" width="0.0463%" height="15" fill="rgb(249,195,6)" fg:x="2944" fg:w="5"/><text x="27.5067%" y="159.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (876 samples, 8.11%)</title><rect x="19.2390%" y="213" width="8.1104%" height="15" fill="rgb(237,174,47)" fg:x="2078" fg:w="876"/><text x="19.4890%" y="223.50">&lt;rand::dist..</text></g><g><title>&lt;rand_distr::unit_sphere::UnitSphere as rand::distributions::distribution::Distribution&lt;[F: 3]&gt;&gt;::sample (870 samples, 8.05%)</title><rect x="19.2945%" y="197" width="8.0548%" height="15" fill="rgb(206,201,31)" fg:x="2084" fg:w="870"/><text x="19.5445%" y="207.50">&lt;rand_distr..</text></g><g><title>rand::distributions::uniform::Uniform&lt;X&gt;::new (122 samples, 1.13%)</title><rect x="26.2198%" y="181" width="1.1295%" height="15" fill="rgb(231,57,52)" fg:x="2832" fg:w="122"/><text x="26.4698%" y="191.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformFloat&lt;f64&gt; as rand::distributions::uniform::UniformSampler&gt;::new (117 samples, 1.08%)</title><rect x="26.2661%" y="165" width="1.0832%" height="15" fill="rgb(248,177,22)" fg:x="2837" fg:w="117"/><text x="26.5161%" y="175.50"></text></g><g><title>&lt;u64 as rand::distributions::float::IntoFloat&gt;::into_float_with_exponent (5 samples, 0.05%)</title><rect x="27.3030%" y="149" width="0.0463%" height="15" fill="rgb(215,211,37)" fg:x="2949" fg:w="5"/><text x="27.5530%" y="159.50"></text></g><g><title>&lt;ray_tracing_3d::geometry::vector::Vector as core::ops::arith::Add&gt;::add (3 samples, 0.03%)</title><rect x="27.3493%" y="213" width="0.0278%" height="15" fill="rgb(241,128,51)" fg:x="2954" fg:w="3"/><text x="27.5993%" y="223.50"></text></g><g><title>[libc.so.6] (37 samples, 0.34%)</title><rect x="27.3771%" y="213" width="0.3426%" height="15" fill="rgb(227,165,31)" fg:x="2957" fg:w="37"/><text x="27.6271%" y="223.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::new_from_coordinates (5 samples, 0.05%)</title><rect x="27.7289%" y="213" width="0.0463%" height="15" fill="rgb(228,167,24)" fg:x="2995" fg:w="5"/><text x="27.9789%" y="223.50"></text></g><g><title>ray_tracing_3d::geometry::ray::Ray::cos_weighted_random_ray_unit_sphere (1,147 samples, 10.62%)</title><rect x="18.8408%" y="229" width="10.6194%" height="15" fill="rgb(228,143,12)" fg:x="2035" fg:w="1147"/><text x="19.0908%" y="239.50">ray_tracing_3d:..</text></g><g><title>ray_tracing_3d::geometry::vector::Vector::normalize (182 samples, 1.69%)</title><rect x="27.7752%" y="213" width="1.6850%" height="15" fill="rgb(249,149,8)" fg:x="3000" fg:w="182"/><text x="28.0252%" y="223.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::norme_vec (76 samples, 0.70%)</title><rect x="28.7566%" y="197" width="0.7036%" height="15" fill="rgb(243,35,44)" fg:x="3106" fg:w="76"/><text x="29.0066%" y="207.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::norme (68 samples, 0.63%)</title><rect x="28.8307%" y="181" width="0.6296%" height="15" fill="rgb(246,89,9)" fg:x="3114" fg:w="68"/><text x="29.0807%" y="191.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (55 samples, 0.51%)</title><rect x="28.9510%" y="165" width="0.5092%" height="15" fill="rgb(233,213,13)" fg:x="3127" fg:w="55"/><text x="29.2010%" y="175.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (11 samples, 0.10%)</title><rect x="32.3766%" y="213" width="0.1018%" height="15" fill="rgb(233,141,41)" fg:x="3497" fg:w="11"/><text x="32.6266%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (18 samples, 0.17%)</title><rect x="32.5525%" y="197" width="0.1667%" height="15" fill="rgb(239,167,4)" fg:x="3516" fg:w="18"/><text x="32.8025%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (5 samples, 0.05%)</title><rect x="32.6729%" y="181" width="0.0463%" height="15" fill="rgb(209,217,16)" fg:x="3529" fg:w="5"/><text x="32.9229%" y="191.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (4 samples, 0.04%)</title><rect x="32.7192%" y="165" width="0.0370%" height="15" fill="rgb(219,88,35)" fg:x="3534" fg:w="4"/><text x="32.9692%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (74 samples, 0.69%)</title><rect x="32.4785%" y="213" width="0.6851%" height="15" fill="rgb(220,193,23)" fg:x="3508" fg:w="74"/><text x="32.7285%" y="223.50"></text></g><g><title>core::slice::raw::from_raw_parts (48 samples, 0.44%)</title><rect x="32.7192%" y="197" width="0.4444%" height="15" fill="rgb(230,90,52)" fg:x="3534" fg:w="48"/><text x="32.9692%" y="207.50"></text></g><g><title>core::ptr::slice_from_raw_parts (48 samples, 0.44%)</title><rect x="32.7192%" y="181" width="0.4444%" height="15" fill="rgb(252,106,19)" fg:x="3534" fg:w="48"/><text x="32.9692%" y="191.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (44 samples, 0.41%)</title><rect x="32.7562%" y="165" width="0.4074%" height="15" fill="rgb(206,74,20)" fg:x="3538" fg:w="44"/><text x="33.0062%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (3 samples, 0.03%)</title><rect x="33.2006%" y="181" width="0.0278%" height="15" fill="rgb(230,138,44)" fg:x="3586" fg:w="3"/><text x="33.4506%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (22 samples, 0.20%)</title><rect x="33.1914%" y="197" width="0.2037%" height="15" fill="rgb(235,182,43)" fg:x="3585" fg:w="22"/><text x="33.4414%" y="207.50"></text></g><g><title>core::slice::raw::from_raw_parts (18 samples, 0.17%)</title><rect x="33.2284%" y="181" width="0.1667%" height="15" fill="rgb(242,16,51)" fg:x="3589" fg:w="18"/><text x="33.4784%" y="191.50"></text></g><g><title>core::ptr::slice_from_raw_parts (18 samples, 0.17%)</title><rect x="33.2284%" y="165" width="0.1667%" height="15" fill="rgb(248,9,4)" fg:x="3589" fg:w="18"/><text x="33.4784%" y="175.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (18 samples, 0.17%)</title><rect x="33.2284%" y="149" width="0.1667%" height="15" fill="rgb(210,31,22)" fg:x="3589" fg:w="18"/><text x="33.4784%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (36 samples, 0.33%)</title><rect x="33.1636%" y="213" width="0.3333%" height="15" fill="rgb(239,54,39)" fg:x="3582" fg:w="36"/><text x="33.4136%" y="223.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (11 samples, 0.10%)</title><rect x="33.3951%" y="197" width="0.1018%" height="15" fill="rgb(230,99,41)" fg:x="3607" fg:w="11"/><text x="33.6451%" y="207.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (11 samples, 0.10%)</title><rect x="33.3951%" y="181" width="0.1018%" height="15" fill="rgb(253,106,12)" fg:x="3607" fg:w="11"/><text x="33.6451%" y="191.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (64 samples, 0.59%)</title><rect x="37.9502%" y="165" width="0.5925%" height="15" fill="rgb(213,46,41)" fg:x="4099" fg:w="64"/><text x="38.2002%" y="175.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (12 samples, 0.11%)</title><rect x="38.5427%" y="165" width="0.1111%" height="15" fill="rgb(215,133,35)" fg:x="4163" fg:w="12"/><text x="38.7927%" y="175.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (417 samples, 3.86%)</title><rect x="36.1911%" y="181" width="3.8608%" height="15" fill="rgb(213,28,5)" fg:x="3909" fg:w="417"/><text x="36.4411%" y="191.50">&lt;cor..</text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (151 samples, 1.40%)</title><rect x="38.6538%" y="165" width="1.3980%" height="15" fill="rgb(215,77,49)" fg:x="4175" fg:w="151"/><text x="38.9038%" y="175.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (33 samples, 0.31%)</title><rect x="39.7463%" y="149" width="0.3055%" height="15" fill="rgb(248,100,22)" fg:x="4293" fg:w="33"/><text x="39.9963%" y="159.50"></text></g><g><title>&lt;f64 as float_cmp::eq::ApproxEq&gt;::approx_eq (14 samples, 0.13%)</title><rect x="42.2739%" y="117" width="0.1296%" height="15" fill="rgb(208,67,9)" fg:x="4566" fg:w="14"/><text x="42.5239%" y="127.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (4 samples, 0.04%)</title><rect x="42.3664%" y="101" width="0.0370%" height="15" fill="rgb(219,133,21)" fg:x="4576" fg:w="4"/><text x="42.6164%" y="111.50"></text></g><g><title>&lt;&amp;ray_tracing_3d::geometry::point::Point as core::ops::arith::Sub&gt;::sub (35 samples, 0.32%)</title><rect x="43.0608%" y="101" width="0.3240%" height="15" fill="rgb(246,46,29)" fg:x="4651" fg:w="35"/><text x="43.3108%" y="111.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::ops::range::RangeBounds&lt;T&gt;&gt;::end_bound (19 samples, 0.18%)</title><rect x="44.6625%" y="69" width="0.1759%" height="15" fill="rgb(246,185,52)" fg:x="4824" fg:w="19"/><text x="44.9125%" y="79.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::ops::range::RangeBounds&lt;T&gt;&gt;::start_bound (11 samples, 0.10%)</title><rect x="44.8384%" y="69" width="0.1018%" height="15" fill="rgb(252,136,11)" fg:x="4843" fg:w="11"/><text x="45.0884%" y="79.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::contains (223 samples, 2.06%)</title><rect x="43.3849%" y="101" width="2.0646%" height="15" fill="rgb(219,138,53)" fg:x="4686" fg:w="223"/><text x="43.6349%" y="111.50">c..</text></g><g><title>core::ops::range::RangeBounds::contains (197 samples, 1.82%)</title><rect x="43.6256%" y="85" width="1.8239%" height="15" fill="rgb(211,51,23)" fg:x="4712" fg:w="197"/><text x="43.8756%" y="95.50">c..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (55 samples, 0.51%)</title><rect x="44.9403%" y="69" width="0.5092%" height="15" fill="rgb(247,221,28)" fg:x="4854" fg:w="55"/><text x="45.1903%" y="79.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::le (23 samples, 0.21%)</title><rect x="45.2366%" y="53" width="0.2129%" height="15" fill="rgb(251,222,45)" fg:x="4886" fg:w="23"/><text x="45.4866%" y="63.50"></text></g><g><title>&lt;ray_tracing_3d::geometry::point::Point as core::cmp::PartialEq&gt;::eq (520 samples, 4.81%)</title><rect x="42.4035%" y="117" width="4.8144%" height="15" fill="rgb(217,162,53)" fg:x="4580" fg:w="520"/><text x="42.6535%" y="127.50">&lt;ray_t..</text></g><g><title>ray_tracing_3d::geometry::vector::Vector::norme (191 samples, 1.77%)</title><rect x="45.4495%" y="101" width="1.7684%" height="15" fill="rgb(229,93,14)" fg:x="4909" fg:w="191"/><text x="45.6995%" y="111.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (140 samples, 1.30%)</title><rect x="45.9217%" y="85" width="1.2962%" height="15" fill="rgb(209,67,49)" fg:x="4960" fg:w="140"/><text x="46.1717%" y="95.50"></text></g><g><title>float_cmp::eq::F64Margin::ulps (8 samples, 0.07%)</title><rect x="47.2179%" y="117" width="0.0741%" height="15" fill="rgb(213,87,29)" fg:x="5100" fg:w="8"/><text x="47.4679%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,497 samples, 13.86%)</title><rect x="33.4969%" y="213" width="13.8598%" height="15" fill="rgb(205,151,52)" fg:x="3618" fg:w="1497"/><text x="33.7469%" y="223.50">&lt;core::iter::adapters..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (1,479 samples, 13.69%)</title><rect x="33.6635%" y="197" width="13.6932%" height="15" fill="rgb(253,215,39)" fg:x="3636" fg:w="1479"/><text x="33.9135%" y="207.50">&lt;core::slice::iter::I..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (789 samples, 7.30%)</title><rect x="40.0518%" y="181" width="7.3049%" height="15" fill="rgb(221,220,41)" fg:x="4326" fg:w="789"/><text x="40.3018%" y="191.50">core::ops:..</text></g><g><title>ray_tracing_3d::geometry::ray::Ray::first_point_hit_by_ray::_{{closure}} (749 samples, 6.93%)</title><rect x="40.4222%" y="165" width="6.9345%" height="15" fill="rgb(218,133,21)" fg:x="4366" fg:w="749"/><text x="40.6722%" y="175.50">ray_traci..</text></g><g><title>core::cmp::PartialEq::ne (605 samples, 5.60%)</title><rect x="41.7554%" y="149" width="5.6013%" height="15" fill="rgb(221,193,43)" fg:x="4510" fg:w="605"/><text x="42.0054%" y="159.50">core::c..</text></g><g><title>&lt;ray_tracing_3d::geometry::shape::Sphere as core::cmp::PartialEq&gt;::eq (580 samples, 5.37%)</title><rect x="41.9869%" y="133" width="5.3699%" height="15" fill="rgb(240,128,52)" fg:x="4535" fg:w="580"/><text x="42.2369%" y="143.50">&lt;ray_tr..</text></g><g><title>float_cmp::eq::F64Margin::zero (7 samples, 0.06%)</title><rect x="47.2919%" y="117" width="0.0648%" height="15" fill="rgb(253,114,12)" fg:x="5108" fg:w="7"/><text x="47.5419%" y="127.50"></text></g><g><title>[libc.so.6] (146 samples, 1.35%)</title><rect x="48.2918%" y="197" width="1.3517%" height="15" fill="rgb(215,223,47)" fg:x="5216" fg:w="146"/><text x="48.5418%" y="207.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (286 samples, 2.65%)</title><rect x="47.3567%" y="213" width="2.6479%" height="15" fill="rgb(248,225,23)" fg:x="5115" fg:w="286"/><text x="47.6067%" y="223.50">&lt;c..</text></g><g><title>memcpy@plt (39 samples, 0.36%)</title><rect x="49.6436%" y="197" width="0.3611%" height="15" fill="rgb(250,108,0)" fg:x="5362" fg:w="39"/><text x="49.8936%" y="207.50"></text></g><g><title>[libc.so.6] (188 samples, 1.74%)</title><rect x="50.0046%" y="213" width="1.7406%" height="15" fill="rgb(228,208,7)" fg:x="5401" fg:w="188"/><text x="50.2546%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::filter (17 samples, 0.16%)</title><rect x="51.7452%" y="213" width="0.1574%" height="15" fill="rgb(244,45,10)" fg:x="5589" fg:w="17"/><text x="51.9952%" y="223.50"></text></g><g><title>core::iter::adapters::filter::Filter&lt;I,P&gt;::new (7 samples, 0.06%)</title><rect x="51.8378%" y="197" width="0.0648%" height="15" fill="rgb(207,125,25)" fg:x="5599" fg:w="7"/><text x="52.0878%" y="207.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (4 samples, 0.04%)</title><rect x="52.4026%" y="181" width="0.0370%" height="15" fill="rgb(210,195,18)" fg:x="5660" fg:w="4"/><text x="52.6526%" y="191.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (3 samples, 0.03%)</title><rect x="52.4396%" y="181" width="0.0278%" height="15" fill="rgb(249,80,12)" fg:x="5664" fg:w="3"/><text x="52.6896%" y="191.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (64 samples, 0.59%)</title><rect x="51.9026%" y="213" width="0.5925%" height="15" fill="rgb(221,65,9)" fg:x="5606" fg:w="64"/><text x="52.1526%" y="223.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (41 samples, 0.38%)</title><rect x="52.1155%" y="197" width="0.3796%" height="15" fill="rgb(235,49,36)" fg:x="5629" fg:w="41"/><text x="52.3655%" y="207.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_ptr (3 samples, 0.03%)</title><rect x="52.4674%" y="181" width="0.0278%" height="15" fill="rgb(225,32,20)" fg:x="5667" fg:w="3"/><text x="52.7174%" y="191.50"></text></g><g><title>memcpy@plt (31 samples, 0.29%)</title><rect x="52.4951%" y="213" width="0.2870%" height="15" fill="rgb(215,141,46)" fg:x="5670" fg:w="31"/><text x="52.7451%" y="223.50"></text></g><g><title>&lt;&amp;ray_tracing_3d::geometry::point::Point as core::ops::arith::Add&lt;&amp;ray_tracing_3d::geometry::vector::Vector&gt;&gt;::add (13 samples, 0.12%)</title><rect x="58.9760%" y="197" width="0.1204%" height="15" fill="rgb(250,160,47)" fg:x="6370" fg:w="13"/><text x="59.2260%" y="207.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (140 samples, 1.30%)</title><rect x="59.0964%" y="197" width="1.2962%" height="15" fill="rgb(216,222,40)" fg:x="6383" fg:w="140"/><text x="59.3464%" y="207.50"></text></g><g><title>[libc.so.6] (397 samples, 3.68%)</title><rect x="60.3926%" y="197" width="3.6756%" height="15" fill="rgb(234,217,39)" fg:x="6523" fg:w="397"/><text x="60.6426%" y="207.50">[lib..</text></g><g><title>core::f64::&lt;impl f64&gt;::min (16 samples, 0.15%)</title><rect x="64.0681%" y="197" width="0.1481%" height="15" fill="rgb(207,178,40)" fg:x="6920" fg:w="16"/><text x="64.3181%" y="207.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::ops::range::RangeBounds&lt;T&gt;&gt;::end_bound (4 samples, 0.04%)</title><rect x="64.6144%" y="165" width="0.0370%" height="15" fill="rgb(221,136,13)" fg:x="6979" fg:w="4"/><text x="64.8644%" y="175.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::ops::range::RangeBounds&lt;T&gt;&gt;::start_bound (3 samples, 0.03%)</title><rect x="64.6514%" y="165" width="0.0278%" height="15" fill="rgb(249,199,10)" fg:x="6983" fg:w="3"/><text x="64.9014%" y="175.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::contains (76 samples, 0.70%)</title><rect x="64.2163%" y="197" width="0.7036%" height="15" fill="rgb(249,222,13)" fg:x="6936" fg:w="76"/><text x="64.4663%" y="207.50"></text></g><g><title>core::ops::range::RangeBounds::contains (71 samples, 0.66%)</title><rect x="64.2626%" y="181" width="0.6573%" height="15" fill="rgb(244,185,38)" fg:x="6941" fg:w="71"/><text x="64.5126%" y="191.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (26 samples, 0.24%)</title><rect x="64.6792%" y="165" width="0.2407%" height="15" fill="rgb(236,202,9)" fg:x="6986" fg:w="26"/><text x="64.9292%" y="175.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::le (11 samples, 0.10%)</title><rect x="64.8181%" y="149" width="0.1018%" height="15" fill="rgb(250,229,37)" fg:x="7001" fg:w="11"/><text x="65.0681%" y="159.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::new (5 samples, 0.05%)</title><rect x="64.9199%" y="197" width="0.0463%" height="15" fill="rgb(206,174,23)" fg:x="7012" fg:w="5"/><text x="65.1699%" y="207.50"></text></g><g><title>memcpy@plt (23 samples, 0.21%)</title><rect x="64.9662%" y="197" width="0.2129%" height="15" fill="rgb(211,33,43)" fg:x="7017" fg:w="23"/><text x="65.2162%" y="207.50"></text></g><g><title>ray_tracing_3d::geometry::vector::&lt;impl core::ops::arith::Mul&lt;&amp;ray_tracing_3d::geometry::vector::Vector&gt; for f64&gt;::mul (13 samples, 0.12%)</title><rect x="65.1792%" y="197" width="0.1204%" height="15" fill="rgb(245,58,50)" fg:x="7040" fg:w="13"/><text x="65.4292%" y="207.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::new_from_points (225 samples, 2.08%)</title><rect x="65.2995%" y="197" width="2.0831%" height="15" fill="rgb(244,68,36)" fg:x="7053" fg:w="225"/><text x="65.5495%" y="207.50">r..</text></g><g><title>&lt;&amp;ray_tracing_3d::geometry::point::Point as core::ops::arith::Sub&gt;::sub (110 samples, 1.02%)</title><rect x="66.3642%" y="181" width="1.0184%" height="15" fill="rgb(232,229,15)" fg:x="7168" fg:w="110"/><text x="66.6142%" y="191.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::normalize (1,401 samples, 12.97%)</title><rect x="67.3826%" y="197" width="12.9710%" height="15" fill="rgb(254,30,23)" fg:x="7278" fg:w="1401"/><text x="67.6326%" y="207.50">ray_tracing_3d::geo..</text></g><g><title>ray_tracing_3d::geometry::vector::Vector::norme_vec (467 samples, 4.32%)</title><rect x="76.0300%" y="181" width="4.3237%" height="15" fill="rgb(235,160,14)" fg:x="8212" fg:w="467"/><text x="76.2800%" y="191.50">ray_t..</text></g><g><title>ray_tracing_3d::geometry::vector::Vector::norme (452 samples, 4.18%)</title><rect x="76.1689%" y="165" width="4.1848%" height="15" fill="rgb(212,155,44)" fg:x="8227" fg:w="452"/><text x="76.4189%" y="175.50">ray_t..</text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (385 samples, 3.56%)</title><rect x="76.7892%" y="149" width="3.5645%" height="15" fill="rgb(226,2,50)" fg:x="8294" fg:w="385"/><text x="77.0392%" y="159.50">std:..</text></g><g><title>ray_tracing_3d::geometry::vector::Vector::scalar_product (253 samples, 2.34%)</title><rect x="80.3537%" y="197" width="2.3424%" height="15" fill="rgb(234,177,6)" fg:x="8679" fg:w="253"/><text x="80.6037%" y="207.50">r..</text></g><g><title>std::f64::&lt;impl f64&gt;::powi (209 samples, 1.94%)</title><rect x="82.6960%" y="197" width="1.9350%" height="15" fill="rgb(217,24,9)" fg:x="8932" fg:w="209"/><text x="82.9460%" y="207.50">s..</text></g><g><title>__powidf2 (165 samples, 1.53%)</title><rect x="83.1034%" y="181" width="1.5276%" height="15" fill="rgb(220,13,46)" fg:x="8976" fg:w="165"/><text x="83.3534%" y="191.50"></text></g><g><title>compiler_builtins::float::pow::__powidf2 (101 samples, 0.94%)</title><rect x="83.6960%" y="165" width="0.9351%" height="15" fill="rgb(239,221,27)" fg:x="9040" fg:w="101"/><text x="83.9460%" y="175.50"></text></g><g><title>compiler_builtins::float::pow::pow (101 samples, 0.94%)</title><rect x="83.6960%" y="149" width="0.9351%" height="15" fill="rgb(222,198,25)" fg:x="9040" fg:w="101"/><text x="83.9460%" y="159.50"></text></g><g><title>&lt;i32 as compiler_builtins::int::Int&gt;::abs_diff (5 samples, 0.05%)</title><rect x="84.5848%" y="133" width="0.0463%" height="15" fill="rgb(211,99,13)" fg:x="9136" fg:w="5"/><text x="84.8348%" y="143.50"></text></g><g><title>core::num::&lt;impl i32&gt;::wrapping_abs (5 samples, 0.05%)</title><rect x="84.5848%" y="117" width="0.0463%" height="15" fill="rgb(232,111,31)" fg:x="9136" fg:w="5"/><text x="84.8348%" y="127.50"></text></g><g><title>ray_tracing_3d::geometry::ray::Ray::intersect (3,445 samples, 31.90%)</title><rect x="52.7821%" y="213" width="31.8952%" height="15" fill="rgb(245,82,37)" fg:x="5701" fg:w="3445"/><text x="53.0321%" y="223.50">ray_tracing_3d::geometry::ray::Ray::intersect</text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (5 samples, 0.05%)</title><rect x="84.6311%" y="197" width="0.0463%" height="15" fill="rgb(227,149,46)" fg:x="9141" fg:w="5"/><text x="84.8811%" y="207.50"></text></g><g><title>ray_tracing_3d::geometry::ray::Ray::first_point_hit_by_ray (5,970 samples, 55.27%)</title><rect x="29.4602%" y="229" width="55.2727%" height="15" fill="rgb(218,36,50)" fg:x="3182" fg:w="5970"/><text x="29.7102%" y="239.50">ray_tracing_3d::geometry::ray::Ray::first_point_hit_by_ray</text></g><g><title>ray_tracing_3d::geometry::vector::Vector::new_from_coordinates (6 samples, 0.06%)</title><rect x="84.6773%" y="213" width="0.0556%" height="15" fill="rgb(226,80,48)" fg:x="9146" fg:w="6"/><text x="84.9273%" y="223.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::ops::range::RangeBounds&lt;T&gt;&gt;::end_bound (10 samples, 0.09%)</title><rect x="85.2421%" y="181" width="0.0926%" height="15" fill="rgb(238,224,15)" fg:x="9207" fg:w="10"/><text x="85.4921%" y="191.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::ops::range::RangeBounds&lt;T&gt;&gt;::start_bound (4 samples, 0.04%)</title><rect x="85.3347%" y="181" width="0.0370%" height="15" fill="rgb(241,136,10)" fg:x="9217" fg:w="4"/><text x="85.5847%" y="191.50"></text></g><g><title>ray_tracing_3d::optic::color::Color::new_from_color (89 samples, 0.82%)</title><rect x="84.7329%" y="229" width="0.8240%" height="15" fill="rgb(208,32,45)" fg:x="9152" fg:w="89"/><text x="84.9829%" y="239.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::contains (65 samples, 0.60%)</title><rect x="84.9551%" y="213" width="0.6018%" height="15" fill="rgb(207,135,9)" fg:x="9176" fg:w="65"/><text x="85.2051%" y="223.50"></text></g><g><title>core::ops::range::RangeBounds::contains (59 samples, 0.55%)</title><rect x="85.0106%" y="197" width="0.5462%" height="15" fill="rgb(206,86,44)" fg:x="9182" fg:w="59"/><text x="85.2606%" y="207.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (20 samples, 0.19%)</title><rect x="85.3717%" y="181" width="0.1852%" height="15" fill="rgb(245,177,15)" fg:x="9221" fg:w="20"/><text x="85.6217%" y="191.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (9 samples, 0.08%)</title><rect x="85.4736%" y="165" width="0.0833%" height="15" fill="rgb(206,64,50)" fg:x="9232" fg:w="9"/><text x="85.7236%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (11 samples, 0.10%)</title><rect x="87.1493%" y="213" width="0.1018%" height="15" fill="rgb(234,36,40)" fg:x="9413" fg:w="11"/><text x="87.3993%" y="223.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (4 samples, 0.04%)</title><rect x="87.2141%" y="197" width="0.0370%" height="15" fill="rgb(213,64,8)" fg:x="9420" fg:w="4"/><text x="87.4641%" y="207.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (9 samples, 0.08%)</title><rect x="87.5197%" y="197" width="0.0833%" height="15" fill="rgb(210,75,36)" fg:x="9453" fg:w="9"/><text x="87.7697%" y="207.50"></text></g><g><title>core::mem::zeroed (9 samples, 0.08%)</title><rect x="87.6030%" y="197" width="0.0833%" height="15" fill="rgb(229,88,21)" fg:x="9462" fg:w="9"/><text x="87.8530%" y="207.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::zeroed (9 samples, 0.08%)</title><rect x="87.6030%" y="181" width="0.0833%" height="15" fill="rgb(252,204,47)" fg:x="9462" fg:w="9"/><text x="87.8530%" y="191.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (9 samples, 0.08%)</title><rect x="87.6030%" y="165" width="0.0833%" height="15" fill="rgb(208,77,27)" fg:x="9462" fg:w="9"/><text x="87.8530%" y="175.50"></text></g><g><title>core::intrinsics::write_bytes (4 samples, 0.04%)</title><rect x="87.6493%" y="149" width="0.0370%" height="15" fill="rgb(221,76,26)" fg:x="9467" fg:w="4"/><text x="87.8993%" y="159.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (5 samples, 0.05%)</title><rect x="87.7141%" y="165" width="0.0463%" height="15" fill="rgb(225,139,18)" fg:x="9474" fg:w="5"/><text x="87.9641%" y="175.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_sub (4 samples, 0.04%)</title><rect x="87.7234%" y="149" width="0.0370%" height="15" fill="rgb(230,137,11)" fg:x="9475" fg:w="4"/><text x="87.9734%" y="159.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::wrapping_byte_sub (10 samples, 0.09%)</title><rect x="87.6863%" y="197" width="0.0926%" height="15" fill="rgb(212,28,1)" fg:x="9471" fg:w="10"/><text x="87.9363%" y="207.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::wrapping_sub (7 samples, 0.06%)</title><rect x="87.7141%" y="181" width="0.0648%" height="15" fill="rgb(248,164,17)" fg:x="9474" fg:w="7"/><text x="87.9641%" y="191.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::wrapping_offset (2 samples, 0.02%)</title><rect x="87.7604%" y="165" width="0.0185%" height="15" fill="rgb(222,171,42)" fg:x="9479" fg:w="2"/><text x="88.0104%" y="175.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (6 samples, 0.06%)</title><rect x="87.7789%" y="197" width="0.0556%" height="15" fill="rgb(243,84,45)" fg:x="9481" fg:w="6"/><text x="88.0289%" y="207.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (73 samples, 0.68%)</title><rect x="87.2512%" y="213" width="0.6759%" height="15" fill="rgb(252,49,23)" fg:x="9424" fg:w="73"/><text x="87.5012%" y="223.50"></text></g><g><title>core::ptr::read (10 samples, 0.09%)</title><rect x="87.8345%" y="197" width="0.0926%" height="15" fill="rgb(215,19,7)" fg:x="9487" fg:w="10"/><text x="88.0845%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (3 samples, 0.03%)</title><rect x="88.1585%" y="197" width="0.0278%" height="15" fill="rgb(238,81,41)" fg:x="9522" fg:w="3"/><text x="88.4085%" y="207.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (24 samples, 0.22%)</title><rect x="88.2974%" y="165" width="0.2222%" height="15" fill="rgb(210,199,37)" fg:x="9537" fg:w="24"/><text x="88.5474%" y="175.50"></text></g><g><title>core::mem::size_of (2 samples, 0.02%)</title><rect x="88.5751%" y="149" width="0.0185%" height="15" fill="rgb(244,192,49)" fg:x="9567" fg:w="2"/><text x="88.8251%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (10 samples, 0.09%)</title><rect x="88.5196%" y="165" width="0.0926%" height="15" fill="rgb(226,211,11)" fg:x="9561" fg:w="10"/><text x="88.7696%" y="175.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::cast (2 samples, 0.02%)</title><rect x="88.5936%" y="149" width="0.0185%" height="15" fill="rgb(236,162,54)" fg:x="9569" fg:w="2"/><text x="88.8436%" y="159.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (2 samples, 0.02%)</title><rect x="88.5936%" y="133" width="0.0185%" height="15" fill="rgb(220,229,9)" fg:x="9569" fg:w="2"/><text x="88.8436%" y="143.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (2 samples, 0.02%)</title><rect x="88.5936%" y="117" width="0.0185%" height="15" fill="rgb(250,87,22)" fg:x="9569" fg:w="2"/><text x="88.8436%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (9 samples, 0.08%)</title><rect x="88.6122%" y="165" width="0.0833%" height="15" fill="rgb(239,43,17)" fg:x="9571" fg:w="9"/><text x="88.8622%" y="175.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (6 samples, 0.06%)</title><rect x="88.6399%" y="149" width="0.0556%" height="15" fill="rgb(231,177,25)" fg:x="9574" fg:w="6"/><text x="88.8899%" y="159.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (2 samples, 0.02%)</title><rect x="88.6770%" y="133" width="0.0185%" height="15" fill="rgb(219,179,1)" fg:x="9578" fg:w="2"/><text x="88.9270%" y="143.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.05%)</title><rect x="89.0566%" y="117" width="0.0463%" height="15" fill="rgb(238,219,53)" fg:x="9619" fg:w="5"/><text x="89.3066%" y="127.50"></text></g><g><title>__rdl_alloc (4 samples, 0.04%)</title><rect x="89.1214%" y="101" width="0.0370%" height="15" fill="rgb(232,167,36)" fg:x="9626" fg:w="4"/><text x="89.3714%" y="111.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (4 samples, 0.04%)</title><rect x="89.1214%" y="85" width="0.0370%" height="15" fill="rgb(244,19,51)" fg:x="9626" fg:w="4"/><text x="89.3714%" y="95.50"></text></g><g><title>core::alloc::layout::Layout::align (4 samples, 0.04%)</title><rect x="89.1677%" y="101" width="0.0370%" height="15" fill="rgb(224,6,22)" fg:x="9631" fg:w="4"/><text x="89.4177%" y="111.50"></text></g><g><title>core::ptr::alignment::Alignment::as_usize (3 samples, 0.03%)</title><rect x="89.1769%" y="85" width="0.0278%" height="15" fill="rgb(224,145,5)" fg:x="9632" fg:w="3"/><text x="89.4269%" y="95.50"></text></g><g><title>alloc::alloc::alloc (22 samples, 0.20%)</title><rect x="89.1121%" y="117" width="0.2037%" height="15" fill="rgb(234,130,49)" fg:x="9625" fg:w="22"/><text x="89.3621%" y="127.50"></text></g><g><title>malloc (12 samples, 0.11%)</title><rect x="89.2047%" y="101" width="0.1111%" height="15" fill="rgb(254,6,2)" fg:x="9635" fg:w="12"/><text x="89.4547%" y="111.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (3 samples, 0.03%)</title><rect x="89.3158%" y="117" width="0.0278%" height="15" fill="rgb(208,96,46)" fg:x="9647" fg:w="3"/><text x="89.5658%" y="127.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (7 samples, 0.06%)</title><rect x="89.3436%" y="117" width="0.0648%" height="15" fill="rgb(239,3,39)" fg:x="9650" fg:w="7"/><text x="89.5936%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (54 samples, 0.50%)</title><rect x="88.9547%" y="149" width="0.5000%" height="15" fill="rgb(233,210,1)" fg:x="9608" fg:w="54"/><text x="89.2047%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (53 samples, 0.49%)</title><rect x="88.9640%" y="133" width="0.4907%" height="15" fill="rgb(244,137,37)" fg:x="9609" fg:w="53"/><text x="89.2140%" y="143.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (5 samples, 0.05%)</title><rect x="89.4084%" y="117" width="0.0463%" height="15" fill="rgb(240,136,2)" fg:x="9657" fg:w="5"/><text x="89.6584%" y="127.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (4 samples, 0.04%)</title><rect x="89.4176%" y="101" width="0.0370%" height="15" fill="rgb(239,18,37)" fg:x="9658" fg:w="4"/><text x="89.6676%" y="111.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (4 samples, 0.04%)</title><rect x="89.4176%" y="85" width="0.0370%" height="15" fill="rgb(218,185,22)" fg:x="9658" fg:w="4"/><text x="89.6676%" y="95.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.05%)</title><rect x="89.6121%" y="117" width="0.0463%" height="15" fill="rgb(225,218,4)" fg:x="9679" fg:w="5"/><text x="89.8621%" y="127.50"></text></g><g><title>alloc::alloc::realloc (42 samples, 0.39%)</title><rect x="89.6584%" y="117" width="0.3889%" height="15" fill="rgb(230,182,32)" fg:x="9684" fg:w="42"/><text x="89.9084%" y="127.50"></text></g><g><title>realloc (40 samples, 0.37%)</title><rect x="89.6769%" y="101" width="0.3703%" height="15" fill="rgb(242,56,43)" fg:x="9686" fg:w="40"/><text x="89.9269%" y="111.50"></text></g><g><title>[libc.so.6] (29 samples, 0.27%)</title><rect x="89.7787%" y="85" width="0.2685%" height="15" fill="rgb(233,99,24)" fg:x="9697" fg:w="29"/><text x="90.0287%" y="95.50"></text></g><g><title>[libc.so.6] (27 samples, 0.25%)</title><rect x="89.7972%" y="69" width="0.2500%" height="15" fill="rgb(234,209,42)" fg:x="9699" fg:w="27"/><text x="90.0472%" y="79.50"></text></g><g><title>core::alloc::layout::Layout::align (3 samples, 0.03%)</title><rect x="90.0472%" y="117" width="0.0278%" height="15" fill="rgb(227,7,12)" fg:x="9726" fg:w="3"/><text x="90.2972%" y="127.50"></text></g><g><title>core::ptr::alignment::Alignment::as_usize (2 samples, 0.02%)</title><rect x="90.0565%" y="101" width="0.0185%" height="15" fill="rgb(245,203,43)" fg:x="9727" fg:w="2"/><text x="90.3065%" y="111.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (5 samples, 0.05%)</title><rect x="90.0843%" y="117" width="0.0463%" height="15" fill="rgb(238,205,33)" fg:x="9730" fg:w="5"/><text x="90.3343%" y="127.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (3 samples, 0.03%)</title><rect x="90.1305%" y="117" width="0.0278%" height="15" fill="rgb(231,56,7)" fg:x="9735" fg:w="3"/><text x="90.3805%" y="127.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (3 samples, 0.03%)</title><rect x="90.1676%" y="85" width="0.0278%" height="15" fill="rgb(244,186,29)" fg:x="9739" fg:w="3"/><text x="90.4176%" y="95.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (81 samples, 0.75%)</title><rect x="89.4547%" y="149" width="0.7499%" height="15" fill="rgb(234,111,31)" fg:x="9662" fg:w="81"/><text x="89.7047%" y="159.50"></text></g><g><title>alloc::alloc::Global::grow_impl (79 samples, 0.73%)</title><rect x="89.4732%" y="133" width="0.7314%" height="15" fill="rgb(241,149,10)" fg:x="9664" fg:w="79"/><text x="89.7232%" y="143.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (4 samples, 0.04%)</title><rect x="90.1676%" y="117" width="0.0370%" height="15" fill="rgb(249,206,44)" fg:x="9739" fg:w="4"/><text x="90.4176%" y="127.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (4 samples, 0.04%)</title><rect x="90.1676%" y="101" width="0.0370%" height="15" fill="rgb(251,153,30)" fg:x="9739" fg:w="4"/><text x="90.4176%" y="111.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (33 samples, 0.31%)</title><rect x="90.2046%" y="149" width="0.3055%" height="15" fill="rgb(239,152,38)" fg:x="9743" fg:w="33"/><text x="90.4546%" y="159.50"></text></g><g><title>core::alloc::layout::Layout::size (6 samples, 0.06%)</title><rect x="90.5287%" y="149" width="0.0556%" height="15" fill="rgb(249,139,47)" fg:x="9778" fg:w="6"/><text x="90.7787%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (227 samples, 2.10%)</title><rect x="88.6955%" y="165" width="2.1017%" height="15" fill="rgb(244,64,35)" fg:x="9580" fg:w="227"/><text x="88.9455%" y="175.50">a..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (23 samples, 0.21%)</title><rect x="90.5842%" y="149" width="0.2129%" height="15" fill="rgb(216,46,15)" fg:x="9784" fg:w="23"/><text x="90.8342%" y="159.50"></text></g><g><title>core::alloc::layout::Layout::array (62 samples, 0.57%)</title><rect x="90.7971%" y="165" width="0.5740%" height="15" fill="rgb(250,74,19)" fg:x="9807" fg:w="62"/><text x="91.0471%" y="175.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (60 samples, 0.56%)</title><rect x="90.8157%" y="149" width="0.5555%" height="15" fill="rgb(249,42,33)" fg:x="9809" fg:w="60"/><text x="91.0657%" y="159.50"></text></g><g><title>core::cmp::max (46 samples, 0.43%)</title><rect x="91.3712%" y="165" width="0.4259%" height="15" fill="rgb(242,149,17)" fg:x="9869" fg:w="46"/><text x="91.6212%" y="175.50"></text></g><g><title>core::cmp::Ord::max (45 samples, 0.42%)</title><rect x="91.3804%" y="149" width="0.4166%" height="15" fill="rgb(244,29,21)" fg:x="9870" fg:w="45"/><text x="91.6304%" y="159.50"></text></g><g><title>core::cmp::max_by (42 samples, 0.39%)</title><rect x="91.4082%" y="133" width="0.3889%" height="15" fill="rgb(220,130,37)" fg:x="9873" fg:w="42"/><text x="91.6582%" y="143.50"></text></g><g><title>core::ops::function::FnOnce::call_once (12 samples, 0.11%)</title><rect x="91.6860%" y="117" width="0.1111%" height="15" fill="rgb(211,67,2)" fg:x="9903" fg:w="12"/><text x="91.9360%" y="127.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (6 samples, 0.06%)</title><rect x="91.7415%" y="101" width="0.0556%" height="15" fill="rgb(235,68,52)" fg:x="9909" fg:w="6"/><text x="91.9915%" y="111.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (5 samples, 0.05%)</title><rect x="91.7971%" y="165" width="0.0463%" height="15" fill="rgb(246,142,3)" fg:x="9915" fg:w="5"/><text x="92.0471%" y="175.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (2 samples, 0.02%)</title><rect x="91.8248%" y="149" width="0.0185%" height="15" fill="rgb(241,25,7)" fg:x="9918" fg:w="2"/><text x="92.0748%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (398 samples, 3.68%)</title><rect x="88.2048%" y="181" width="3.6848%" height="15" fill="rgb(242,119,39)" fg:x="9527" fg:w="398"/><text x="88.4548%" y="191.50">allo..</text></g><g><title>core::option::Option&lt;T&gt;::ok_or (5 samples, 0.05%)</title><rect x="91.8433%" y="165" width="0.0463%" height="15" fill="rgb(241,98,45)" fg:x="9920" fg:w="5"/><text x="92.0933%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (415 samples, 3.84%)</title><rect x="88.1863%" y="197" width="3.8422%" height="15" fill="rgb(254,28,30)" fg:x="9525" fg:w="415"/><text x="88.4363%" y="207.50">allo..</text></g><g><title>alloc::raw_vec::handle_reserve (15 samples, 0.14%)</title><rect x="91.8896%" y="181" width="0.1389%" height="15" fill="rgb(241,142,54)" fg:x="9925" fg:w="15"/><text x="92.1396%" y="191.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (12 samples, 0.11%)</title><rect x="91.9174%" y="165" width="0.1111%" height="15" fill="rgb(222,85,15)" fg:x="9928" fg:w="12"/><text x="92.1674%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (4 samples, 0.04%)</title><rect x="92.0285%" y="197" width="0.0370%" height="15" fill="rgb(210,85,47)" fg:x="9940" fg:w="4"/><text x="92.2785%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (3 samples, 0.03%)</title><rect x="92.0378%" y="181" width="0.0278%" height="15" fill="rgb(224,206,25)" fg:x="9941" fg:w="3"/><text x="92.2878%" y="191.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (3 samples, 0.03%)</title><rect x="92.0378%" y="165" width="0.0278%" height="15" fill="rgb(243,201,19)" fg:x="9941" fg:w="3"/><text x="92.2878%" y="175.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (3 samples, 0.03%)</title><rect x="92.0378%" y="149" width="0.0278%" height="15" fill="rgb(236,59,4)" fg:x="9941" fg:w="3"/><text x="92.2878%" y="159.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (6 samples, 0.06%)</title><rect x="92.0655%" y="197" width="0.0556%" height="15" fill="rgb(254,179,45)" fg:x="9944" fg:w="6"/><text x="92.3155%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (470 samples, 4.35%)</title><rect x="87.9270%" y="213" width="4.3514%" height="15" fill="rgb(226,14,10)" fg:x="9497" fg:w="470"/><text x="88.1770%" y="223.50">alloc..</text></g><g><title>core::ptr::write (17 samples, 0.16%)</title><rect x="92.1211%" y="197" width="0.1574%" height="15" fill="rgb(244,27,41)" fg:x="9950" fg:w="17"/><text x="92.3711%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="92.2785%" y="213" width="0.0185%" height="15" fill="rgb(235,35,32)" fg:x="9967" fg:w="2"/><text x="92.5285%" y="223.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (33 samples, 0.31%)</title><rect x="92.4729%" y="133" width="0.3055%" height="15" fill="rgb(218,68,31)" fg:x="9988" fg:w="33"/><text x="92.7229%" y="143.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (24 samples, 0.22%)</title><rect x="92.5562%" y="117" width="0.2222%" height="15" fill="rgb(207,120,37)" fg:x="9997" fg:w="24"/><text x="92.8062%" y="127.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (23 samples, 0.21%)</title><rect x="92.5655%" y="101" width="0.2129%" height="15" fill="rgb(227,98,0)" fg:x="9998" fg:w="23"/><text x="92.8155%" y="111.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (44 samples, 0.41%)</title><rect x="92.4266%" y="165" width="0.4074%" height="15" fill="rgb(207,7,3)" fg:x="9983" fg:w="44"/><text x="92.6766%" y="175.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (44 samples, 0.41%)</title><rect x="92.4266%" y="149" width="0.4074%" height="15" fill="rgb(206,98,19)" fg:x="9983" fg:w="44"/><text x="92.6766%" y="159.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.06%)</title><rect x="92.7784%" y="133" width="0.0556%" height="15" fill="rgb(217,5,26)" fg:x="10021" fg:w="6"/><text x="93.0284%" y="143.50"></text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (6 samples, 0.06%)</title><rect x="92.7784%" y="117" width="0.0556%" height="15" fill="rgb(235,190,38)" fg:x="10021" fg:w="6"/><text x="93.0284%" y="127.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (61 samples, 0.56%)</title><rect x="92.2970%" y="181" width="0.5648%" height="15" fill="rgb(247,86,24)" fg:x="9969" fg:w="61"/><text x="92.5470%" y="191.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (2 samples, 0.02%)</title><rect x="92.8433%" y="165" width="0.0185%" height="15" fill="rgb(205,101,16)" fg:x="10028" fg:w="2"/><text x="93.0933%" y="175.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (2 samples, 0.02%)</title><rect x="92.8433%" y="149" width="0.0185%" height="15" fill="rgb(246,168,33)" fg:x="10028" fg:w="2"/><text x="93.0933%" y="159.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.02%)</title><rect x="93.0006%" y="85" width="0.0185%" height="15" fill="rgb(231,114,1)" fg:x="10045" fg:w="2"/><text x="93.2506%" y="95.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.02%)</title><rect x="93.0006%" y="69" width="0.0185%" height="15" fill="rgb(207,184,53)" fg:x="10045" fg:w="2"/><text x="93.2506%" y="79.50"></text></g><g><title>cfree (15 samples, 0.14%)</title><rect x="93.0284%" y="85" width="0.1389%" height="15" fill="rgb(224,95,51)" fg:x="10048" fg:w="15"/><text x="93.2784%" y="95.50"></text></g><g><title>[libc.so.6] (9 samples, 0.08%)</title><rect x="93.0840%" y="69" width="0.0833%" height="15" fill="rgb(212,188,45)" fg:x="10054" fg:w="9"/><text x="93.3340%" y="79.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (21 samples, 0.19%)</title><rect x="92.9914%" y="117" width="0.1944%" height="15" fill="rgb(223,154,38)" fg:x="10044" fg:w="21"/><text x="93.2414%" y="127.50"></text></g><g><title>alloc::alloc::dealloc (21 samples, 0.19%)</title><rect x="92.9914%" y="101" width="0.1944%" height="15" fill="rgb(251,22,52)" fg:x="10044" fg:w="21"/><text x="93.2414%" y="111.50"></text></g><g><title>core::alloc::layout::Layout::align (2 samples, 0.02%)</title><rect x="93.1673%" y="85" width="0.0185%" height="15" fill="rgb(229,209,22)" fg:x="10063" fg:w="2"/><text x="93.4173%" y="95.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;ray_tracing_3d::geometry::point::Point&gt;&gt; (109 samples, 1.01%)</title><rect x="92.2970%" y="213" width="1.0092%" height="15" fill="rgb(234,138,34)" fg:x="9969" fg:w="109"/><text x="92.5470%" y="223.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (109 samples, 1.01%)</title><rect x="92.2970%" y="197" width="1.0092%" height="15" fill="rgb(212,95,11)" fg:x="9969" fg:w="109"/><text x="92.5470%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;ray_tracing_3d::geometry::point::Point,alloc::alloc::Global&gt;&gt; (48 samples, 0.44%)</title><rect x="92.8618%" y="181" width="0.4444%" height="15" fill="rgb(240,179,47)" fg:x="10030" fg:w="48"/><text x="93.1118%" y="191.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 0.44%)</title><rect x="92.8618%" y="165" width="0.4444%" height="15" fill="rgb(240,163,11)" fg:x="10030" fg:w="48"/><text x="93.1118%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;ray_tracing_3d::geometry::point::Point&gt;&gt; (40 samples, 0.37%)</title><rect x="92.9358%" y="149" width="0.3703%" height="15" fill="rgb(236,37,12)" fg:x="10038" fg:w="40"/><text x="93.1858%" y="159.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.37%)</title><rect x="92.9358%" y="133" width="0.3703%" height="15" fill="rgb(232,164,16)" fg:x="10038" fg:w="40"/><text x="93.1858%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (13 samples, 0.12%)</title><rect x="93.1858%" y="117" width="0.1204%" height="15" fill="rgb(244,205,15)" fg:x="10065" fg:w="13"/><text x="93.4358%" y="127.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::new_from_points (49 samples, 0.45%)</title><rect x="93.3062%" y="213" width="0.4537%" height="15" fill="rgb(223,117,47)" fg:x="10078" fg:w="49"/><text x="93.5562%" y="223.50"></text></g><g><title>&lt;&amp;ray_tracing_3d::geometry::point::Point as core::ops::arith::Sub&gt;::sub (28 samples, 0.26%)</title><rect x="93.5006%" y="197" width="0.2592%" height="15" fill="rgb(244,107,35)" fg:x="10099" fg:w="28"/><text x="93.7506%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (3 samples, 0.03%)</title><rect x="94.3524%" y="101" width="0.0278%" height="15" fill="rgb(205,140,8)" fg:x="10191" fg:w="3"/><text x="94.6024%" y="111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (12 samples, 0.11%)</title><rect x="94.2783%" y="149" width="0.1111%" height="15" fill="rgb(228,84,46)" fg:x="10183" fg:w="12"/><text x="94.5283%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.05%)</title><rect x="94.3431%" y="133" width="0.0463%" height="15" fill="rgb(254,188,9)" fg:x="10190" fg:w="5"/><text x="94.5931%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (5 samples, 0.05%)</title><rect x="94.3431%" y="117" width="0.0463%" height="15" fill="rgb(206,112,54)" fg:x="10190" fg:w="5"/><text x="94.5931%" y="127.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (3 samples, 0.03%)</title><rect x="94.3894%" y="149" width="0.0278%" height="15" fill="rgb(216,84,49)" fg:x="10195" fg:w="3"/><text x="94.6394%" y="159.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (4 samples, 0.04%)</title><rect x="94.5375%" y="117" width="0.0370%" height="15" fill="rgb(214,194,35)" fg:x="10211" fg:w="4"/><text x="94.7875%" y="127.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (18 samples, 0.17%)</title><rect x="94.4172%" y="149" width="0.1667%" height="15" fill="rgb(249,28,3)" fg:x="10198" fg:w="18"/><text x="94.6672%" y="159.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (18 samples, 0.17%)</title><rect x="94.4172%" y="133" width="0.1667%" height="15" fill="rgb(222,56,52)" fg:x="10198" fg:w="18"/><text x="94.6672%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::set_len_on_drop::SetLenOnDrop&gt; (3 samples, 0.03%)</title><rect x="94.5838%" y="149" width="0.0278%" height="15" fill="rgb(245,217,50)" fg:x="10216" fg:w="3"/><text x="94.8338%" y="159.50"></text></g><g><title>&lt;alloc::vec::set_len_on_drop::SetLenOnDrop as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="94.5838%" y="133" width="0.0278%" height="15" fill="rgb(213,201,24)" fg:x="10216" fg:w="3"/><text x="94.8338%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (86 samples, 0.80%)</title><rect x="94.0098%" y="165" width="0.7962%" height="15" fill="rgb(248,116,28)" fg:x="10154" fg:w="86"/><text x="94.2598%" y="175.50"></text></g><g><title>core::ptr::write (21 samples, 0.19%)</title><rect x="94.6116%" y="149" width="0.1944%" height="15" fill="rgb(219,72,43)" fg:x="10219" fg:w="21"/><text x="94.8616%" y="159.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.03%)</title><rect x="94.9634%" y="85" width="0.0278%" height="15" fill="rgb(209,138,14)" fg:x="10257" fg:w="3"/><text x="95.2134%" y="95.50"></text></g><g><title>core::ptr::read_volatile (3 samples, 0.03%)</title><rect x="95.0097%" y="69" width="0.0278%" height="15" fill="rgb(222,18,33)" fg:x="10262" fg:w="3"/><text x="95.2597%" y="79.50"></text></g><g><title>alloc::alloc::alloc (22 samples, 0.20%)</title><rect x="94.9912%" y="85" width="0.2037%" height="15" fill="rgb(213,199,7)" fg:x="10260" fg:w="22"/><text x="95.2412%" y="95.50"></text></g><g><title>malloc (17 samples, 0.16%)</title><rect x="95.0375%" y="69" width="0.1574%" height="15" fill="rgb(250,110,10)" fg:x="10265" fg:w="17"/><text x="95.2875%" y="79.50"></text></g><g><title>core::alloc::layout::Layout::size (2 samples, 0.02%)</title><rect x="95.1949%" y="85" width="0.0185%" height="15" fill="rgb(248,123,6)" fg:x="10282" fg:w="2"/><text x="95.4449%" y="95.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (4 samples, 0.04%)</title><rect x="95.2134%" y="85" width="0.0370%" height="15" fill="rgb(206,91,31)" fg:x="10284" fg:w="4"/><text x="95.4634%" y="95.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (2 samples, 0.02%)</title><rect x="95.2690%" y="69" width="0.0185%" height="15" fill="rgb(211,154,13)" fg:x="10290" fg:w="2"/><text x="95.5190%" y="79.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (43 samples, 0.40%)</title><rect x="94.9357%" y="117" width="0.3981%" height="15" fill="rgb(225,148,7)" fg:x="10254" fg:w="43"/><text x="95.1857%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (43 samples, 0.40%)</title><rect x="94.9357%" y="101" width="0.3981%" height="15" fill="rgb(220,160,43)" fg:x="10254" fg:w="43"/><text x="95.1857%" y="111.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (8 samples, 0.07%)</title><rect x="95.2597%" y="85" width="0.0741%" height="15" fill="rgb(213,52,39)" fg:x="10289" fg:w="8"/><text x="95.5097%" y="95.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (5 samples, 0.05%)</title><rect x="95.2875%" y="69" width="0.0463%" height="15" fill="rgb(243,137,7)" fg:x="10292" fg:w="5"/><text x="95.5375%" y="79.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (5 samples, 0.05%)</title><rect x="95.2875%" y="53" width="0.0463%" height="15" fill="rgb(230,79,13)" fg:x="10292" fg:w="5"/><text x="95.5375%" y="63.50"></text></g><g><title>alloc::raw_vec::alloc_guard (2 samples, 0.02%)</title><rect x="95.3338%" y="117" width="0.0185%" height="15" fill="rgb(247,105,23)" fg:x="10297" fg:w="2"/><text x="95.5838%" y="127.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.02%)</title><rect x="95.3338%" y="101" width="0.0185%" height="15" fill="rgb(223,179,41)" fg:x="10297" fg:w="2"/><text x="95.5838%" y="111.50"></text></g><g><title>&lt;alloc::collections::TryReserveError as core::convert::From&lt;alloc::collections::TryReserveErrorKind&gt;&gt;::from (2 samples, 0.02%)</title><rect x="95.3338%" y="85" width="0.0185%" height="15" fill="rgb(218,9,34)" fg:x="10297" fg:w="2"/><text x="95.5838%" y="95.50"></text></g><g><title>core::alloc::layout::Layout::max_size_for_align (4 samples, 0.04%)</title><rect x="95.6023%" y="85" width="0.0370%" height="15" fill="rgb(222,106,8)" fg:x="10326" fg:w="4"/><text x="95.8523%" y="95.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (31 samples, 0.29%)</title><rect x="95.3615%" y="101" width="0.2870%" height="15" fill="rgb(211,220,0)" fg:x="10300" fg:w="31"/><text x="95.6115%" y="111.50"></text></g><g><title>core::alloc::layout::Layout::array (33 samples, 0.31%)</title><rect x="95.3523%" y="117" width="0.3055%" height="15" fill="rgb(229,52,16)" fg:x="10299" fg:w="33"/><text x="95.6023%" y="127.50"></text></g><g><title>alloc::vec::from_elem (188 samples, 1.74%)</title><rect x="93.9450%" y="197" width="1.7406%" height="15" fill="rgb(212,155,18)" fg:x="10147" fg:w="188"/><text x="94.1950%" y="207.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (187 samples, 1.73%)</title><rect x="93.9543%" y="181" width="1.7313%" height="15" fill="rgb(242,21,14)" fg:x="10148" fg:w="187"/><text x="94.2043%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (95 samples, 0.88%)</title><rect x="94.8060%" y="165" width="0.8795%" height="15" fill="rgb(222,19,48)" fg:x="10240" fg:w="95"/><text x="95.0560%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (94 samples, 0.87%)</title><rect x="94.8153%" y="149" width="0.8703%" height="15" fill="rgb(232,45,27)" fg:x="10241" fg:w="94"/><text x="95.0653%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (92 samples, 0.85%)</title><rect x="94.8338%" y="133" width="0.8518%" height="15" fill="rgb(249,103,42)" fg:x="10243" fg:w="92"/><text x="95.0838%" y="143.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (3 samples, 0.03%)</title><rect x="95.6578%" y="117" width="0.0278%" height="15" fill="rgb(246,81,33)" fg:x="10332" fg:w="3"/><text x="95.9078%" y="127.50"></text></g><g><title>ray_tracing_3d::optic::image::Grid::ray_eye_pixel_point (1,097 samples, 10.16%)</title><rect x="85.5569%" y="229" width="10.1565%" height="15" fill="rgb(252,33,42)" fg:x="9241" fg:w="1097"/><text x="85.8069%" y="239.50">ray_tracing_3d:..</text></g><g><title>ray_tracing_3d::optic::image::Grid::pixel_point_selection (211 samples, 1.95%)</title><rect x="93.7598%" y="213" width="1.9535%" height="15" fill="rgb(209,212,41)" fg:x="10127" fg:w="211"/><text x="94.0098%" y="223.50">r..</text></g><g><title>ray_tracing_3d::geometry::point::Point::new (3 samples, 0.03%)</title><rect x="95.6856%" y="197" width="0.0278%" height="15" fill="rgb(207,154,6)" fg:x="10335" fg:w="3"/><text x="95.9356%" y="207.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::ops::range::RangeBounds&lt;T&gt;&gt;::end_bound (40 samples, 0.37%)</title><rect x="97.8891%" y="165" width="0.3703%" height="15" fill="rgb(223,64,47)" fg:x="10573" fg:w="40"/><text x="98.1391%" y="175.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::ops::range::RangeBounds&lt;T&gt;&gt;::start_bound (11 samples, 0.10%)</title><rect x="98.2594%" y="165" width="0.1018%" height="15" fill="rgb(211,161,38)" fg:x="10613" fg:w="11"/><text x="98.5094%" y="175.50"></text></g><g><title>_start (9,614 samples, 89.01%)</title><rect x="10.4805%" y="437" width="89.0103%" height="15" fill="rgb(219,138,40)" fg:x="1132" fg:w="9614"/><text x="10.7305%" y="447.50">_start</text></g><g><title>__libc_start_main (9,614 samples, 89.01%)</title><rect x="10.4805%" y="421" width="89.0103%" height="15" fill="rgb(241,228,46)" fg:x="1132" fg:w="9614"/><text x="10.7305%" y="431.50">__libc_start_main</text></g><g><title>[libc.so.6] (9,614 samples, 89.01%)</title><rect x="10.4805%" y="405" width="89.0103%" height="15" fill="rgb(223,209,38)" fg:x="1132" fg:w="9614"/><text x="10.7305%" y="415.50">[libc.so.6]</text></g><g><title>main (9,614 samples, 89.01%)</title><rect x="10.4805%" y="389" width="89.0103%" height="15" fill="rgb(236,164,45)" fg:x="1132" fg:w="9614"/><text x="10.7305%" y="399.50">main</text></g><g><title>std::rt::lang_start (9,614 samples, 89.01%)</title><rect x="10.4805%" y="373" width="89.0103%" height="15" fill="rgb(231,15,5)" fg:x="1132" fg:w="9614"/><text x="10.7305%" y="383.50">std::rt::lang_start</text></g><g><title>std::rt::lang_start_internal (9,614 samples, 89.01%)</title><rect x="10.4805%" y="357" width="89.0103%" height="15" fill="rgb(252,35,15)" fg:x="1132" fg:w="9614"/><text x="10.7305%" y="367.50">std::rt::lang_start_internal</text></g><g><title>std::rt::lang_start::_{{closure}} (9,614 samples, 89.01%)</title><rect x="10.4805%" y="341" width="89.0103%" height="15" fill="rgb(248,181,18)" fg:x="1132" fg:w="9614"/><text x="10.7305%" y="351.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (9,614 samples, 89.01%)</title><rect x="10.4805%" y="325" width="89.0103%" height="15" fill="rgb(233,39,42)" fg:x="1132" fg:w="9614"/><text x="10.7305%" y="335.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (9,614 samples, 89.01%)</title><rect x="10.4805%" y="309" width="89.0103%" height="15" fill="rgb(238,110,33)" fg:x="1132" fg:w="9614"/><text x="10.7305%" y="319.50">core::ops::function::FnOnce::call_once</text></g><g><title>ray_tracing_3d::main (9,614 samples, 89.01%)</title><rect x="10.4805%" y="293" width="89.0103%" height="15" fill="rgb(233,195,10)" fg:x="1132" fg:w="9614"/><text x="10.7305%" y="303.50">ray_tracing_3d::main</text></g><g><title>ray_tracing_3d::ray_trace_image (9,614 samples, 89.01%)</title><rect x="10.4805%" y="277" width="89.0103%" height="15" fill="rgb(254,105,3)" fg:x="1132" fg:w="9614"/><text x="10.7305%" y="287.50">ray_tracing_3d::ray_trace_image</text></g><g><title>ray_tracing_3d::optic::image::Grid::make_image (9,612 samples, 88.99%)</title><rect x="10.4990%" y="261" width="88.9918%" height="15" fill="rgb(221,225,9)" fg:x="1134" fg:w="9612"/><text x="10.7490%" y="271.50">ray_tracing_3d::optic::image::Grid::make_image</text></g><g><title>ray_tracing_3d::optic::image::Grid::trace_pixel_color (9,578 samples, 88.68%)</title><rect x="10.8138%" y="245" width="88.6770%" height="15" fill="rgb(224,227,45)" fg:x="1168" fg:w="9578"/><text x="11.0638%" y="255.50">ray_tracing_3d::optic::image::Grid::trace_pixel_color</text></g><g><title>ray_tracing_3d::optic::image::get_background_color (408 samples, 3.78%)</title><rect x="95.7134%" y="229" width="3.7774%" height="15" fill="rgb(229,198,43)" fg:x="10338" fg:w="408"/><text x="95.9634%" y="239.50">ray_..</text></g><g><title>ray_tracing_3d::optic::color::Color::new (401 samples, 3.71%)</title><rect x="95.7782%" y="213" width="3.7126%" height="15" fill="rgb(206,209,35)" fg:x="10345" fg:w="401"/><text x="96.0282%" y="223.50">ray_..</text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::contains (335 samples, 3.10%)</title><rect x="96.3892%" y="197" width="3.1016%" height="15" fill="rgb(245,195,53)" fg:x="10411" fg:w="335"/><text x="96.6392%" y="207.50">cor..</text></g><g><title>core::ops::range::RangeBounds::contains (315 samples, 2.92%)</title><rect x="96.5744%" y="181" width="2.9164%" height="15" fill="rgb(240,92,26)" fg:x="10431" fg:w="315"/><text x="96.8244%" y="191.50">co..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (122 samples, 1.13%)</title><rect x="98.3613%" y="165" width="1.1295%" height="15" fill="rgb(207,40,23)" fg:x="10624" fg:w="122"/><text x="98.6113%" y="175.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (66 samples, 0.61%)</title><rect x="98.8797%" y="149" width="0.6111%" height="15" fill="rgb(223,111,35)" fg:x="10680" fg:w="66"/><text x="99.1297%" y="159.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="99.5000%" y="437" width="0.0185%" height="15" fill="rgb(229,147,28)" fg:x="10747" fg:w="2"/><text x="99.7500%" y="447.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (2 samples, 0.02%)</title><rect x="99.5186%" y="437" width="0.0185%" height="15" fill="rgb(211,29,28)" fg:x="10749" fg:w="2"/><text x="99.7686%" y="447.50"></text></g><g><title>core::ops::range::RangeBounds::contains (14 samples, 0.13%)</title><rect x="99.5371%" y="437" width="0.1296%" height="15" fill="rgb(228,72,33)" fg:x="10751" fg:w="14"/><text x="99.7871%" y="447.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::normalize (4 samples, 0.04%)</title><rect x="99.6852%" y="437" width="0.0370%" height="15" fill="rgb(205,214,31)" fg:x="10767" fg:w="4"/><text x="99.9352%" y="447.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::norme (15 samples, 0.14%)</title><rect x="99.7222%" y="437" width="0.1389%" height="15" fill="rgb(224,111,15)" fg:x="10771" fg:w="15"/><text x="99.9722%" y="447.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::norme_vec (13 samples, 0.12%)</title><rect x="99.8611%" y="437" width="0.1204%" height="15" fill="rgb(253,21,26)" fg:x="10786" fg:w="13"/><text x="100.1111%" y="447.50"></text></g><g><title>all (10,801 samples, 100%)</title><rect x="0.0000%" y="469" width="100.0000%" height="15" fill="rgb(245,139,43)" fg:x="0" fg:w="10801"/><text x="0.2500%" y="479.50"></text></g><g><title>ray_tracing_3d (10,801 samples, 100.00%)</title><rect x="0.0000%" y="453" width="100.0000%" height="15" fill="rgb(252,170,7)" fg:x="0" fg:w="10801"/><text x="0.2500%" y="463.50">ray_tracing_3d</text></g></svg></svg>