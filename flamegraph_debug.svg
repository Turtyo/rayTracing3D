<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="566" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="549.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="549.00"> </text><svg id="frames" x="10" width="1180" total_samples="4111"><g><title>&lt;&amp;ray_tracing_3d::optic::color::Color as core::ops::arith::Mul&gt;::mul (1 samples, 0.02%)</title><rect x="0.0000%" y="485" width="0.0243%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="495.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.02%)</title><rect x="0.0243%" y="485" width="0.0243%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="0.2743%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="0.0486%" y="485" width="0.0243%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="1"/><text x="0.2986%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (1 samples, 0.02%)</title><rect x="0.0730%" y="485" width="0.0243%" height="15" fill="rgb(248,212,6)" fg:x="3" fg:w="1"/><text x="0.3230%" y="495.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_next (2 samples, 0.05%)</title><rect x="0.0973%" y="485" width="0.0486%" height="15" fill="rgb(208,68,35)" fg:x="4" fg:w="2"/><text x="0.3473%" y="495.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="0.1459%" y="485" width="0.0243%" height="15" fill="rgb(232,128,0)" fg:x="6" fg:w="1"/><text x="0.3959%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (6 samples, 0.15%)</title><rect x="0.1703%" y="485" width="0.1459%" height="15" fill="rgb(207,160,47)" fg:x="7" fg:w="6"/><text x="0.4203%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.27%)</title><rect x="0.3162%" y="485" width="0.2676%" height="15" fill="rgb(228,23,34)" fg:x="13" fg:w="11"/><text x="0.5662%" y="495.50"></text></g><g><title>&lt;rand_distr::unit_sphere::UnitSphere as rand::distributions::distribution::Distribution&lt;[F: 3]&gt;&gt;::sample (1 samples, 0.02%)</title><rect x="0.5838%" y="485" width="0.0243%" height="15" fill="rgb(218,30,26)" fg:x="24" fg:w="1"/><text x="0.8338%" y="495.50"></text></g><g><title>&lt;ray_tracing_3d::geometry::shape::Sphere as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="0.6081%" y="485" width="0.0243%" height="15" fill="rgb(220,122,19)" fg:x="25" fg:w="1"/><text x="0.8581%" y="495.50"></text></g><g><title>&lt;ray_tracing_3d::optic::color::Color as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="0.6324%" y="485" width="0.0243%" height="15" fill="rgb(250,228,42)" fg:x="26" fg:w="1"/><text x="0.8824%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.02%)</title><rect x="0.6568%" y="469" width="0.0243%" height="15" fill="rgb(240,193,28)" fg:x="27" fg:w="1"/><text x="0.9068%" y="479.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (16 samples, 0.39%)</title><rect x="0.6811%" y="469" width="0.3892%" height="15" fill="rgb(216,20,37)" fg:x="28" fg:w="16"/><text x="0.9311%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (3 samples, 0.07%)</title><rect x="1.0703%" y="469" width="0.0730%" height="15" fill="rgb(206,188,39)" fg:x="44" fg:w="3"/><text x="1.3203%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="1.1433%" y="469" width="0.0243%" height="15" fill="rgb(217,207,13)" fg:x="47" fg:w="1"/><text x="1.3933%" y="479.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="1.1676%" y="469" width="0.0243%" height="15" fill="rgb(231,73,38)" fg:x="48" fg:w="1"/><text x="1.4176%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="1.1919%" y="469" width="0.0243%" height="15" fill="rgb(225,20,46)" fg:x="49" fg:w="1"/><text x="1.4419%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="1.2162%" y="469" width="0.0243%" height="15" fill="rgb(210,31,41)" fg:x="50" fg:w="1"/><text x="1.4662%" y="479.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.02%)</title><rect x="1.2406%" y="469" width="0.0243%" height="15" fill="rgb(221,200,47)" fg:x="51" fg:w="1"/><text x="1.4906%" y="479.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.02%)</title><rect x="1.2649%" y="469" width="0.0243%" height="15" fill="rgb(226,26,5)" fg:x="52" fg:w="1"/><text x="1.5149%" y="479.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (1 samples, 0.02%)</title><rect x="1.2892%" y="469" width="0.0243%" height="15" fill="rgb(249,33,26)" fg:x="53" fg:w="1"/><text x="1.5392%" y="479.50"></text></g><g><title>core::ops::range::RangeBounds::contains (2 samples, 0.05%)</title><rect x="1.3135%" y="469" width="0.0486%" height="15" fill="rgb(235,183,28)" fg:x="54" fg:w="2"/><text x="1.5635%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::set_len_on_drop::SetLenOnDrop&gt; (1 samples, 0.02%)</title><rect x="1.3622%" y="469" width="0.0243%" height="15" fill="rgb(221,5,38)" fg:x="56" fg:w="1"/><text x="1.6122%" y="479.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.02%)</title><rect x="1.3865%" y="469" width="0.0243%" height="15" fill="rgb(247,18,42)" fg:x="57" fg:w="1"/><text x="1.6365%" y="479.50"></text></g><g><title>ray_tracing_3d::geometry::ray::Ray::first_point_hit_by_ray (18 samples, 0.44%)</title><rect x="1.4108%" y="469" width="0.4378%" height="15" fill="rgb(241,131,45)" fg:x="58" fg:w="18"/><text x="1.6608%" y="479.50"></text></g><g><title>ray_tracing_3d::geometry::vector::UnitVector::new_from_points (1 samples, 0.02%)</title><rect x="1.8487%" y="469" width="0.0243%" height="15" fill="rgb(249,31,29)" fg:x="76" fg:w="1"/><text x="2.0987%" y="479.50"></text></g><g><title>[[heap]] (51 samples, 1.24%)</title><rect x="0.6568%" y="485" width="1.2406%" height="15" fill="rgb(225,111,53)" fg:x="27" fg:w="51"/><text x="0.9068%" y="495.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::norme (1 samples, 0.02%)</title><rect x="1.8730%" y="469" width="0.0243%" height="15" fill="rgb(238,160,17)" fg:x="77" fg:w="1"/><text x="2.1230%" y="479.50"></text></g><g><title>&lt;&amp;ray_tracing_3d::geometry::vector::UnitVector as core::ops::arith::Add&lt;&amp;ray_tracing_3d::geometry::vector::Vector&gt;&gt;::add (1 samples, 0.02%)</title><rect x="1.8973%" y="469" width="0.0243%" height="15" fill="rgb(214,148,48)" fg:x="78" fg:w="1"/><text x="2.1473%" y="479.50"></text></g><g><title>&lt;&amp;ray_tracing_3d::geometry::vector::Vector as core::ops::arith::Add&gt;::add (1 samples, 0.02%)</title><rect x="1.9217%" y="469" width="0.0243%" height="15" fill="rgb(232,36,49)" fg:x="79" fg:w="1"/><text x="2.1717%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="1.9460%" y="469" width="0.0243%" height="15" fill="rgb(209,103,24)" fg:x="80" fg:w="1"/><text x="2.1960%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (3 samples, 0.07%)</title><rect x="1.9703%" y="469" width="0.0730%" height="15" fill="rgb(229,88,8)" fg:x="81" fg:w="3"/><text x="2.2203%" y="479.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="2.0433%" y="469" width="0.0486%" height="15" fill="rgb(213,181,19)" fg:x="84" fg:w="2"/><text x="2.2933%" y="479.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="2.0919%" y="469" width="0.0243%" height="15" fill="rgb(254,191,54)" fg:x="86" fg:w="1"/><text x="2.3419%" y="479.50"></text></g><g><title>&lt;alloc::vec::set_len_on_drop::SetLenOnDrop as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="2.1163%" y="469" width="0.0486%" height="15" fill="rgb(241,83,37)" fg:x="87" fg:w="2"/><text x="2.3663%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.41%)</title><rect x="2.1649%" y="469" width="0.4135%" height="15" fill="rgb(233,36,39)" fg:x="89" fg:w="17"/><text x="2.4149%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::get_unchecked (1 samples, 0.02%)</title><rect x="2.5784%" y="469" width="0.0243%" height="15" fill="rgb(226,3,54)" fg:x="106" fg:w="1"/><text x="2.8284%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.02%)</title><rect x="2.6028%" y="469" width="0.0243%" height="15" fill="rgb(245,192,40)" fg:x="107" fg:w="1"/><text x="2.8528%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.05%)</title><rect x="2.6271%" y="469" width="0.0486%" height="15" fill="rgb(238,167,29)" fg:x="108" fg:w="2"/><text x="2.8771%" y="479.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.05%)</title><rect x="2.6757%" y="469" width="0.0486%" height="15" fill="rgb(232,182,51)" fg:x="110" fg:w="2"/><text x="2.9257%" y="479.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_next (1 samples, 0.02%)</title><rect x="2.7244%" y="469" width="0.0243%" height="15" fill="rgb(231,60,39)" fg:x="112" fg:w="1"/><text x="2.9744%" y="479.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (30 samples, 0.73%)</title><rect x="2.7487%" y="469" width="0.7297%" height="15" fill="rgb(208,69,12)" fg:x="113" fg:w="30"/><text x="2.9987%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (1 samples, 0.02%)</title><rect x="3.4785%" y="469" width="0.0243%" height="15" fill="rgb(235,93,37)" fg:x="143" fg:w="1"/><text x="3.7285%" y="479.50"></text></g><g><title>&lt;f64 as num_traits::cast::NumCast&gt;::from (1 samples, 0.02%)</title><rect x="3.5028%" y="469" width="0.0243%" height="15" fill="rgb(213,116,39)" fg:x="144" fg:w="1"/><text x="3.7528%" y="479.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha8Core as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.02%)</title><rect x="3.5271%" y="469" width="0.0243%" height="15" fill="rgb(222,207,29)" fg:x="145" fg:w="1"/><text x="3.7771%" y="479.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha8Rng as rand_core::RngCore&gt;::next_u64 (2 samples, 0.05%)</title><rect x="3.5514%" y="469" width="0.0486%" height="15" fill="rgb(206,96,30)" fg:x="146" fg:w="2"/><text x="3.8014%" y="479.50"></text></g><g><title>&lt;ray_tracing_3d::geometry::shape::Sphere as core::cmp::PartialEq&gt;::eq (2 samples, 0.05%)</title><rect x="3.6001%" y="469" width="0.0486%" height="15" fill="rgb(218,138,4)" fg:x="148" fg:w="2"/><text x="3.8501%" y="479.50"></text></g><g><title>&lt;u64 as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.02%)</title><rect x="3.6487%" y="469" width="0.0243%" height="15" fill="rgb(250,191,14)" fg:x="150" fg:w="1"/><text x="3.8987%" y="479.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.05%)</title><rect x="3.6731%" y="469" width="0.0486%" height="15" fill="rgb(239,60,40)" fg:x="151" fg:w="2"/><text x="3.9231%" y="479.50"></text></g><g><title>[libc.so.6] (2 samples, 0.05%)</title><rect x="3.7217%" y="469" width="0.0486%" height="15" fill="rgb(206,27,48)" fg:x="153" fg:w="2"/><text x="3.9717%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="3.7704%" y="469" width="0.0243%" height="15" fill="rgb(225,35,8)" fg:x="155" fg:w="1"/><text x="4.0204%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (2 samples, 0.05%)</title><rect x="3.7947%" y="469" width="0.0486%" height="15" fill="rgb(250,213,24)" fg:x="156" fg:w="2"/><text x="4.0447%" y="479.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="3.8190%" y="453" width="0.0243%" height="15" fill="rgb(247,123,22)" fg:x="157" fg:w="1"/><text x="4.0690%" y="463.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.02%)</title><rect x="3.8190%" y="437" width="0.0243%" height="15" fill="rgb(231,138,38)" fg:x="157" fg:w="1"/><text x="4.0690%" y="447.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (1 samples, 0.02%)</title><rect x="3.8433%" y="469" width="0.0243%" height="15" fill="rgb(231,145,46)" fg:x="158" fg:w="1"/><text x="4.0933%" y="479.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (1 samples, 0.02%)</title><rect x="3.8433%" y="453" width="0.0243%" height="15" fill="rgb(251,118,11)" fg:x="158" fg:w="1"/><text x="4.0933%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.02%)</title><rect x="3.8677%" y="469" width="0.0243%" height="15" fill="rgb(217,147,25)" fg:x="159" fg:w="1"/><text x="4.1177%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="3.8920%" y="469" width="0.0243%" height="15" fill="rgb(247,81,37)" fg:x="160" fg:w="1"/><text x="4.1420%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.05%)</title><rect x="3.9163%" y="469" width="0.0486%" height="15" fill="rgb(209,12,38)" fg:x="161" fg:w="2"/><text x="4.1663%" y="479.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (2 samples, 0.05%)</title><rect x="3.9650%" y="469" width="0.0486%" height="15" fill="rgb(227,1,9)" fg:x="163" fg:w="2"/><text x="4.2150%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5 samples, 0.12%)</title><rect x="4.0136%" y="469" width="0.1216%" height="15" fill="rgb(248,47,43)" fg:x="165" fg:w="5"/><text x="4.2636%" y="479.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::contains (9 samples, 0.22%)</title><rect x="4.1352%" y="469" width="0.2189%" height="15" fill="rgb(221,10,30)" fg:x="170" fg:w="9"/><text x="4.3852%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;ray_tracing_3d::geometry::point::Point&gt;&gt; (1 samples, 0.02%)</title><rect x="4.3542%" y="469" width="0.0243%" height="15" fill="rgb(210,229,1)" fg:x="179" fg:w="1"/><text x="4.6042%" y="479.50"></text></g><g><title>rand_chacha::guts::refill_wide (1 samples, 0.02%)</title><rect x="4.3785%" y="469" width="0.0243%" height="15" fill="rgb(222,148,37)" fg:x="180" fg:w="1"/><text x="4.6285%" y="479.50"></text></g><g><title>ray_tracing_3d::geometry::ray::Ray::cos_weighted_random_ray_unit_sphere (1 samples, 0.02%)</title><rect x="4.4028%" y="469" width="0.0243%" height="15" fill="rgb(234,67,33)" fg:x="181" fg:w="1"/><text x="4.6528%" y="479.50"></text></g><g><title>ray_tracing_3d::geometry::ray::Ray::first_point_hit_by_ray (10 samples, 0.24%)</title><rect x="4.4271%" y="469" width="0.2432%" height="15" fill="rgb(247,98,35)" fg:x="182" fg:w="10"/><text x="4.6771%" y="479.50"></text></g><g><title>ray_tracing_3d::geometry::ray::Ray::first_point_hit_by_ray::_{{closure}} (9 samples, 0.22%)</title><rect x="4.6704%" y="469" width="0.2189%" height="15" fill="rgb(247,138,52)" fg:x="192" fg:w="9"/><text x="4.9204%" y="479.50"></text></g><g><title>ray_tracing_3d::geometry::ray::Ray::intersect (37 samples, 0.90%)</title><rect x="4.8893%" y="469" width="0.9000%" height="15" fill="rgb(213,79,30)" fg:x="201" fg:w="37"/><text x="5.1393%" y="479.50"></text></g><g><title>ray_tracing_3d::geometry::vector::UnitVector::new_from_coordinates (3 samples, 0.07%)</title><rect x="5.7893%" y="469" width="0.0730%" height="15" fill="rgb(246,177,23)" fg:x="238" fg:w="3"/><text x="6.0393%" y="479.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::new_from_coordinates (9 samples, 0.22%)</title><rect x="5.8623%" y="469" width="0.2189%" height="15" fill="rgb(230,62,27)" fg:x="241" fg:w="9"/><text x="6.1123%" y="479.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::new_from_points (10 samples, 0.24%)</title><rect x="6.0812%" y="469" width="0.2432%" height="15" fill="rgb(216,154,8)" fg:x="250" fg:w="10"/><text x="6.3312%" y="479.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::normalize (3 samples, 0.07%)</title><rect x="6.3245%" y="469" width="0.0730%" height="15" fill="rgb(244,35,45)" fg:x="260" fg:w="3"/><text x="6.5745%" y="479.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::norme (9 samples, 0.22%)</title><rect x="6.3975%" y="469" width="0.2189%" height="15" fill="rgb(251,115,12)" fg:x="263" fg:w="9"/><text x="6.6475%" y="479.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::scalar_product (18 samples, 0.44%)</title><rect x="6.6164%" y="469" width="0.4378%" height="15" fill="rgb(240,54,50)" fg:x="272" fg:w="18"/><text x="6.8664%" y="479.50"></text></g><g><title>ray_tracing_3d::optic::color::Color::new (3 samples, 0.07%)</title><rect x="7.0542%" y="469" width="0.0730%" height="15" fill="rgb(233,84,52)" fg:x="290" fg:w="3"/><text x="7.3042%" y="479.50"></text></g><g><title>ray_tracing_3d::optic::image::Grid::trace_pixel_color (3 samples, 0.07%)</title><rect x="7.1272%" y="469" width="0.0730%" height="15" fill="rgb(207,117,47)" fg:x="293" fg:w="3"/><text x="7.3772%" y="479.50"></text></g><g><title>ray_tracing_3d::optic::image::get_background_color (2 samples, 0.05%)</title><rect x="7.2002%" y="469" width="0.0486%" height="15" fill="rgb(249,43,39)" fg:x="296" fg:w="2"/><text x="7.4502%" y="479.50"></text></g><g><title>[[stack]] (224 samples, 5.45%)</title><rect x="1.8973%" y="485" width="5.4488%" height="15" fill="rgb(209,38,44)" fg:x="78" fg:w="224"/><text x="2.1473%" y="495.50">[[stack..</text></g><g><title>std::f64::&lt;impl f64&gt;::powi (4 samples, 0.10%)</title><rect x="7.2488%" y="469" width="0.0973%" height="15" fill="rgb(236,212,23)" fg:x="298" fg:w="4"/><text x="7.4988%" y="479.50"></text></g><g><title>[ld-linux-x86-64.so.2] (6 samples, 0.15%)</title><rect x="7.3461%" y="485" width="0.1459%" height="15" fill="rgb(242,79,21)" fg:x="302" fg:w="6"/><text x="7.5961%" y="495.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.02%)</title><rect x="7.4678%" y="469" width="0.0243%" height="15" fill="rgb(211,96,35)" fg:x="307" fg:w="1"/><text x="7.7178%" y="479.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.02%)</title><rect x="7.4678%" y="453" width="0.0243%" height="15" fill="rgb(253,215,40)" fg:x="307" fg:w="1"/><text x="7.7178%" y="463.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.02%)</title><rect x="7.4678%" y="437" width="0.0243%" height="15" fill="rgb(211,81,21)" fg:x="307" fg:w="1"/><text x="7.7178%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="7.4921%" y="485" width="0.0243%" height="15" fill="rgb(208,190,38)" fg:x="308" fg:w="1"/><text x="7.7421%" y="495.50"></text></g><g><title>[ray_tracing_3d] (1 samples, 0.02%)</title><rect x="7.5164%" y="485" width="0.0243%" height="15" fill="rgb(235,213,38)" fg:x="309" fg:w="1"/><text x="7.7664%" y="495.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.02%)</title><rect x="7.5164%" y="469" width="0.0243%" height="15" fill="rgb(237,122,38)" fg:x="309" fg:w="1"/><text x="7.7664%" y="479.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (2 samples, 0.05%)</title><rect x="7.5407%" y="469" width="0.0486%" height="15" fill="rgb(244,218,35)" fg:x="310" fg:w="2"/><text x="7.7907%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::get_unchecked (1 samples, 0.02%)</title><rect x="7.5894%" y="469" width="0.0243%" height="15" fill="rgb(240,68,47)" fg:x="312" fg:w="1"/><text x="7.8394%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.02%)</title><rect x="7.6137%" y="469" width="0.0243%" height="15" fill="rgb(210,16,53)" fg:x="313" fg:w="1"/><text x="7.8637%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="7.6380%" y="469" width="0.0243%" height="15" fill="rgb(235,124,12)" fg:x="314" fg:w="1"/><text x="7.8880%" y="479.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::ops::range::RangeBounds&lt;T&gt;&gt;::start_bound (3 samples, 0.07%)</title><rect x="7.6624%" y="469" width="0.0730%" height="15" fill="rgb(224,169,11)" fg:x="315" fg:w="3"/><text x="7.9124%" y="479.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="7.7353%" y="469" width="0.0243%" height="15" fill="rgb(250,166,2)" fg:x="318" fg:w="1"/><text x="7.9853%" y="479.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (10 samples, 0.24%)</title><rect x="7.7597%" y="469" width="0.2432%" height="15" fill="rgb(242,216,29)" fg:x="319" fg:w="10"/><text x="8.0097%" y="479.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformFloat&lt;f64&gt; as rand::distributions::uniform::UniformSampler&gt;::sample (1 samples, 0.02%)</title><rect x="8.0029%" y="469" width="0.0243%" height="15" fill="rgb(230,116,27)" fg:x="329" fg:w="1"/><text x="8.2529%" y="479.50"></text></g><g><title>&lt;rand_chacha::chacha::Array64&lt;T&gt; as core::convert::AsRef&lt;[T]&gt;&gt;::as_ref (1 samples, 0.02%)</title><rect x="8.0272%" y="469" width="0.0243%" height="15" fill="rgb(228,99,48)" fg:x="330" fg:w="1"/><text x="8.2772%" y="479.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (3 samples, 0.07%)</title><rect x="8.0516%" y="469" width="0.0730%" height="15" fill="rgb(253,11,6)" fg:x="331" fg:w="3"/><text x="8.3016%" y="479.50"></text></g><g><title>&lt;rand_distr::unit_sphere::UnitSphere as rand::distributions::distribution::Distribution&lt;[F: 3]&gt;&gt;::sample (1 samples, 0.02%)</title><rect x="8.1245%" y="469" width="0.0243%" height="15" fill="rgb(247,143,39)" fg:x="334" fg:w="1"/><text x="8.3745%" y="479.50"></text></g><g><title>&lt;ray_tracing_3d::geometry::shape::Sphere as core::cmp::PartialEq&gt;::eq (2 samples, 0.05%)</title><rect x="8.1489%" y="469" width="0.0486%" height="15" fill="rgb(236,97,10)" fg:x="335" fg:w="2"/><text x="8.3989%" y="479.50"></text></g><g><title>[libc.so.6] (6 samples, 0.15%)</title><rect x="8.1975%" y="469" width="0.1459%" height="15" fill="rgb(233,208,19)" fg:x="337" fg:w="6"/><text x="8.4475%" y="479.50"></text></g><g><title>__powidf2 (1 samples, 0.02%)</title><rect x="8.3435%" y="469" width="0.0243%" height="15" fill="rgb(216,164,2)" fg:x="343" fg:w="1"/><text x="8.5935%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="8.3678%" y="469" width="0.0243%" height="15" fill="rgb(220,129,5)" fg:x="344" fg:w="1"/><text x="8.6178%" y="479.50"></text></g><g><title>core::cmp::max (1 samples, 0.02%)</title><rect x="8.3678%" y="453" width="0.0243%" height="15" fill="rgb(242,17,10)" fg:x="344" fg:w="1"/><text x="8.6178%" y="463.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.02%)</title><rect x="8.3678%" y="437" width="0.0243%" height="15" fill="rgb(242,107,0)" fg:x="344" fg:w="1"/><text x="8.6178%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.02%)</title><rect x="8.3921%" y="469" width="0.0243%" height="15" fill="rgb(251,28,31)" fg:x="345" fg:w="1"/><text x="8.6421%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="8.4164%" y="469" width="0.0243%" height="15" fill="rgb(233,223,10)" fg:x="346" fg:w="1"/><text x="8.6664%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="8.4408%" y="469" width="0.0243%" height="15" fill="rgb(215,21,27)" fg:x="347" fg:w="1"/><text x="8.6908%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi32 (1 samples, 0.02%)</title><rect x="8.4651%" y="469" width="0.0243%" height="15" fill="rgb(232,23,21)" fg:x="348" fg:w="1"/><text x="8.7151%" y="479.50"></text></g><g><title>core::ops::range::RangeBounds::contains (1 samples, 0.02%)</title><rect x="8.4894%" y="469" width="0.0243%" height="15" fill="rgb(244,5,23)" fg:x="349" fg:w="1"/><text x="8.7394%" y="479.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::contains (1 samples, 0.02%)</title><rect x="8.5137%" y="469" width="0.0243%" height="15" fill="rgb(226,81,46)" fg:x="350" fg:w="1"/><text x="8.7637%" y="479.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.02%)</title><rect x="8.5381%" y="469" width="0.0243%" height="15" fill="rgb(247,70,30)" fg:x="351" fg:w="1"/><text x="8.7881%" y="479.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="8.5624%" y="469" width="0.0243%" height="15" fill="rgb(212,68,19)" fg:x="352" fg:w="1"/><text x="8.8124%" y="479.50"></text></g><g><title>ray_tracing_3d::geometry::ray::Ray::intersect (3 samples, 0.07%)</title><rect x="8.5867%" y="469" width="0.0730%" height="15" fill="rgb(240,187,13)" fg:x="353" fg:w="3"/><text x="8.8367%" y="479.50"></text></g><g><title>ray_tracing_3d::geometry::vector::UnitVector::new_from_coordinates (8 samples, 0.19%)</title><rect x="8.6597%" y="469" width="0.1946%" height="15" fill="rgb(223,113,26)" fg:x="356" fg:w="8"/><text x="8.9097%" y="479.50"></text></g><g><title>ray_tracing_3d::geometry::vector::UnitVector::new_from_points (1 samples, 0.02%)</title><rect x="8.8543%" y="469" width="0.0243%" height="15" fill="rgb(206,192,2)" fg:x="364" fg:w="1"/><text x="9.1043%" y="479.50"></text></g><g><title>ray_tracing_3d::geometry::vector::UnitVector::scalar_product (1 samples, 0.02%)</title><rect x="8.8786%" y="469" width="0.0243%" height="15" fill="rgb(241,108,4)" fg:x="365" fg:w="1"/><text x="9.1286%" y="479.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::new_from_coordinates (12 samples, 0.29%)</title><rect x="8.9029%" y="469" width="0.2919%" height="15" fill="rgb(247,173,49)" fg:x="366" fg:w="12"/><text x="9.1529%" y="479.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::new_from_points (8 samples, 0.19%)</title><rect x="9.1948%" y="469" width="0.1946%" height="15" fill="rgb(224,114,35)" fg:x="378" fg:w="8"/><text x="9.4448%" y="479.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::normalize (4 samples, 0.10%)</title><rect x="9.3894%" y="469" width="0.0973%" height="15" fill="rgb(245,159,27)" fg:x="386" fg:w="4"/><text x="9.6394%" y="479.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::norme (6 samples, 0.15%)</title><rect x="9.4867%" y="469" width="0.1459%" height="15" fill="rgb(245,172,44)" fg:x="390" fg:w="6"/><text x="9.7367%" y="479.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::scalar_product (7 samples, 0.17%)</title><rect x="9.6327%" y="469" width="0.1703%" height="15" fill="rgb(236,23,11)" fg:x="396" fg:w="7"/><text x="9.8827%" y="479.50"></text></g><g><title>ray_tracing_3d::optic::image::Grid::pixel_point_selection (1 samples, 0.02%)</title><rect x="9.8030%" y="469" width="0.0243%" height="15" fill="rgb(205,117,38)" fg:x="403" fg:w="1"/><text x="10.0530%" y="479.50"></text></g><g><title>ray_tracing_3d::optic::image::Grid::ray_eye_pixel_point (1 samples, 0.02%)</title><rect x="9.8273%" y="469" width="0.0243%" height="15" fill="rgb(237,72,25)" fg:x="404" fg:w="1"/><text x="10.0773%" y="479.50"></text></g><g><title>realloc (1 samples, 0.02%)</title><rect x="9.8516%" y="469" width="0.0243%" height="15" fill="rgb(244,70,9)" fg:x="405" fg:w="1"/><text x="10.1016%" y="479.50"></text></g><g><title>[unknown] (103 samples, 2.51%)</title><rect x="7.5407%" y="485" width="2.5055%" height="15" fill="rgb(217,125,39)" fg:x="310" fg:w="103"/><text x="7.7907%" y="495.50">[u..</text></g><g><title>std::f64::&lt;impl f64&gt;::powi (7 samples, 0.17%)</title><rect x="9.8759%" y="469" width="0.1703%" height="15" fill="rgb(235,36,10)" fg:x="406" fg:w="7"/><text x="10.1259%" y="479.50"></text></g><g><title>pthread_getattr_np (1 samples, 0.02%)</title><rect x="10.0462%" y="389" width="0.0243%" height="15" fill="rgb(251,123,47)" fg:x="413" fg:w="1"/><text x="10.2962%" y="399.50"></text></g><g><title>pthread_attr_init (1 samples, 0.02%)</title><rect x="10.0462%" y="373" width="0.0243%" height="15" fill="rgb(221,13,13)" fg:x="413" fg:w="1"/><text x="10.2962%" y="383.50"></text></g><g><title>&lt;ray_tracing_3d::optic::image::Grid as core::default::Default&gt;::default (2 samples, 0.05%)</title><rect x="10.0705%" y="309" width="0.0486%" height="15" fill="rgb(238,131,9)" fg:x="414" fg:w="2"/><text x="10.3205%" y="319.50"></text></g><g><title>alloc::vec::from_elem (2 samples, 0.05%)</title><rect x="10.0705%" y="293" width="0.0486%" height="15" fill="rgb(211,50,8)" fg:x="414" fg:w="2"/><text x="10.3205%" y="303.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (2 samples, 0.05%)</title><rect x="10.0705%" y="277" width="0.0486%" height="15" fill="rgb(245,182,24)" fg:x="414" fg:w="2"/><text x="10.3205%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (2 samples, 0.05%)</title><rect x="10.0705%" y="261" width="0.0486%" height="15" fill="rgb(242,14,37)" fg:x="414" fg:w="2"/><text x="10.3205%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.05%)</title><rect x="10.0705%" y="245" width="0.0486%" height="15" fill="rgb(246,228,12)" fg:x="414" fg:w="2"/><text x="10.3205%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.05%)</title><rect x="10.0705%" y="229" width="0.0486%" height="15" fill="rgb(213,55,15)" fg:x="414" fg:w="2"/><text x="10.3205%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.05%)</title><rect x="10.0705%" y="213" width="0.0486%" height="15" fill="rgb(209,9,3)" fg:x="414" fg:w="2"/><text x="10.3205%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.05%)</title><rect x="10.0705%" y="197" width="0.0486%" height="15" fill="rgb(230,59,30)" fg:x="414" fg:w="2"/><text x="10.3205%" y="207.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.05%)</title><rect x="10.0705%" y="181" width="0.0486%" height="15" fill="rgb(209,121,21)" fg:x="414" fg:w="2"/><text x="10.3205%" y="191.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.05%)</title><rect x="10.0705%" y="165" width="0.0486%" height="15" fill="rgb(220,109,13)" fg:x="414" fg:w="2"/><text x="10.3205%" y="175.50"></text></g><g><title>[libc.so.6] (2 samples, 0.05%)</title><rect x="10.0705%" y="149" width="0.0486%" height="15" fill="rgb(232,18,1)" fg:x="414" fg:w="2"/><text x="10.3205%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.02%)</title><rect x="10.5814%" y="261" width="0.0243%" height="15" fill="rgb(215,41,42)" fg:x="435" fg:w="1"/><text x="10.8314%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.02%)</title><rect x="10.5814%" y="245" width="0.0243%" height="15" fill="rgb(224,123,36)" fg:x="435" fg:w="1"/><text x="10.8314%" y="255.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="10.5814%" y="229" width="0.0243%" height="15" fill="rgb(240,125,3)" fg:x="435" fg:w="1"/><text x="10.8314%" y="239.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="10.5814%" y="213" width="0.0243%" height="15" fill="rgb(205,98,50)" fg:x="435" fg:w="1"/><text x="10.8314%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (3 samples, 0.07%)</title><rect x="10.5814%" y="277" width="0.0730%" height="15" fill="rgb(205,185,37)" fg:x="435" fg:w="3"/><text x="10.8314%" y="287.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (2 samples, 0.05%)</title><rect x="10.6057%" y="261" width="0.0486%" height="15" fill="rgb(238,207,15)" fg:x="436" fg:w="2"/><text x="10.8557%" y="271.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (2 samples, 0.05%)</title><rect x="10.6057%" y="245" width="0.0486%" height="15" fill="rgb(213,199,42)" fg:x="436" fg:w="2"/><text x="10.8557%" y="255.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (2 samples, 0.05%)</title><rect x="10.6057%" y="229" width="0.0486%" height="15" fill="rgb(235,201,11)" fg:x="436" fg:w="2"/><text x="10.8557%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (8 samples, 0.19%)</title><rect x="10.5084%" y="293" width="0.1946%" height="15" fill="rgb(207,46,11)" fg:x="432" fg:w="8"/><text x="10.7584%" y="303.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (2 samples, 0.05%)</title><rect x="10.6543%" y="277" width="0.0486%" height="15" fill="rgb(241,35,35)" fg:x="438" fg:w="2"/><text x="10.9043%" y="287.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 0.05%)</title><rect x="10.6543%" y="261" width="0.0486%" height="15" fill="rgb(243,32,47)" fg:x="438" fg:w="2"/><text x="10.9043%" y="271.50"></text></g><g><title>&lt;&amp;ray_tracing_3d::optic::color::Color as core::ops::arith::Add&gt;::add (9 samples, 0.22%)</title><rect x="13.7193%" y="277" width="0.2189%" height="15" fill="rgb(247,202,23)" fg:x="564" fg:w="9"/><text x="13.9693%" y="287.50"></text></g><g><title>&lt;&amp;ray_tracing_3d::optic::color::Color as core::ops::arith::Mul&lt;f64&gt;&gt;::mul (4 samples, 0.10%)</title><rect x="13.9382%" y="277" width="0.0973%" height="15" fill="rgb(219,102,11)" fg:x="573" fg:w="4"/><text x="14.1882%" y="287.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (18 samples, 0.44%)</title><rect x="14.0355%" y="277" width="0.4378%" height="15" fill="rgb(243,110,44)" fg:x="577" fg:w="18"/><text x="14.2855%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (2 samples, 0.05%)</title><rect x="14.4734%" y="277" width="0.0486%" height="15" fill="rgb(222,74,54)" fg:x="595" fg:w="2"/><text x="14.7234%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.02%)</title><rect x="14.4977%" y="261" width="0.0243%" height="15" fill="rgb(216,99,12)" fg:x="596" fg:w="1"/><text x="14.7477%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.02%)</title><rect x="14.4977%" y="245" width="0.0243%" height="15" fill="rgb(226,22,26)" fg:x="596" fg:w="1"/><text x="14.7477%" y="255.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.07%)</title><rect x="14.7896%" y="261" width="0.0730%" height="15" fill="rgb(217,163,10)" fg:x="608" fg:w="3"/><text x="15.0396%" y="271.50"></text></g><g><title>core::mem::zeroed (3 samples, 0.07%)</title><rect x="14.8626%" y="261" width="0.0730%" height="15" fill="rgb(213,25,53)" fg:x="611" fg:w="3"/><text x="15.1126%" y="271.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::zeroed (3 samples, 0.07%)</title><rect x="14.8626%" y="245" width="0.0730%" height="15" fill="rgb(252,105,26)" fg:x="611" fg:w="3"/><text x="15.1126%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (3 samples, 0.07%)</title><rect x="14.8626%" y="229" width="0.0730%" height="15" fill="rgb(220,39,43)" fg:x="611" fg:w="3"/><text x="15.1126%" y="239.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.02%)</title><rect x="14.9112%" y="213" width="0.0243%" height="15" fill="rgb(229,68,48)" fg:x="613" fg:w="1"/><text x="15.1612%" y="223.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::wrapping_byte_sub (1 samples, 0.02%)</title><rect x="14.9355%" y="261" width="0.0243%" height="15" fill="rgb(252,8,32)" fg:x="614" fg:w="1"/><text x="15.1855%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::wrapping_sub (1 samples, 0.02%)</title><rect x="14.9355%" y="245" width="0.0243%" height="15" fill="rgb(223,20,43)" fg:x="614" fg:w="1"/><text x="15.1855%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::wrapping_offset (1 samples, 0.02%)</title><rect x="14.9355%" y="229" width="0.0243%" height="15" fill="rgb(229,81,49)" fg:x="614" fg:w="1"/><text x="15.1855%" y="239.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (4 samples, 0.10%)</title><rect x="14.9599%" y="261" width="0.0973%" height="15" fill="rgb(236,28,36)" fg:x="615" fg:w="4"/><text x="15.2099%" y="271.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.63%)</title><rect x="14.5220%" y="277" width="0.6324%" height="15" fill="rgb(249,185,26)" fg:x="597" fg:w="26"/><text x="14.7720%" y="287.50"></text></g><g><title>core::ptr::read (4 samples, 0.10%)</title><rect x="15.0572%" y="261" width="0.0973%" height="15" fill="rgb(249,174,33)" fg:x="619" fg:w="4"/><text x="15.3072%" y="271.50"></text></g><g><title>[libc.so.6] (17 samples, 0.41%)</title><rect x="15.5193%" y="261" width="0.4135%" height="15" fill="rgb(233,201,37)" fg:x="638" fg:w="17"/><text x="15.7693%" y="271.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (34 samples, 0.83%)</title><rect x="15.1545%" y="277" width="0.8270%" height="15" fill="rgb(221,78,26)" fg:x="623" fg:w="34"/><text x="15.4045%" y="287.50"></text></g><g><title>memcpy@plt (2 samples, 0.05%)</title><rect x="15.9329%" y="261" width="0.0486%" height="15" fill="rgb(250,127,30)" fg:x="655" fg:w="2"/><text x="16.1829%" y="271.50"></text></g><g><title>&lt;ray_tracing_3d::optic::color::Color as core::cmp::PartialEq&gt;::eq (3 samples, 0.07%)</title><rect x="15.9815%" y="277" width="0.0730%" height="15" fill="rgb(230,49,44)" fg:x="657" fg:w="3"/><text x="16.2315%" y="287.50"></text></g><g><title>[libc.so.6] (8 samples, 0.19%)</title><rect x="16.0545%" y="277" width="0.1946%" height="15" fill="rgb(229,67,23)" fg:x="660" fg:w="8"/><text x="16.3045%" y="287.50"></text></g><g><title>[ray_tracing_3d] (1 samples, 0.02%)</title><rect x="16.2491%" y="277" width="0.0243%" height="15" fill="rgb(249,83,47)" fg:x="668" fg:w="1"/><text x="16.4991%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;ray_tracing_3d::geometry::vector::UnitVector&gt;&gt; (1 samples, 0.02%)</title><rect x="16.2491%" y="261" width="0.0243%" height="15" fill="rgb(215,43,3)" fg:x="668" fg:w="1"/><text x="16.4991%" y="271.50"></text></g><g><title>&lt;u64 as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.02%)</title><rect x="16.5896%" y="245" width="0.0243%" height="15" fill="rgb(238,154,13)" fg:x="682" fg:w="1"/><text x="16.8396%" y="255.50"></text></g><g><title>core::mem::replace (4 samples, 0.10%)</title><rect x="16.6140%" y="245" width="0.0973%" height="15" fill="rgb(219,56,2)" fg:x="683" fg:w="4"/><text x="16.8640%" y="255.50"></text></g><g><title>core::ptr::write (4 samples, 0.10%)</title><rect x="16.6140%" y="229" width="0.0973%" height="15" fill="rgb(233,0,4)" fg:x="683" fg:w="4"/><text x="16.8640%" y="239.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::next (19 samples, 0.46%)</title><rect x="16.2734%" y="277" width="0.4622%" height="15" fill="rgb(235,30,7)" fg:x="669" fg:w="19"/><text x="16.5234%" y="287.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_next (18 samples, 0.44%)</title><rect x="16.2977%" y="261" width="0.4378%" height="15" fill="rgb(250,79,13)" fg:x="670" fg:w="18"/><text x="16.5477%" y="271.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::is_empty (1 samples, 0.02%)</title><rect x="16.7113%" y="245" width="0.0243%" height="15" fill="rgb(211,146,34)" fg:x="687" fg:w="1"/><text x="16.9613%" y="255.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::new (1 samples, 0.02%)</title><rect x="16.7356%" y="277" width="0.0243%" height="15" fill="rgb(228,22,38)" fg:x="688" fg:w="1"/><text x="16.9856%" y="287.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (18 samples, 0.44%)</title><rect x="16.8815%" y="229" width="0.4378%" height="15" fill="rgb(235,168,5)" fg:x="694" fg:w="18"/><text x="17.1315%" y="239.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (18 samples, 0.44%)</title><rect x="16.8815%" y="213" width="0.4378%" height="15" fill="rgb(221,155,16)" fg:x="694" fg:w="18"/><text x="17.1315%" y="223.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (15 samples, 0.36%)</title><rect x="16.9545%" y="197" width="0.3649%" height="15" fill="rgb(215,215,53)" fg:x="697" fg:w="15"/><text x="17.2045%" y="207.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (12 samples, 0.29%)</title><rect x="17.0275%" y="181" width="0.2919%" height="15" fill="rgb(223,4,10)" fg:x="700" fg:w="12"/><text x="17.2775%" y="191.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (12 samples, 0.29%)</title><rect x="17.0275%" y="165" width="0.2919%" height="15" fill="rgb(234,103,6)" fg:x="700" fg:w="12"/><text x="17.2775%" y="175.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="17.3194%" y="229" width="0.0243%" height="15" fill="rgb(227,97,0)" fg:x="712" fg:w="1"/><text x="17.5694%" y="239.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="17.3437%" y="213" width="0.0243%" height="15" fill="rgb(234,150,53)" fg:x="713" fg:w="1"/><text x="17.5937%" y="223.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (26 samples, 0.63%)</title><rect x="16.7599%" y="245" width="0.6324%" height="15" fill="rgb(228,201,54)" fg:x="689" fg:w="26"/><text x="17.0099%" y="255.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (2 samples, 0.05%)</title><rect x="17.3437%" y="229" width="0.0486%" height="15" fill="rgb(222,22,37)" fg:x="713" fg:w="2"/><text x="17.5937%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (1 samples, 0.02%)</title><rect x="17.3680%" y="213" width="0.0243%" height="15" fill="rgb(237,53,32)" fg:x="714" fg:w="1"/><text x="17.6180%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::from_raw_parts_in (4 samples, 0.10%)</title><rect x="17.4410%" y="213" width="0.0973%" height="15" fill="rgb(233,25,53)" fg:x="717" fg:w="4"/><text x="17.6910%" y="223.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="17.5140%" y="197" width="0.0243%" height="15" fill="rgb(210,40,34)" fg:x="720" fg:w="1"/><text x="17.7640%" y="207.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="17.5140%" y="181" width="0.0243%" height="15" fill="rgb(241,220,44)" fg:x="720" fg:w="1"/><text x="17.7640%" y="191.50"></text></g><g><title>cfree (9 samples, 0.22%)</title><rect x="17.7086%" y="149" width="0.2189%" height="15" fill="rgb(235,28,35)" fg:x="728" fg:w="9"/><text x="17.9586%" y="159.50"></text></g><g><title>[libc.so.6] (5 samples, 0.12%)</title><rect x="17.8059%" y="133" width="0.1216%" height="15" fill="rgb(210,56,17)" fg:x="732" fg:w="5"/><text x="18.0559%" y="143.50"></text></g><g><title>[libc.so.6] (2 samples, 0.05%)</title><rect x="17.8789%" y="117" width="0.0486%" height="15" fill="rgb(224,130,29)" fg:x="735" fg:w="2"/><text x="18.1289%" y="127.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="17.9032%" y="101" width="0.0243%" height="15" fill="rgb(235,212,8)" fg:x="736" fg:w="1"/><text x="18.1532%" y="111.50"></text></g><g><title>core::alloc::layout::Layout::align (1 samples, 0.02%)</title><rect x="17.9275%" y="149" width="0.0243%" height="15" fill="rgb(223,33,50)" fg:x="737" fg:w="1"/><text x="18.1775%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.36%)</title><rect x="17.6113%" y="181" width="0.3649%" height="15" fill="rgb(219,149,13)" fg:x="724" fg:w="15"/><text x="17.8613%" y="191.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.27%)</title><rect x="17.7086%" y="165" width="0.2676%" height="15" fill="rgb(250,156,29)" fg:x="728" fg:w="11"/><text x="17.9586%" y="175.50"></text></g><g><title>core::alloc::layout::Layout::size (1 samples, 0.02%)</title><rect x="17.9518%" y="149" width="0.0243%" height="15" fill="rgb(216,193,19)" fg:x="738" fg:w="1"/><text x="18.2018%" y="159.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.02%)</title><rect x="18.1708%" y="165" width="0.0243%" height="15" fill="rgb(216,135,14)" fg:x="747" fg:w="1"/><text x="18.4208%" y="175.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::cast (1 samples, 0.02%)</title><rect x="18.1951%" y="149" width="0.0243%" height="15" fill="rgb(241,47,5)" fg:x="748" fg:w="1"/><text x="18.4451%" y="159.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="18.1951%" y="133" width="0.0243%" height="15" fill="rgb(233,42,35)" fg:x="748" fg:w="1"/><text x="18.4451%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;ray_tracing_3d::geometry::vector::UnitVector&gt;&gt; (61 samples, 1.48%)</title><rect x="16.7599%" y="277" width="1.4838%" height="15" fill="rgb(231,13,6)" fg:x="689" fg:w="61"/><text x="17.0099%" y="287.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (61 samples, 1.48%)</title><rect x="16.7599%" y="261" width="1.4838%" height="15" fill="rgb(207,181,40)" fg:x="689" fg:w="61"/><text x="17.0099%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;ray_tracing_3d::geometry::vector::UnitVector,alloc::alloc::Global&gt;&gt; (35 samples, 0.85%)</title><rect x="17.3924%" y="245" width="0.8514%" height="15" fill="rgb(254,173,49)" fg:x="715" fg:w="35"/><text x="17.6424%" y="255.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.85%)</title><rect x="17.3924%" y="229" width="0.8514%" height="15" fill="rgb(221,1,38)" fg:x="715" fg:w="35"/><text x="17.6424%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;ray_tracing_3d::geometry::vector::UnitVector&gt;&gt; (29 samples, 0.71%)</title><rect x="17.5383%" y="213" width="0.7054%" height="15" fill="rgb(206,124,46)" fg:x="721" fg:w="29"/><text x="17.7883%" y="223.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.71%)</title><rect x="17.5383%" y="197" width="0.7054%" height="15" fill="rgb(249,21,11)" fg:x="721" fg:w="29"/><text x="17.7883%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (11 samples, 0.27%)</title><rect x="17.9762%" y="181" width="0.2676%" height="15" fill="rgb(222,201,40)" fg:x="739" fg:w="11"/><text x="18.2262%" y="191.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::cast (2 samples, 0.05%)</title><rect x="18.1951%" y="165" width="0.0486%" height="15" fill="rgb(235,61,29)" fg:x="748" fg:w="2"/><text x="18.4451%" y="175.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="18.2194%" y="149" width="0.0243%" height="15" fill="rgb(219,207,3)" fg:x="749" fg:w="1"/><text x="18.4694%" y="159.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="18.2194%" y="133" width="0.0243%" height="15" fill="rgb(222,56,46)" fg:x="749" fg:w="1"/><text x="18.4694%" y="143.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.05%)</title><rect x="18.7059%" y="213" width="0.0486%" height="15" fill="rgb(239,76,54)" fg:x="769" fg:w="2"/><text x="18.9559%" y="223.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::normalize (7 samples, 0.17%)</title><rect x="18.7546%" y="213" width="0.1703%" height="15" fill="rgb(231,124,27)" fg:x="771" fg:w="7"/><text x="19.0046%" y="223.50"></text></g><g><title>&lt;&amp;ray_tracing_3d::geometry::vector::Vector as core::ops::arith::Add&gt;::add (24 samples, 0.58%)</title><rect x="18.4383%" y="245" width="0.5838%" height="15" fill="rgb(249,195,6)" fg:x="758" fg:w="24"/><text x="18.6883%" y="255.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::new_from_coordinates (16 samples, 0.39%)</title><rect x="18.6329%" y="229" width="0.3892%" height="15" fill="rgb(237,174,47)" fg:x="766" fg:w="16"/><text x="18.8829%" y="239.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::norme (4 samples, 0.10%)</title><rect x="18.9248%" y="213" width="0.0973%" height="15" fill="rgb(206,201,31)" fg:x="778" fg:w="4"/><text x="19.1748%" y="223.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (4 samples, 0.10%)</title><rect x="18.9248%" y="197" width="0.0973%" height="15" fill="rgb(231,57,52)" fg:x="778" fg:w="4"/><text x="19.1748%" y="207.50"></text></g><g><title>&lt;&amp;ray_tracing_3d::geometry::vector::UnitVector as core::ops::arith::Add&lt;&amp;ray_tracing_3d::geometry::vector::Vector&gt;&gt;::add (26 samples, 0.63%)</title><rect x="18.4383%" y="261" width="0.6324%" height="15" fill="rgb(248,177,22)" fg:x="758" fg:w="26"/><text x="18.6883%" y="271.50"></text></g><g><title>ray_tracing_3d::geometry::vector::UnitVector::to_vector (2 samples, 0.05%)</title><rect x="19.0221%" y="245" width="0.0486%" height="15" fill="rgb(215,211,37)" fg:x="782" fg:w="2"/><text x="19.2721%" y="255.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.05%)</title><rect x="19.0708%" y="261" width="0.0486%" height="15" fill="rgb(241,128,51)" fg:x="784" fg:w="2"/><text x="19.3208%" y="271.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (1 samples, 0.02%)</title><rect x="19.5330%" y="229" width="0.0243%" height="15" fill="rgb(227,165,31)" fg:x="803" fg:w="1"/><text x="19.7830%" y="239.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (3 samples, 0.07%)</title><rect x="19.5573%" y="229" width="0.0730%" height="15" fill="rgb(228,167,24)" fg:x="804" fg:w="3"/><text x="19.8073%" y="239.50"></text></g><g><title>&lt;f64 as core::ops::arith::Sub&gt;::sub (2 samples, 0.05%)</title><rect x="19.6303%" y="229" width="0.0486%" height="15" fill="rgb(228,143,12)" fg:x="807" fg:w="2"/><text x="19.8803%" y="239.50"></text></g><g><title>&lt;f64 as num_traits::cast::NumCast&gt;::from (3 samples, 0.07%)</title><rect x="19.6789%" y="229" width="0.0730%" height="15" fill="rgb(249,149,8)" fg:x="809" fg:w="3"/><text x="19.9289%" y="239.50"></text></g><g><title>&lt;f64 as num_traits::cast::ToPrimitive&gt;::to_f64 (1 samples, 0.02%)</title><rect x="19.7276%" y="213" width="0.0243%" height="15" fill="rgb(243,35,44)" fg:x="811" fg:w="1"/><text x="19.9776%" y="223.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::sqrt (1 samples, 0.02%)</title><rect x="19.7519%" y="229" width="0.0243%" height="15" fill="rgb(246,89,9)" fg:x="812" fg:w="1"/><text x="20.0019%" y="239.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (1 samples, 0.02%)</title><rect x="19.7519%" y="213" width="0.0243%" height="15" fill="rgb(233,213,13)" fg:x="812" fg:w="1"/><text x="20.0019%" y="223.50"></text></g><g><title>&lt;rand_chacha::chacha::Array64&lt;T&gt; as core::convert::AsRef&lt;[T]&gt;&gt;::as_ref (2 samples, 0.05%)</title><rect x="20.0681%" y="133" width="0.0486%" height="15" fill="rgb(233,141,41)" fg:x="825" fg:w="2"/><text x="20.3181%" y="143.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::new (3 samples, 0.07%)</title><rect x="20.1897%" y="117" width="0.0730%" height="15" fill="rgb(239,167,4)" fg:x="830" fg:w="3"/><text x="20.4397%" y="127.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (6 samples, 0.15%)</title><rect x="20.5060%" y="85" width="0.1459%" height="15" fill="rgb(209,217,16)" fg:x="843" fg:w="6"/><text x="20.7560%" y="95.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (3 samples, 0.07%)</title><rect x="20.5789%" y="69" width="0.0730%" height="15" fill="rgb(219,88,35)" fg:x="846" fg:w="3"/><text x="20.8289%" y="79.50"></text></g><g><title>core::ptr::slice_from_raw_parts (3 samples, 0.07%)</title><rect x="20.5789%" y="53" width="0.0730%" height="15" fill="rgb(220,193,23)" fg:x="846" fg:w="3"/><text x="20.8289%" y="63.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (3 samples, 0.07%)</title><rect x="20.5789%" y="37" width="0.0730%" height="15" fill="rgb(230,90,52)" fg:x="846" fg:w="3"/><text x="20.8289%" y="47.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64::_{{closure}} (24 samples, 0.58%)</title><rect x="20.1168%" y="133" width="0.5838%" height="15" fill="rgb(252,106,19)" fg:x="827" fg:w="24"/><text x="20.3668%" y="143.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (18 samples, 0.44%)</title><rect x="20.2627%" y="117" width="0.4378%" height="15" fill="rgb(206,74,20)" fg:x="833" fg:w="18"/><text x="20.5127%" y="127.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (15 samples, 0.36%)</title><rect x="20.3357%" y="101" width="0.3649%" height="15" fill="rgb(230,138,44)" fg:x="836" fg:w="15"/><text x="20.5857%" y="111.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;usize&gt;::into_slice_range (2 samples, 0.05%)</title><rect x="20.6519%" y="85" width="0.0486%" height="15" fill="rgb(235,182,43)" fg:x="849" fg:w="2"/><text x="20.9019%" y="95.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="21.3087%" y="85" width="0.0243%" height="15" fill="rgb(242,16,51)" fg:x="876" fg:w="1"/><text x="21.5587%" y="95.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.39%)</title><rect x="21.0654%" y="101" width="0.3892%" height="15" fill="rgb(248,9,4)" fg:x="866" fg:w="16"/><text x="21.3154%" y="111.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (5 samples, 0.12%)</title><rect x="21.3330%" y="85" width="0.1216%" height="15" fill="rgb(210,31,22)" fg:x="877" fg:w="5"/><text x="21.5830%" y="95.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (2 samples, 0.05%)</title><rect x="21.4060%" y="69" width="0.0486%" height="15" fill="rgb(239,54,39)" fg:x="880" fg:w="2"/><text x="21.6560%" y="79.50"></text></g><g><title>core::slice::iter::&lt;impl core::iter::traits::collect::IntoIterator for &amp;mut [T]&gt;::into_iter (1 samples, 0.02%)</title><rect x="21.4546%" y="101" width="0.0243%" height="15" fill="rgb(230,99,41)" fg:x="882" fg:w="1"/><text x="21.7046%" y="111.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (1 samples, 0.02%)</title><rect x="21.4546%" y="85" width="0.0243%" height="15" fill="rgb(253,106,12)" fg:x="882" fg:w="1"/><text x="21.7046%" y="95.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="21.4546%" y="69" width="0.0243%" height="15" fill="rgb(213,46,41)" fg:x="882" fg:w="1"/><text x="21.7046%" y="79.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (1 samples, 0.02%)</title><rect x="21.5033%" y="85" width="0.0243%" height="15" fill="rgb(215,133,35)" fg:x="884" fg:w="1"/><text x="21.7533%" y="95.50"></text></g><g><title>&lt;rand::distributions::uniform::Uniform&lt;X&gt; as rand::distributions::distribution::Distribution&lt;X&gt;&gt;::sample (73 samples, 1.78%)</title><rect x="19.7762%" y="229" width="1.7757%" height="15" fill="rgb(213,28,5)" fg:x="813" fg:w="73"/><text x="20.0262%" y="239.50">&lt;..</text></g><g><title>&lt;rand::distributions::uniform::UniformFloat&lt;f64&gt; as rand::distributions::uniform::UniformSampler&gt;::sample (70 samples, 1.70%)</title><rect x="19.8492%" y="213" width="1.7027%" height="15" fill="rgb(215,77,49)" fg:x="816" fg:w="70"/><text x="20.0992%" y="223.50"></text></g><g><title>rand::rng::Rng::gen (65 samples, 1.58%)</title><rect x="19.9708%" y="197" width="1.5811%" height="15" fill="rgb(248,100,22)" fg:x="821" fg:w="65"/><text x="20.2208%" y="207.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u64&gt; for rand::distributions::Standard&gt;::sample (65 samples, 1.58%)</title><rect x="19.9708%" y="181" width="1.5811%" height="15" fill="rgb(208,67,9)" fg:x="821" fg:w="65"/><text x="20.2208%" y="191.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha8Rng as rand_core::RngCore&gt;::next_u64 (65 samples, 1.58%)</title><rect x="19.9708%" y="165" width="1.5811%" height="15" fill="rgb(219,133,21)" fg:x="821" fg:w="65"/><text x="20.2208%" y="175.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (65 samples, 1.58%)</title><rect x="19.9708%" y="149" width="1.5811%" height="15" fill="rgb(246,46,29)" fg:x="821" fg:w="65"/><text x="20.2208%" y="159.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (35 samples, 0.85%)</title><rect x="20.7006%" y="133" width="0.8514%" height="15" fill="rgb(246,185,52)" fg:x="851" fg:w="35"/><text x="20.9506%" y="143.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha8Core as rand_core::block::BlockRngCore&gt;::generate (34 samples, 0.83%)</title><rect x="20.7249%" y="117" width="0.8270%" height="15" fill="rgb(252,136,11)" fg:x="852" fg:w="34"/><text x="20.9749%" y="127.50"></text></g><g><title>rand_chacha::guts::refill_wide (3 samples, 0.07%)</title><rect x="21.4790%" y="101" width="0.0730%" height="15" fill="rgb(219,138,53)" fg:x="883" fg:w="3"/><text x="21.7290%" y="111.50"></text></g><g><title>std_detect::detect::arch::x86::__is_feature_detected::avx2 (1 samples, 0.02%)</title><rect x="21.5276%" y="85" width="0.0243%" height="15" fill="rgb(211,51,23)" fg:x="885" fg:w="1"/><text x="21.7776%" y="95.50"></text></g><g><title>std_detect::detect::cache::test (1 samples, 0.02%)</title><rect x="21.5276%" y="69" width="0.0243%" height="15" fill="rgb(247,221,28)" fg:x="885" fg:w="1"/><text x="21.7776%" y="79.50"></text></g><g><title>std_detect::detect::cache::Cache::test (1 samples, 0.02%)</title><rect x="21.5276%" y="53" width="0.0243%" height="15" fill="rgb(251,222,45)" fg:x="885" fg:w="1"/><text x="21.7776%" y="63.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="21.5276%" y="37" width="0.0243%" height="15" fill="rgb(217,162,53)" fg:x="885" fg:w="1"/><text x="21.7776%" y="47.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::ge (1 samples, 0.02%)</title><rect x="21.5519%" y="229" width="0.0243%" height="15" fill="rgb(229,93,14)" fg:x="886" fg:w="1"/><text x="21.8019%" y="239.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (4 samples, 0.10%)</title><rect x="21.5763%" y="229" width="0.0973%" height="15" fill="rgb(209,67,49)" fg:x="887" fg:w="4"/><text x="21.8263%" y="239.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (113 samples, 2.75%)</title><rect x="19.1194%" y="261" width="2.7487%" height="15" fill="rgb(213,87,29)" fg:x="786" fg:w="113"/><text x="19.3694%" y="271.50">&lt;r..</text></g><g><title>&lt;rand_distr::unit_sphere::UnitSphere as rand::distributions::distribution::Distribution&lt;[F: 3]&gt;&gt;::sample (112 samples, 2.72%)</title><rect x="19.1438%" y="245" width="2.7244%" height="15" fill="rgb(205,151,52)" fg:x="787" fg:w="112"/><text x="19.3938%" y="255.50">&lt;r..</text></g><g><title>rand::distributions::uniform::Uniform&lt;X&gt;::new (8 samples, 0.19%)</title><rect x="21.6736%" y="229" width="0.1946%" height="15" fill="rgb(253,215,39)" fg:x="891" fg:w="8"/><text x="21.9236%" y="239.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformFloat&lt;f64&gt; as rand::distributions::uniform::UniformSampler&gt;::new (7 samples, 0.17%)</title><rect x="21.6979%" y="213" width="0.1703%" height="15" fill="rgb(221,220,41)" fg:x="892" fg:w="7"/><text x="21.9479%" y="223.50"></text></g><g><title>&lt;f64 as rand::distributions::utils::FloatSIMDUtils&gt;::all_finite (5 samples, 0.12%)</title><rect x="21.7465%" y="197" width="0.1216%" height="15" fill="rgb(218,133,21)" fg:x="894" fg:w="5"/><text x="21.9965%" y="207.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::is_finite (5 samples, 0.12%)</title><rect x="21.7465%" y="181" width="0.1216%" height="15" fill="rgb(221,193,43)" fg:x="894" fg:w="5"/><text x="21.9965%" y="191.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::abs_private (1 samples, 0.02%)</title><rect x="21.8438%" y="165" width="0.0243%" height="15" fill="rgb(240,128,52)" fg:x="898" fg:w="1"/><text x="22.0938%" y="175.50"></text></g><g><title>[libc.so.6] (6 samples, 0.15%)</title><rect x="21.8682%" y="261" width="0.1459%" height="15" fill="rgb(253,114,12)" fg:x="899" fg:w="6"/><text x="22.1182%" y="271.50"></text></g><g><title>memcpy@plt (2 samples, 0.05%)</title><rect x="22.0141%" y="261" width="0.0486%" height="15" fill="rgb(215,223,47)" fg:x="905" fg:w="2"/><text x="22.2641%" y="271.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.07%)</title><rect x="22.1357%" y="245" width="0.0730%" height="15" fill="rgb(248,225,23)" fg:x="910" fg:w="3"/><text x="22.3857%" y="255.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::normalize (4 samples, 0.10%)</title><rect x="22.2087%" y="245" width="0.0973%" height="15" fill="rgb(250,108,0)" fg:x="913" fg:w="4"/><text x="22.4587%" y="255.50"></text></g><g><title>ray_tracing_3d::geometry::ray::Ray::cos_weighted_random_ray_unit_sphere (176 samples, 4.28%)</title><rect x="18.2437%" y="277" width="4.2812%" height="15" fill="rgb(228,208,7)" fg:x="750" fg:w="176"/><text x="18.4937%" y="287.50">ray_t..</text></g><g><title>ray_tracing_3d::geometry::vector::Vector::new_from_coordinates (19 samples, 0.46%)</title><rect x="22.0628%" y="261" width="0.4622%" height="15" fill="rgb(244,45,10)" fg:x="907" fg:w="19"/><text x="22.3128%" y="271.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::norme (9 samples, 0.22%)</title><rect x="22.3060%" y="245" width="0.2189%" height="15" fill="rgb(207,125,25)" fg:x="917" fg:w="9"/><text x="22.5560%" y="255.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (8 samples, 0.19%)</title><rect x="22.3303%" y="229" width="0.1946%" height="15" fill="rgb(210,195,18)" fg:x="918" fg:w="8"/><text x="22.5803%" y="239.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.02%)</title><rect x="24.3493%" y="261" width="0.0243%" height="15" fill="rgb(249,80,12)" fg:x="1001" fg:w="1"/><text x="24.5993%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.02%)</title><rect x="24.3980%" y="245" width="0.0243%" height="15" fill="rgb(221,65,9)" fg:x="1003" fg:w="1"/><text x="24.6480%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (8 samples, 0.19%)</title><rect x="24.3736%" y="261" width="0.1946%" height="15" fill="rgb(235,49,36)" fg:x="1002" fg:w="8"/><text x="24.6236%" y="271.50"></text></g><g><title>core::slice::raw::from_raw_parts (6 samples, 0.15%)</title><rect x="24.4223%" y="245" width="0.1459%" height="15" fill="rgb(225,32,20)" fg:x="1004" fg:w="6"/><text x="24.6723%" y="255.50"></text></g><g><title>core::ptr::slice_from_raw_parts (6 samples, 0.15%)</title><rect x="24.4223%" y="229" width="0.1459%" height="15" fill="rgb(215,141,46)" fg:x="1004" fg:w="6"/><text x="24.6723%" y="239.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (6 samples, 0.15%)</title><rect x="24.4223%" y="213" width="0.1459%" height="15" fill="rgb(250,160,47)" fg:x="1004" fg:w="6"/><text x="24.6723%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (8 samples, 0.19%)</title><rect x="24.6412%" y="245" width="0.1946%" height="15" fill="rgb(216,222,40)" fg:x="1013" fg:w="8"/><text x="24.8912%" y="255.50"></text></g><g><title>core::slice::raw::from_raw_parts (7 samples, 0.17%)</title><rect x="24.6655%" y="229" width="0.1703%" height="15" fill="rgb(234,217,39)" fg:x="1014" fg:w="7"/><text x="24.9155%" y="239.50"></text></g><g><title>core::ptr::slice_from_raw_parts (7 samples, 0.17%)</title><rect x="24.6655%" y="213" width="0.1703%" height="15" fill="rgb(207,178,40)" fg:x="1014" fg:w="7"/><text x="24.9155%" y="223.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (7 samples, 0.17%)</title><rect x="24.6655%" y="197" width="0.1703%" height="15" fill="rgb(221,136,13)" fg:x="1014" fg:w="7"/><text x="24.9155%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (15 samples, 0.36%)</title><rect x="24.5682%" y="261" width="0.3649%" height="15" fill="rgb(249,199,10)" fg:x="1010" fg:w="15"/><text x="24.8182%" y="271.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4 samples, 0.10%)</title><rect x="24.8358%" y="245" width="0.0973%" height="15" fill="rgb(249,222,13)" fg:x="1021" fg:w="4"/><text x="25.0858%" y="255.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4 samples, 0.10%)</title><rect x="24.8358%" y="229" width="0.0973%" height="15" fill="rgb(244,185,38)" fg:x="1021" fg:w="4"/><text x="25.0858%" y="239.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (25 samples, 0.61%)</title><rect x="28.5089%" y="213" width="0.6081%" height="15" fill="rgb(236,202,9)" fg:x="1172" fg:w="25"/><text x="28.7589%" y="223.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (4 samples, 0.10%)</title><rect x="29.1170%" y="213" width="0.0973%" height="15" fill="rgb(250,229,37)" fg:x="1197" fg:w="4"/><text x="29.3670%" y="223.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (117 samples, 2.85%)</title><rect x="27.0980%" y="229" width="2.8460%" height="15" fill="rgb(206,174,23)" fg:x="1114" fg:w="117"/><text x="27.3480%" y="239.50">&lt;c..</text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (30 samples, 0.73%)</title><rect x="29.2143%" y="213" width="0.7297%" height="15" fill="rgb(211,33,43)" fg:x="1201" fg:w="30"/><text x="29.4643%" y="223.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (12 samples, 0.29%)</title><rect x="29.6522%" y="197" width="0.2919%" height="15" fill="rgb(245,58,50)" fg:x="1219" fg:w="12"/><text x="29.9022%" y="207.50"></text></g><g><title>&lt;&amp;ray_tracing_3d::geometry::point::Point as core::ops::arith::Sub&gt;::sub (2 samples, 0.05%)</title><rect x="31.7928%" y="149" width="0.0486%" height="15" fill="rgb(244,68,36)" fg:x="1307" fg:w="2"/><text x="32.0428%" y="159.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::ops::range::RangeBounds&lt;T&gt;&gt;::end_bound (1 samples, 0.02%)</title><rect x="32.0603%" y="117" width="0.0243%" height="15" fill="rgb(232,229,15)" fg:x="1318" fg:w="1"/><text x="32.3103%" y="127.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::contains (18 samples, 0.44%)</title><rect x="31.8414%" y="149" width="0.4378%" height="15" fill="rgb(254,30,23)" fg:x="1309" fg:w="18"/><text x="32.0914%" y="159.50"></text></g><g><title>core::ops::range::RangeBounds::contains (18 samples, 0.44%)</title><rect x="31.8414%" y="133" width="0.4378%" height="15" fill="rgb(235,160,14)" fg:x="1309" fg:w="18"/><text x="32.0914%" y="143.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (8 samples, 0.19%)</title><rect x="32.0847%" y="117" width="0.1946%" height="15" fill="rgb(212,155,44)" fg:x="1319" fg:w="8"/><text x="32.3347%" y="127.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::le (3 samples, 0.07%)</title><rect x="32.2063%" y="101" width="0.0730%" height="15" fill="rgb(226,2,50)" fg:x="1324" fg:w="3"/><text x="32.4563%" y="111.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (320 samples, 7.78%)</title><rect x="24.9331%" y="261" width="7.7840%" height="15" fill="rgb(234,177,6)" fg:x="1025" fg:w="320"/><text x="25.1831%" y="271.50">&lt;core::iter..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (316 samples, 7.69%)</title><rect x="25.0304%" y="245" width="7.6867%" height="15" fill="rgb(217,24,9)" fg:x="1029" fg:w="316"/><text x="25.2804%" y="255.50">&lt;core::slic..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (114 samples, 2.77%)</title><rect x="29.9441%" y="229" width="2.7730%" height="15" fill="rgb(220,13,46)" fg:x="1231" fg:w="114"/><text x="30.1941%" y="239.50">co..</text></g><g><title>ray_tracing_3d::geometry::ray::Ray::first_point_hit_by_ray::_{{closure}} (92 samples, 2.24%)</title><rect x="30.4792%" y="213" width="2.2379%" height="15" fill="rgb(239,221,27)" fg:x="1253" fg:w="92"/><text x="30.7292%" y="223.50">r..</text></g><g><title>core::cmp::PartialEq::ne (43 samples, 1.05%)</title><rect x="31.6711%" y="197" width="1.0460%" height="15" fill="rgb(222,198,25)" fg:x="1302" fg:w="43"/><text x="31.9211%" y="207.50"></text></g><g><title>&lt;ray_tracing_3d::geometry::shape::Sphere as core::cmp::PartialEq&gt;::eq (43 samples, 1.05%)</title><rect x="31.6711%" y="181" width="1.0460%" height="15" fill="rgb(211,99,13)" fg:x="1302" fg:w="43"/><text x="31.9211%" y="191.50"></text></g><g><title>&lt;ray_tracing_3d::geometry::point::Point as core::cmp::PartialEq&gt;::eq (40 samples, 0.97%)</title><rect x="31.7441%" y="165" width="0.9730%" height="15" fill="rgb(232,111,31)" fg:x="1305" fg:w="40"/><text x="31.9941%" y="175.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::norme (18 samples, 0.44%)</title><rect x="32.2793%" y="149" width="0.4378%" height="15" fill="rgb(245,82,37)" fg:x="1327" fg:w="18"/><text x="32.5293%" y="159.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (12 samples, 0.29%)</title><rect x="32.4252%" y="133" width="0.2919%" height="15" fill="rgb(227,149,46)" fg:x="1333" fg:w="12"/><text x="32.6752%" y="143.50"></text></g><g><title>[libc.so.6] (43 samples, 1.05%)</title><rect x="33.6658%" y="245" width="1.0460%" height="15" fill="rgb(218,36,50)" fg:x="1384" fg:w="43"/><text x="33.9158%" y="255.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (98 samples, 2.38%)</title><rect x="32.7171%" y="261" width="2.3838%" height="15" fill="rgb(226,80,48)" fg:x="1345" fg:w="98"/><text x="32.9671%" y="271.50">&lt;c..</text></g><g><title>memcpy@plt (16 samples, 0.39%)</title><rect x="34.7117%" y="245" width="0.3892%" height="15" fill="rgb(238,224,15)" fg:x="1427" fg:w="16"/><text x="34.9617%" y="255.50"></text></g><g><title>[libc.so.6] (36 samples, 0.88%)</title><rect x="35.1009%" y="261" width="0.8757%" height="15" fill="rgb(241,136,10)" fg:x="1443" fg:w="36"/><text x="35.3509%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::filter (4 samples, 0.10%)</title><rect x="35.9766%" y="261" width="0.0973%" height="15" fill="rgb(208,32,45)" fg:x="1479" fg:w="4"/><text x="36.2266%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.02%)</title><rect x="36.3415%" y="229" width="0.0243%" height="15" fill="rgb(207,135,9)" fg:x="1494" fg:w="1"/><text x="36.5915%" y="239.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (13 samples, 0.32%)</title><rect x="36.0739%" y="261" width="0.3162%" height="15" fill="rgb(206,86,44)" fg:x="1483" fg:w="13"/><text x="36.3239%" y="271.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (6 samples, 0.15%)</title><rect x="36.2442%" y="245" width="0.1459%" height="15" fill="rgb(245,177,15)" fg:x="1490" fg:w="6"/><text x="36.4942%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_ptr (1 samples, 0.02%)</title><rect x="36.3658%" y="229" width="0.0243%" height="15" fill="rgb(206,64,50)" fg:x="1495" fg:w="1"/><text x="36.6158%" y="239.50"></text></g><g><title>memcpy@plt (9 samples, 0.22%)</title><rect x="36.3902%" y="261" width="0.2189%" height="15" fill="rgb(234,36,40)" fg:x="1496" fg:w="9"/><text x="36.6402%" y="271.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::x (1 samples, 0.02%)</title><rect x="41.0606%" y="229" width="0.0243%" height="15" fill="rgb(213,64,8)" fg:x="1688" fg:w="1"/><text x="41.3106%" y="239.50"></text></g><g><title>&lt;&amp;ray_tracing_3d::geometry::point::Point as core::ops::arith::Add&lt;&amp;ray_tracing_3d::geometry::vector::Vector&gt;&gt;::add (3 samples, 0.07%)</title><rect x="41.0362%" y="245" width="0.0730%" height="15" fill="rgb(210,75,36)" fg:x="1687" fg:w="3"/><text x="41.2862%" y="255.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::z (1 samples, 0.02%)</title><rect x="41.0849%" y="229" width="0.0243%" height="15" fill="rgb(229,88,21)" fg:x="1689" fg:w="1"/><text x="41.3349%" y="239.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (59 samples, 1.44%)</title><rect x="41.1092%" y="245" width="1.4352%" height="15" fill="rgb(252,204,47)" fg:x="1690" fg:w="59"/><text x="41.3592%" y="255.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&lt;&amp;f64&gt;&gt;::mul (44 samples, 1.07%)</title><rect x="42.5444%" y="245" width="1.0703%" height="15" fill="rgb(208,77,27)" fg:x="1749" fg:w="44"/><text x="42.7944%" y="255.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (17 samples, 0.41%)</title><rect x="43.2012%" y="229" width="0.4135%" height="15" fill="rgb(221,76,26)" fg:x="1776" fg:w="17"/><text x="43.4512%" y="239.50"></text></g><g><title>[libc.so.6] (135 samples, 3.28%)</title><rect x="43.6147%" y="245" width="3.2839%" height="15" fill="rgb(225,139,18)" fg:x="1793" fg:w="135"/><text x="43.8647%" y="255.50">[li..</text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::ops::range::RangeBounds&lt;T&gt;&gt;::end_bound (1 samples, 0.02%)</title><rect x="47.1175%" y="213" width="0.0243%" height="15" fill="rgb(230,137,11)" fg:x="1937" fg:w="1"/><text x="47.3675%" y="223.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::contains (15 samples, 0.36%)</title><rect x="46.8986%" y="245" width="0.3649%" height="15" fill="rgb(212,28,1)" fg:x="1928" fg:w="15"/><text x="47.1486%" y="255.50"></text></g><g><title>core::ops::range::RangeBounds::contains (15 samples, 0.36%)</title><rect x="46.8986%" y="229" width="0.3649%" height="15" fill="rgb(248,164,17)" fg:x="1928" fg:w="15"/><text x="47.1486%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (5 samples, 0.12%)</title><rect x="47.1418%" y="213" width="0.1216%" height="15" fill="rgb(222,171,42)" fg:x="1938" fg:w="5"/><text x="47.3918%" y="223.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::le (3 samples, 0.07%)</title><rect x="47.1905%" y="197" width="0.0730%" height="15" fill="rgb(243,84,45)" fg:x="1940" fg:w="3"/><text x="47.4405%" y="207.50"></text></g><g><title>memcpy@plt (9 samples, 0.22%)</title><rect x="47.2634%" y="245" width="0.2189%" height="15" fill="rgb(252,49,23)" fg:x="1943" fg:w="9"/><text x="47.5134%" y="255.50"></text></g><g><title>ray_tracing_3d::geometry::vector::UnitVector::new_from_points (2 samples, 0.05%)</title><rect x="47.4824%" y="245" width="0.0486%" height="15" fill="rgb(215,19,7)" fg:x="1952" fg:w="2"/><text x="47.7324%" y="255.50"></text></g><g><title>ray_tracing_3d::geometry::vector::UnitVector::new_from_coordinates (2 samples, 0.05%)</title><rect x="47.4824%" y="229" width="0.0486%" height="15" fill="rgb(238,81,41)" fg:x="1952" fg:w="2"/><text x="47.7324%" y="239.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::norme (2 samples, 0.05%)</title><rect x="47.4824%" y="213" width="0.0486%" height="15" fill="rgb(210,199,37)" fg:x="1952" fg:w="2"/><text x="47.7324%" y="223.50"></text></g><g><title>ray_tracing_3d::geometry::vector::UnitVector::to_vector (39 samples, 0.95%)</title><rect x="47.5310%" y="245" width="0.9487%" height="15" fill="rgb(244,192,49)" fg:x="1954" fg:w="39"/><text x="47.7810%" y="255.50"></text></g><g><title>&lt;&amp;ray_tracing_3d::geometry::point::Point as core::ops::arith::Sub&gt;::sub (48 samples, 1.17%)</title><rect x="49.7689%" y="229" width="1.1676%" height="15" fill="rgb(226,211,11)" fg:x="2046" fg:w="48"/><text x="50.0189%" y="239.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (38 samples, 0.92%)</title><rect x="54.1717%" y="213" width="0.9243%" height="15" fill="rgb(236,162,54)" fg:x="2227" fg:w="38"/><text x="54.4217%" y="223.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::normalize (258 samples, 6.28%)</title><rect x="55.0961%" y="213" width="6.2758%" height="15" fill="rgb(220,229,9)" fg:x="2265" fg:w="258"/><text x="55.3461%" y="223.50">ray_trac..</text></g><g><title>ray_tracing_3d::geometry::vector::Vector::new_from_points (719 samples, 17.49%)</title><rect x="48.4797%" y="245" width="17.4897%" height="15" fill="rgb(250,87,22)" fg:x="1993" fg:w="719"/><text x="48.7297%" y="255.50">ray_tracing_3d::geometry::v..</text></g><g><title>ray_tracing_3d::geometry::vector::Vector::new_from_coordinates (618 samples, 15.03%)</title><rect x="50.9365%" y="229" width="15.0328%" height="15" fill="rgb(239,43,17)" fg:x="2094" fg:w="618"/><text x="51.1865%" y="239.50">ray_tracing_3d::geometr..</text></g><g><title>ray_tracing_3d::geometry::vector::Vector::norme (189 samples, 4.60%)</title><rect x="61.3719%" y="213" width="4.5974%" height="15" fill="rgb(231,177,25)" fg:x="2523" fg:w="189"/><text x="61.6219%" y="223.50">ray_t..</text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (162 samples, 3.94%)</title><rect x="62.0287%" y="197" width="3.9406%" height="15" fill="rgb(219,179,1)" fg:x="2550" fg:w="162"/><text x="62.2787%" y="207.50">std:..</text></g><g><title>ray_tracing_3d::geometry::vector::Vector::scalar_product (169 samples, 4.11%)</title><rect x="65.9694%" y="245" width="4.1109%" height="15" fill="rgb(238,219,53)" fg:x="2712" fg:w="169"/><text x="66.2194%" y="255.50">ray_..</text></g><g><title>ray_tracing_3d::geometry::vector::UnitVector::scalar_product (92 samples, 2.24%)</title><rect x="67.8424%" y="229" width="2.2379%" height="15" fill="rgb(232,167,36)" fg:x="2789" fg:w="92"/><text x="68.0924%" y="239.50">r..</text></g><g><title>std::f64::&lt;impl f64&gt;::powi (54 samples, 1.31%)</title><rect x="70.0803%" y="245" width="1.3135%" height="15" fill="rgb(244,19,51)" fg:x="2881" fg:w="54"/><text x="70.3303%" y="255.50"></text></g><g><title>__powidf2 (44 samples, 1.07%)</title><rect x="70.3235%" y="229" width="1.0703%" height="15" fill="rgb(224,6,22)" fg:x="2891" fg:w="44"/><text x="70.5735%" y="239.50"></text></g><g><title>compiler_builtins::float::pow::__powidf2 (1 samples, 0.02%)</title><rect x="71.3695%" y="213" width="0.0243%" height="15" fill="rgb(224,145,5)" fg:x="2934" fg:w="1"/><text x="71.6195%" y="223.50"></text></g><g><title>compiler_builtins::float::pow::pow (1 samples, 0.02%)</title><rect x="71.3695%" y="197" width="0.0243%" height="15" fill="rgb(234,130,49)" fg:x="2934" fg:w="1"/><text x="71.6195%" y="207.50"></text></g><g><title>ray_tracing_3d::geometry::ray::Ray::intersect (1,431 samples, 34.81%)</title><rect x="36.6091%" y="261" width="34.8090%" height="15" fill="rgb(254,6,2)" fg:x="1505" fg:w="1431"/><text x="36.8591%" y="271.50">ray_tracing_3d::geometry::ray::Ray::intersect</text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (1 samples, 0.02%)</title><rect x="71.3938%" y="245" width="0.0243%" height="15" fill="rgb(208,96,46)" fg:x="2935" fg:w="1"/><text x="71.6438%" y="255.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::normalize (37 samples, 0.90%)</title><rect x="71.5398%" y="245" width="0.9000%" height="15" fill="rgb(239,3,39)" fg:x="2941" fg:w="37"/><text x="71.7898%" y="255.50"></text></g><g><title>ray_tracing_3d::geometry::ray::Ray::first_point_hit_by_ray (2,071 samples, 50.38%)</title><rect x="22.5249%" y="277" width="50.3770%" height="15" fill="rgb(233,210,1)" fg:x="926" fg:w="2071"/><text x="22.7749%" y="287.50">ray_tracing_3d::geometry::ray::Ray::first_point_hit_by_ray</text></g><g><title>ray_tracing_3d::geometry::vector::UnitVector::new_from_coordinates (61 samples, 1.48%)</title><rect x="71.4181%" y="261" width="1.4838%" height="15" fill="rgb(244,137,37)" fg:x="2936" fg:w="61"/><text x="71.6681%" y="271.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::norme (19 samples, 0.46%)</title><rect x="72.4398%" y="245" width="0.4622%" height="15" fill="rgb(240,136,2)" fg:x="2978" fg:w="19"/><text x="72.6898%" y="255.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (14 samples, 0.34%)</title><rect x="72.5614%" y="229" width="0.3405%" height="15" fill="rgb(239,18,37)" fg:x="2983" fg:w="14"/><text x="72.8114%" y="239.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::ops::range::RangeBounds&lt;T&gt;&gt;::end_bound (2 samples, 0.05%)</title><rect x="73.1939%" y="229" width="0.0486%" height="15" fill="rgb(218,185,22)" fg:x="3009" fg:w="2"/><text x="73.4439%" y="239.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::ops::range::RangeBounds&lt;T&gt;&gt;::start_bound (2 samples, 0.05%)</title><rect x="73.2425%" y="229" width="0.0486%" height="15" fill="rgb(225,218,4)" fg:x="3011" fg:w="2"/><text x="73.4925%" y="239.50"></text></g><g><title>ray_tracing_3d::optic::color::Color::new_from_color (30 samples, 0.73%)</title><rect x="72.9020%" y="277" width="0.7297%" height="15" fill="rgb(230,182,32)" fg:x="2997" fg:w="30"/><text x="73.1520%" y="287.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::contains (27 samples, 0.66%)</title><rect x="72.9749%" y="261" width="0.6568%" height="15" fill="rgb(242,56,43)" fg:x="3000" fg:w="27"/><text x="73.2249%" y="271.50"></text></g><g><title>core::ops::range::RangeBounds::contains (26 samples, 0.63%)</title><rect x="72.9993%" y="245" width="0.6324%" height="15" fill="rgb(233,99,24)" fg:x="3001" fg:w="26"/><text x="73.2493%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (14 samples, 0.34%)</title><rect x="73.2912%" y="229" width="0.3405%" height="15" fill="rgb(234,209,42)" fg:x="3013" fg:w="14"/><text x="73.5412%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (8 samples, 0.19%)</title><rect x="73.4371%" y="213" width="0.1946%" height="15" fill="rgb(227,7,12)" fg:x="3019" fg:w="8"/><text x="73.6871%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.02%)</title><rect x="75.5291%" y="245" width="0.0243%" height="15" fill="rgb(245,203,43)" fg:x="3105" fg:w="1"/><text x="75.7791%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::allocator (1 samples, 0.02%)</title><rect x="75.5534%" y="245" width="0.0243%" height="15" fill="rgb(238,205,33)" fg:x="3106" fg:w="1"/><text x="75.8034%" y="255.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="75.5777%" y="245" width="0.0243%" height="15" fill="rgb(231,56,7)" fg:x="3107" fg:w="1"/><text x="75.8277%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (8 samples, 0.19%)</title><rect x="75.4318%" y="261" width="0.1946%" height="15" fill="rgb(244,186,29)" fg:x="3101" fg:w="8"/><text x="75.6818%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="75.6020%" y="245" width="0.0243%" height="15" fill="rgb(234,111,31)" fg:x="3108" fg:w="1"/><text x="75.8520%" y="255.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.07%)</title><rect x="76.0156%" y="245" width="0.0730%" height="15" fill="rgb(241,149,10)" fg:x="3125" fg:w="3"/><text x="76.2656%" y="255.50"></text></g><g><title>core::mem::zeroed (1 samples, 0.02%)</title><rect x="76.0885%" y="245" width="0.0243%" height="15" fill="rgb(249,206,44)" fg:x="3128" fg:w="1"/><text x="76.3385%" y="255.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::zeroed (1 samples, 0.02%)</title><rect x="76.0885%" y="229" width="0.0243%" height="15" fill="rgb(251,153,30)" fg:x="3128" fg:w="1"/><text x="76.3385%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (1 samples, 0.02%)</title><rect x="76.0885%" y="213" width="0.0243%" height="15" fill="rgb(239,152,38)" fg:x="3128" fg:w="1"/><text x="76.3385%" y="223.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::wrapping_byte_sub (2 samples, 0.05%)</title><rect x="76.1129%" y="245" width="0.0486%" height="15" fill="rgb(249,139,47)" fg:x="3129" fg:w="2"/><text x="76.3629%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::wrapping_sub (2 samples, 0.05%)</title><rect x="76.1129%" y="229" width="0.0486%" height="15" fill="rgb(244,64,35)" fg:x="3129" fg:w="2"/><text x="76.3629%" y="239.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (1 samples, 0.02%)</title><rect x="76.1372%" y="213" width="0.0243%" height="15" fill="rgb(216,46,15)" fg:x="3130" fg:w="1"/><text x="76.3872%" y="223.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_sub (1 samples, 0.02%)</title><rect x="76.1372%" y="197" width="0.0243%" height="15" fill="rgb(250,74,19)" fg:x="3130" fg:w="1"/><text x="76.3872%" y="207.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.56%)</title><rect x="75.6264%" y="261" width="0.5595%" height="15" fill="rgb(249,42,33)" fg:x="3109" fg:w="23"/><text x="75.8764%" y="271.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="76.1615%" y="245" width="0.0243%" height="15" fill="rgb(242,149,17)" fg:x="3131" fg:w="1"/><text x="76.4115%" y="255.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="76.1858%" y="261" width="0.0243%" height="15" fill="rgb(244,29,21)" fg:x="3132" fg:w="1"/><text x="76.4358%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.02%)</title><rect x="76.3804%" y="245" width="0.0243%" height="15" fill="rgb(220,130,37)" fg:x="3140" fg:w="1"/><text x="76.6304%" y="255.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.02%)</title><rect x="76.5507%" y="213" width="0.0243%" height="15" fill="rgb(211,67,2)" fg:x="3147" fg:w="1"/><text x="76.8007%" y="223.50"></text></g><g><title>&lt;alloc::collections::TryReserveError as core::convert::From&lt;alloc::collections::TryReserveErrorKind&gt;&gt;::from (1 samples, 0.02%)</title><rect x="76.5507%" y="197" width="0.0243%" height="15" fill="rgb(235,68,52)" fg:x="3147" fg:w="1"/><text x="76.8007%" y="207.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.07%)</title><rect x="76.5750%" y="213" width="0.0730%" height="15" fill="rgb(246,142,3)" fg:x="3148" fg:w="3"/><text x="76.8250%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="76.6480%" y="213" width="0.0243%" height="15" fill="rgb(241,25,7)" fg:x="3151" fg:w="1"/><text x="76.8980%" y="223.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="77.1588%" y="165" width="0.0243%" height="15" fill="rgb(242,119,39)" fg:x="3172" fg:w="1"/><text x="77.4088%" y="175.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="77.2075%" y="149" width="0.0243%" height="15" fill="rgb(241,98,45)" fg:x="3174" fg:w="1"/><text x="77.4575%" y="159.50"></text></g><g><title>core::alloc::layout::Layout::align (1 samples, 0.02%)</title><rect x="77.2318%" y="149" width="0.0243%" height="15" fill="rgb(254,28,30)" fg:x="3175" fg:w="1"/><text x="77.4818%" y="159.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.22%)</title><rect x="77.1832%" y="165" width="0.2189%" height="15" fill="rgb(241,142,54)" fg:x="3173" fg:w="9"/><text x="77.4332%" y="175.50"></text></g><g><title>malloc (6 samples, 0.15%)</title><rect x="77.2561%" y="149" width="0.1459%" height="15" fill="rgb(222,85,15)" fg:x="3176" fg:w="6"/><text x="77.5061%" y="159.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (3 samples, 0.07%)</title><rect x="77.4021%" y="165" width="0.0730%" height="15" fill="rgb(210,85,47)" fg:x="3182" fg:w="3"/><text x="77.6521%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (24 samples, 0.58%)</title><rect x="76.9886%" y="197" width="0.5838%" height="15" fill="rgb(224,206,25)" fg:x="3165" fg:w="24"/><text x="77.2386%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (23 samples, 0.56%)</title><rect x="77.0129%" y="181" width="0.5595%" height="15" fill="rgb(243,201,19)" fg:x="3166" fg:w="23"/><text x="77.2629%" y="191.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (4 samples, 0.10%)</title><rect x="77.4751%" y="165" width="0.0973%" height="15" fill="rgb(236,59,4)" fg:x="3185" fg:w="4"/><text x="77.7251%" y="175.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="77.7426%" y="165" width="0.0243%" height="15" fill="rgb(254,179,45)" fg:x="3196" fg:w="1"/><text x="77.9926%" y="175.50"></text></g><g><title>&lt;core::result::Result&lt;T,F&gt; as core::ops::try_trait::FromResidual&lt;core::result::Result&lt;core::convert::Infallible,E&gt;&gt;&gt;::from_residual (2 samples, 0.05%)</title><rect x="77.7670%" y="165" width="0.0486%" height="15" fill="rgb(226,14,10)" fg:x="3197" fg:w="2"/><text x="78.0170%" y="175.50"></text></g><g><title>&lt;T as core::convert::From&lt;T&gt;&gt;::from (2 samples, 0.05%)</title><rect x="77.7670%" y="149" width="0.0486%" height="15" fill="rgb(244,27,41)" fg:x="3197" fg:w="2"/><text x="78.0170%" y="159.50"></text></g><g><title>core::alloc::layout::Layout::align (1 samples, 0.02%)</title><rect x="77.8156%" y="149" width="0.0243%" height="15" fill="rgb(235,35,32)" fg:x="3199" fg:w="1"/><text x="78.0656%" y="159.50"></text></g><g><title>core::ptr::alignment::Alignment::as_usize (1 samples, 0.02%)</title><rect x="77.8156%" y="133" width="0.0243%" height="15" fill="rgb(218,68,31)" fg:x="3199" fg:w="1"/><text x="78.0656%" y="143.50"></text></g><g><title>alloc::alloc::realloc (35 samples, 0.85%)</title><rect x="77.8156%" y="165" width="0.8514%" height="15" fill="rgb(207,120,37)" fg:x="3199" fg:w="35"/><text x="78.0656%" y="175.50"></text></g><g><title>realloc (34 samples, 0.83%)</title><rect x="77.8399%" y="149" width="0.8270%" height="15" fill="rgb(227,98,0)" fg:x="3200" fg:w="34"/><text x="78.0899%" y="159.50"></text></g><g><title>[libc.so.6] (28 samples, 0.68%)</title><rect x="77.9859%" y="133" width="0.6811%" height="15" fill="rgb(207,7,3)" fg:x="3206" fg:w="28"/><text x="78.2359%" y="143.50"></text></g><g><title>[libc.so.6] (23 samples, 0.56%)</title><rect x="78.1075%" y="117" width="0.5595%" height="15" fill="rgb(206,98,19)" fg:x="3211" fg:w="23"/><text x="78.3575%" y="127.50"></text></g><g><title>[libc.so.6] (4 samples, 0.10%)</title><rect x="78.5697%" y="101" width="0.0973%" height="15" fill="rgb(217,5,26)" fg:x="3230" fg:w="4"/><text x="78.8197%" y="111.50"></text></g><g><title>core::alloc::layout::Layout::size (2 samples, 0.05%)</title><rect x="78.6670%" y="165" width="0.0486%" height="15" fill="rgb(235,190,38)" fg:x="3234" fg:w="2"/><text x="78.9170%" y="175.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (2 samples, 0.05%)</title><rect x="78.7156%" y="165" width="0.0486%" height="15" fill="rgb(247,86,24)" fg:x="3236" fg:w="2"/><text x="78.9656%" y="175.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.05%)</title><rect x="78.7643%" y="165" width="0.0486%" height="15" fill="rgb(205,101,16)" fg:x="3238" fg:w="2"/><text x="79.0143%" y="175.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="78.8129%" y="165" width="0.0243%" height="15" fill="rgb(246,168,33)" fg:x="3240" fg:w="1"/><text x="79.0629%" y="175.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="78.8129%" y="149" width="0.0243%" height="15" fill="rgb(231,114,1)" fg:x="3240" fg:w="1"/><text x="79.0629%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (56 samples, 1.36%)</title><rect x="77.5724%" y="197" width="1.3622%" height="15" fill="rgb(207,184,53)" fg:x="3189" fg:w="56"/><text x="77.8224%" y="207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (56 samples, 1.36%)</title><rect x="77.5724%" y="181" width="1.3622%" height="15" fill="rgb(224,95,51)" fg:x="3189" fg:w="56"/><text x="77.8224%" y="191.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (4 samples, 0.10%)</title><rect x="78.8373%" y="165" width="0.0973%" height="15" fill="rgb(212,188,45)" fg:x="3241" fg:w="4"/><text x="79.0873%" y="175.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (4 samples, 0.10%)</title><rect x="78.8373%" y="149" width="0.0973%" height="15" fill="rgb(223,154,38)" fg:x="3241" fg:w="4"/><text x="79.0873%" y="159.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (4 samples, 0.10%)</title><rect x="78.8373%" y="133" width="0.0973%" height="15" fill="rgb(251,22,52)" fg:x="3241" fg:w="4"/><text x="79.0873%" y="143.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.12%)</title><rect x="78.9346%" y="197" width="0.1216%" height="15" fill="rgb(229,209,22)" fg:x="3245" fg:w="5"/><text x="79.1846%" y="207.50"></text></g><g><title>alloc::raw_vec::alloc_guard (1 samples, 0.02%)</title><rect x="79.0562%" y="197" width="0.0243%" height="15" fill="rgb(234,138,34)" fg:x="3250" fg:w="1"/><text x="79.3062%" y="207.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.02%)</title><rect x="79.0562%" y="181" width="0.0243%" height="15" fill="rgb(212,95,11)" fg:x="3250" fg:w="1"/><text x="79.3062%" y="191.50"></text></g><g><title>core::alloc::layout::Layout::align (1 samples, 0.02%)</title><rect x="79.0805%" y="197" width="0.0243%" height="15" fill="rgb(240,179,47)" fg:x="3251" fg:w="1"/><text x="79.3305%" y="207.50"></text></g><g><title>core::ptr::alignment::Alignment::as_usize (1 samples, 0.02%)</title><rect x="79.0805%" y="181" width="0.0243%" height="15" fill="rgb(240,163,11)" fg:x="3251" fg:w="1"/><text x="79.3305%" y="191.50"></text></g><g><title>core::alloc::layout::Layout::size (1 samples, 0.02%)</title><rect x="79.1048%" y="197" width="0.0243%" height="15" fill="rgb(236,37,12)" fg:x="3252" fg:w="1"/><text x="79.3548%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (114 samples, 2.77%)</title><rect x="76.6723%" y="213" width="2.7730%" height="15" fill="rgb(232,164,16)" fg:x="3152" fg:w="114"/><text x="76.9223%" y="223.50">al..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (13 samples, 0.32%)</title><rect x="79.1292%" y="197" width="0.3162%" height="15" fill="rgb(244,205,15)" fg:x="3253" fg:w="13"/><text x="79.3792%" y="207.50"></text></g><g><title>core::alloc::layout::Layout::array (18 samples, 0.44%)</title><rect x="79.4454%" y="213" width="0.4378%" height="15" fill="rgb(223,117,47)" fg:x="3266" fg:w="18"/><text x="79.6954%" y="223.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (17 samples, 0.41%)</title><rect x="79.4697%" y="197" width="0.4135%" height="15" fill="rgb(244,107,35)" fg:x="3267" fg:w="17"/><text x="79.7197%" y="207.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.02%)</title><rect x="79.8589%" y="181" width="0.0243%" height="15" fill="rgb(205,140,8)" fg:x="3283" fg:w="1"/><text x="80.1089%" y="191.50"></text></g><g><title>core::cmp::max (23 samples, 0.56%)</title><rect x="79.8832%" y="213" width="0.5595%" height="15" fill="rgb(228,84,46)" fg:x="3284" fg:w="23"/><text x="80.1332%" y="223.50"></text></g><g><title>core::cmp::Ord::max (22 samples, 0.54%)</title><rect x="79.9076%" y="197" width="0.5351%" height="15" fill="rgb(254,188,9)" fg:x="3285" fg:w="22"/><text x="80.1576%" y="207.50"></text></g><g><title>core::cmp::max_by (20 samples, 0.49%)</title><rect x="79.9562%" y="181" width="0.4865%" height="15" fill="rgb(206,112,54)" fg:x="3287" fg:w="20"/><text x="80.2062%" y="191.50"></text></g><g><title>core::ops::function::FnOnce::call_once (9 samples, 0.22%)</title><rect x="80.2238%" y="165" width="0.2189%" height="15" fill="rgb(216,84,49)" fg:x="3298" fg:w="9"/><text x="80.4738%" y="175.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (9 samples, 0.22%)</title><rect x="80.2238%" y="149" width="0.2189%" height="15" fill="rgb(214,194,35)" fg:x="3298" fg:w="9"/><text x="80.4738%" y="159.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (3 samples, 0.07%)</title><rect x="80.4427%" y="213" width="0.0730%" height="15" fill="rgb(249,28,3)" fg:x="3307" fg:w="3"/><text x="80.6927%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (172 samples, 4.18%)</title><rect x="76.4048%" y="229" width="4.1839%" height="15" fill="rgb(222,56,52)" fg:x="3141" fg:w="172"/><text x="76.6548%" y="239.50">alloc..</text></g><g><title>core::option::Option&lt;T&gt;::ok_or (3 samples, 0.07%)</title><rect x="80.5157%" y="213" width="0.0730%" height="15" fill="rgb(245,217,50)" fg:x="3310" fg:w="3"/><text x="80.7657%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (175 samples, 4.26%)</title><rect x="76.4048%" y="245" width="4.2569%" height="15" fill="rgb(213,201,24)" fg:x="3141" fg:w="175"/><text x="76.6548%" y="255.50">alloc..</text></g><g><title>alloc::raw_vec::handle_reserve (3 samples, 0.07%)</title><rect x="80.5887%" y="229" width="0.0730%" height="15" fill="rgb(248,116,28)" fg:x="3313" fg:w="3"/><text x="80.8387%" y="239.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (3 samples, 0.07%)</title><rect x="80.5887%" y="213" width="0.0730%" height="15" fill="rgb(219,72,43)" fg:x="3313" fg:w="3"/><text x="80.8387%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.02%)</title><rect x="80.6616%" y="245" width="0.0243%" height="15" fill="rgb(209,138,14)" fg:x="3316" fg:w="1"/><text x="80.9116%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.02%)</title><rect x="80.6616%" y="229" width="0.0243%" height="15" fill="rgb(222,18,33)" fg:x="3316" fg:w="1"/><text x="80.9116%" y="239.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="80.6616%" y="213" width="0.0243%" height="15" fill="rgb(213,199,7)" fg:x="3316" fg:w="1"/><text x="80.9116%" y="223.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="80.6616%" y="197" width="0.0243%" height="15" fill="rgb(250,110,10)" fg:x="3316" fg:w="1"/><text x="80.9116%" y="207.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.05%)</title><rect x="80.6860%" y="245" width="0.0486%" height="15" fill="rgb(248,123,6)" fg:x="3317" fg:w="2"/><text x="80.9360%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (193 samples, 4.69%)</title><rect x="76.2102%" y="261" width="4.6947%" height="15" fill="rgb(206,91,31)" fg:x="3133" fg:w="193"/><text x="76.4602%" y="271.50">alloc..</text></g><g><title>core::ptr::write (7 samples, 0.17%)</title><rect x="80.7346%" y="245" width="0.1703%" height="15" fill="rgb(211,154,13)" fg:x="3319" fg:w="7"/><text x="80.9846%" y="255.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (7 samples, 0.17%)</title><rect x="81.0752%" y="181" width="0.1703%" height="15" fill="rgb(225,148,7)" fg:x="3333" fg:w="7"/><text x="81.3252%" y="191.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (4 samples, 0.10%)</title><rect x="81.1481%" y="165" width="0.0973%" height="15" fill="rgb(220,160,43)" fg:x="3336" fg:w="4"/><text x="81.3981%" y="175.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (4 samples, 0.10%)</title><rect x="81.1481%" y="149" width="0.0973%" height="15" fill="rgb(213,52,39)" fg:x="3336" fg:w="4"/><text x="81.3981%" y="159.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (11 samples, 0.27%)</title><rect x="81.0022%" y="213" width="0.2676%" height="15" fill="rgb(243,137,7)" fg:x="3330" fg:w="11"/><text x="81.2522%" y="223.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (10 samples, 0.24%)</title><rect x="81.0265%" y="197" width="0.2432%" height="15" fill="rgb(230,79,13)" fg:x="3331" fg:w="10"/><text x="81.2765%" y="207.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="81.2454%" y="181" width="0.0243%" height="15" fill="rgb(247,105,23)" fg:x="3340" fg:w="1"/><text x="81.4954%" y="191.50"></text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="81.2454%" y="165" width="0.0243%" height="15" fill="rgb(223,179,41)" fg:x="3340" fg:w="1"/><text x="81.4954%" y="175.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (16 samples, 0.39%)</title><rect x="80.9049%" y="229" width="0.3892%" height="15" fill="rgb(218,9,34)" fg:x="3326" fg:w="16"/><text x="81.1549%" y="239.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.02%)</title><rect x="81.2698%" y="213" width="0.0243%" height="15" fill="rgb(222,106,8)" fg:x="3341" fg:w="1"/><text x="81.5198%" y="223.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="81.2698%" y="197" width="0.0243%" height="15" fill="rgb(211,220,0)" fg:x="3341" fg:w="1"/><text x="81.5198%" y="207.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::take (1 samples, 0.02%)</title><rect x="81.2941%" y="197" width="0.0243%" height="15" fill="rgb(229,52,16)" fg:x="3342" fg:w="1"/><text x="81.5441%" y="207.50"></text></g><g><title>cfree (3 samples, 0.07%)</title><rect x="81.4157%" y="133" width="0.0730%" height="15" fill="rgb(212,155,18)" fg:x="3347" fg:w="3"/><text x="81.6657%" y="143.50"></text></g><g><title>[libc.so.6] (2 samples, 0.05%)</title><rect x="81.4400%" y="117" width="0.0486%" height="15" fill="rgb(242,21,14)" fg:x="3348" fg:w="2"/><text x="81.6900%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.15%)</title><rect x="81.3671%" y="165" width="0.1459%" height="15" fill="rgb(222,19,48)" fg:x="3345" fg:w="6"/><text x="81.6171%" y="175.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.10%)</title><rect x="81.4157%" y="149" width="0.0973%" height="15" fill="rgb(232,45,27)" fg:x="3347" fg:w="4"/><text x="81.6657%" y="159.50"></text></g><g><title>core::alloc::layout::Layout::align (1 samples, 0.02%)</title><rect x="81.4887%" y="133" width="0.0243%" height="15" fill="rgb(249,103,42)" fg:x="3350" fg:w="1"/><text x="81.7387%" y="143.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.02%)</title><rect x="81.5617%" y="149" width="0.0243%" height="15" fill="rgb(246,81,33)" fg:x="3353" fg:w="1"/><text x="81.8117%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;ray_tracing_3d::geometry::point::Point&gt;&gt; (29 samples, 0.71%)</title><rect x="80.9049%" y="261" width="0.7054%" height="15" fill="rgb(252,33,42)" fg:x="3326" fg:w="29"/><text x="81.1549%" y="271.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.71%)</title><rect x="80.9049%" y="245" width="0.7054%" height="15" fill="rgb(209,212,41)" fg:x="3326" fg:w="29"/><text x="81.1549%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;ray_tracing_3d::geometry::point::Point,alloc::alloc::Global&gt;&gt; (13 samples, 0.32%)</title><rect x="81.2941%" y="229" width="0.3162%" height="15" fill="rgb(207,154,6)" fg:x="3342" fg:w="13"/><text x="81.5441%" y="239.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.32%)</title><rect x="81.2941%" y="213" width="0.3162%" height="15" fill="rgb(223,64,47)" fg:x="3342" fg:w="13"/><text x="81.5441%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;ray_tracing_3d::geometry::point::Point&gt;&gt; (12 samples, 0.29%)</title><rect x="81.3184%" y="197" width="0.2919%" height="15" fill="rgb(211,161,38)" fg:x="3343" fg:w="12"/><text x="81.5684%" y="207.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.29%)</title><rect x="81.3184%" y="181" width="0.2919%" height="15" fill="rgb(219,138,40)" fg:x="3343" fg:w="12"/><text x="81.5684%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (4 samples, 0.10%)</title><rect x="81.5130%" y="165" width="0.0973%" height="15" fill="rgb(241,228,46)" fg:x="3351" fg:w="4"/><text x="81.7630%" y="175.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::cast (1 samples, 0.02%)</title><rect x="81.5860%" y="149" width="0.0243%" height="15" fill="rgb(223,209,38)" fg:x="3354" fg:w="1"/><text x="81.8360%" y="159.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::cast (1 samples, 0.02%)</title><rect x="81.5860%" y="133" width="0.0243%" height="15" fill="rgb(236,164,45)" fg:x="3354" fg:w="1"/><text x="81.8360%" y="143.50"></text></g><g><title>&lt;&amp;ray_tracing_3d::geometry::point::Point as core::ops::arith::Sub&gt;::sub (4 samples, 0.10%)</title><rect x="81.8536%" y="245" width="0.0973%" height="15" fill="rgb(231,15,5)" fg:x="3365" fg:w="4"/><text x="82.1036%" y="255.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::normalize (29 samples, 0.71%)</title><rect x="82.0968%" y="229" width="0.7054%" height="15" fill="rgb(252,35,15)" fg:x="3375" fg:w="29"/><text x="82.3468%" y="239.50"></text></g><g><title>ray_tracing_3d::geometry::vector::UnitVector::new_from_points (84 samples, 2.04%)</title><rect x="81.6103%" y="261" width="2.0433%" height="15" fill="rgb(248,181,18)" fg:x="3355" fg:w="84"/><text x="81.8603%" y="271.50">r..</text></g><g><title>ray_tracing_3d::geometry::vector::UnitVector::new_from_coordinates (70 samples, 1.70%)</title><rect x="81.9509%" y="245" width="1.7027%" height="15" fill="rgb(233,39,42)" fg:x="3369" fg:w="70"/><text x="82.2009%" y="255.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::norme (35 samples, 0.85%)</title><rect x="82.8022%" y="229" width="0.8514%" height="15" fill="rgb(238,110,33)" fg:x="3404" fg:w="35"/><text x="83.0522%" y="239.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (24 samples, 0.58%)</title><rect x="83.0698%" y="213" width="0.5838%" height="15" fill="rgb(233,195,10)" fg:x="3415" fg:w="24"/><text x="83.3198%" y="223.50"></text></g><g><title>&lt;ray_tracing_3d::geometry::point::Point as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="84.1644%" y="197" width="0.0243%" height="15" fill="rgb(254,105,3)" fg:x="3460" fg:w="1"/><text x="84.4144%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.05%)</title><rect x="84.1888%" y="197" width="0.0486%" height="15" fill="rgb(221,225,9)" fg:x="3461" fg:w="2"/><text x="84.4388%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.05%)</title><rect x="84.1888%" y="181" width="0.0486%" height="15" fill="rgb(224,227,45)" fg:x="3461" fg:w="2"/><text x="84.4388%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (2 samples, 0.05%)</title><rect x="84.1888%" y="165" width="0.0486%" height="15" fill="rgb(229,198,43)" fg:x="3461" fg:w="2"/><text x="84.4388%" y="175.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.02%)</title><rect x="84.2131%" y="149" width="0.0243%" height="15" fill="rgb(206,209,35)" fg:x="3462" fg:w="1"/><text x="84.4631%" y="159.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (13 samples, 0.32%)</title><rect x="84.2374%" y="197" width="0.3162%" height="15" fill="rgb(245,195,53)" fg:x="3463" fg:w="13"/><text x="84.4874%" y="207.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (13 samples, 0.32%)</title><rect x="84.2374%" y="181" width="0.3162%" height="15" fill="rgb(240,92,26)" fg:x="3463" fg:w="13"/><text x="84.4874%" y="191.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (4 samples, 0.10%)</title><rect x="84.4563%" y="165" width="0.0973%" height="15" fill="rgb(207,40,23)" fg:x="3472" fg:w="4"/><text x="84.7063%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (27 samples, 0.66%)</title><rect x="84.0185%" y="213" width="0.6568%" height="15" fill="rgb(223,111,35)" fg:x="3454" fg:w="27"/><text x="84.2685%" y="223.50"></text></g><g><title>core::ptr::write (5 samples, 0.12%)</title><rect x="84.5536%" y="197" width="0.1216%" height="15" fill="rgb(229,147,28)" fg:x="3476" fg:w="5"/><text x="84.8036%" y="207.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="84.8942%" y="117" width="0.0243%" height="15" fill="rgb(211,29,28)" fg:x="3490" fg:w="1"/><text x="85.1442%" y="127.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.02%)</title><rect x="84.8942%" y="101" width="0.0243%" height="15" fill="rgb(228,72,33)" fg:x="3490" fg:w="1"/><text x="85.1442%" y="111.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.15%)</title><rect x="84.8942%" y="133" width="0.1459%" height="15" fill="rgb(205,214,31)" fg:x="3490" fg:w="6"/><text x="85.1442%" y="143.50"></text></g><g><title>malloc (5 samples, 0.12%)</title><rect x="84.9185%" y="117" width="0.1216%" height="15" fill="rgb(224,111,15)" fg:x="3491" fg:w="5"/><text x="85.1685%" y="127.50"></text></g><g><title>core::alloc::layout::Layout::size (2 samples, 0.05%)</title><rect x="85.0401%" y="133" width="0.0486%" height="15" fill="rgb(253,21,26)" fg:x="3496" fg:w="2"/><text x="85.2901%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.32%)</title><rect x="84.7969%" y="165" width="0.3162%" height="15" fill="rgb(245,139,43)" fg:x="3486" fg:w="13"/><text x="85.0469%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.32%)</title><rect x="84.7969%" y="149" width="0.3162%" height="15" fill="rgb(252,170,7)" fg:x="3486" fg:w="13"/><text x="85.0469%" y="159.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (1 samples, 0.02%)</title><rect x="85.0888%" y="133" width="0.0243%" height="15" fill="rgb(231,118,14)" fg:x="3498" fg:w="1"/><text x="85.3388%" y="143.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.02%)</title><rect x="85.0888%" y="117" width="0.0243%" height="15" fill="rgb(238,83,0)" fg:x="3498" fg:w="1"/><text x="85.3388%" y="127.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="85.0888%" y="101" width="0.0243%" height="15" fill="rgb(221,39,39)" fg:x="3498" fg:w="1"/><text x="85.3388%" y="111.50"></text></g><g><title>alloc::raw_vec::alloc_guard (1 samples, 0.02%)</title><rect x="85.1131%" y="165" width="0.0243%" height="15" fill="rgb(222,119,46)" fg:x="3499" fg:w="1"/><text x="85.3631%" y="175.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.02%)</title><rect x="85.1131%" y="149" width="0.0243%" height="15" fill="rgb(222,165,49)" fg:x="3499" fg:w="1"/><text x="85.3631%" y="159.50"></text></g><g><title>&lt;alloc::collections::TryReserveError as core::convert::From&lt;alloc::collections::TryReserveErrorKind&gt;&gt;::from (1 samples, 0.02%)</title><rect x="85.1131%" y="133" width="0.0243%" height="15" fill="rgb(219,113,52)" fg:x="3499" fg:w="1"/><text x="85.3631%" y="143.50"></text></g><g><title>core::alloc::layout::Layout::array (14 samples, 0.34%)</title><rect x="85.1374%" y="165" width="0.3405%" height="15" fill="rgb(214,7,15)" fg:x="3500" fg:w="14"/><text x="85.3874%" y="175.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (14 samples, 0.34%)</title><rect x="85.1374%" y="149" width="0.3405%" height="15" fill="rgb(235,32,4)" fg:x="3500" fg:w="14"/><text x="85.3874%" y="159.50"></text></g><g><title>core::alloc::layout::Layout::max_size_for_align (3 samples, 0.07%)</title><rect x="85.4050%" y="133" width="0.0730%" height="15" fill="rgb(238,90,54)" fg:x="3511" fg:w="3"/><text x="85.6550%" y="143.50"></text></g><g><title>core::ptr::alignment::Alignment::as_usize (1 samples, 0.02%)</title><rect x="85.4537%" y="117" width="0.0243%" height="15" fill="rgb(213,208,19)" fg:x="3513" fg:w="1"/><text x="85.7037%" y="127.50"></text></g><g><title>ray_tracing_3d::optic::image::Grid::ray_eye_pixel_point (490 samples, 11.92%)</title><rect x="73.6317%" y="277" width="11.9192%" height="15" fill="rgb(233,156,4)" fg:x="3027" fg:w="490"/><text x="73.8817%" y="287.50">ray_tracing_3d::op..</text></g><g><title>ray_tracing_3d::optic::image::Grid::pixel_point_selection (78 samples, 1.90%)</title><rect x="83.6536%" y="261" width="1.8973%" height="15" fill="rgb(207,194,5)" fg:x="3439" fg:w="78"/><text x="83.9036%" y="271.50">r..</text></g><g><title>alloc::vec::from_elem (64 samples, 1.56%)</title><rect x="83.9942%" y="245" width="1.5568%" height="15" fill="rgb(206,111,30)" fg:x="3453" fg:w="64"/><text x="84.2442%" y="255.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (64 samples, 1.56%)</title><rect x="83.9942%" y="229" width="1.5568%" height="15" fill="rgb(243,70,54)" fg:x="3453" fg:w="64"/><text x="84.2442%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (36 samples, 0.88%)</title><rect x="84.6753%" y="213" width="0.8757%" height="15" fill="rgb(242,28,8)" fg:x="3481" fg:w="36"/><text x="84.9253%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (35 samples, 0.85%)</title><rect x="84.6996%" y="197" width="0.8514%" height="15" fill="rgb(219,106,18)" fg:x="3482" fg:w="35"/><text x="84.9496%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (35 samples, 0.85%)</title><rect x="84.6996%" y="181" width="0.8514%" height="15" fill="rgb(244,222,10)" fg:x="3482" fg:w="35"/><text x="84.9496%" y="191.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (3 samples, 0.07%)</title><rect x="85.4780%" y="165" width="0.0730%" height="15" fill="rgb(236,179,52)" fg:x="3514" fg:w="3"/><text x="85.7280%" y="175.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::ops::range::RangeBounds&lt;T&gt;&gt;::end_bound (12 samples, 0.29%)</title><rect x="87.4240%" y="213" width="0.2919%" height="15" fill="rgb(213,23,39)" fg:x="3594" fg:w="12"/><text x="87.6740%" y="223.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::ops::range::RangeBounds&lt;T&gt;&gt;::start_bound (4 samples, 0.10%)</title><rect x="87.7159%" y="213" width="0.0973%" height="15" fill="rgb(238,48,10)" fg:x="3606" fg:w="4"/><text x="87.9659%" y="223.50"></text></g><g><title>_start (3,246 samples, 78.96%)</title><rect x="10.0462%" y="485" width="78.9589%" height="15" fill="rgb(251,196,23)" fg:x="413" fg:w="3246"/><text x="10.2962%" y="495.50">_start</text></g><g><title>__libc_start_main (3,246 samples, 78.96%)</title><rect x="10.0462%" y="469" width="78.9589%" height="15" fill="rgb(250,152,24)" fg:x="413" fg:w="3246"/><text x="10.2962%" y="479.50">__libc_start_main</text></g><g><title>[libc.so.6] (3,246 samples, 78.96%)</title><rect x="10.0462%" y="453" width="78.9589%" height="15" fill="rgb(209,150,17)" fg:x="413" fg:w="3246"/><text x="10.2962%" y="463.50">[libc.so.6]</text></g><g><title>main (3,246 samples, 78.96%)</title><rect x="10.0462%" y="437" width="78.9589%" height="15" fill="rgb(234,202,34)" fg:x="413" fg:w="3246"/><text x="10.2962%" y="447.50">main</text></g><g><title>std::rt::lang_start (3,246 samples, 78.96%)</title><rect x="10.0462%" y="421" width="78.9589%" height="15" fill="rgb(253,148,53)" fg:x="413" fg:w="3246"/><text x="10.2962%" y="431.50">std::rt::lang_start</text></g><g><title>std::rt::lang_start_internal (3,246 samples, 78.96%)</title><rect x="10.0462%" y="405" width="78.9589%" height="15" fill="rgb(218,129,16)" fg:x="413" fg:w="3246"/><text x="10.2962%" y="415.50">std::rt::lang_start_internal</text></g><g><title>std::rt::lang_start::_{{closure}} (3,245 samples, 78.93%)</title><rect x="10.0705%" y="389" width="78.9346%" height="15" fill="rgb(216,85,19)" fg:x="414" fg:w="3245"/><text x="10.3205%" y="399.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3,245 samples, 78.93%)</title><rect x="10.0705%" y="373" width="78.9346%" height="15" fill="rgb(235,228,7)" fg:x="414" fg:w="3245"/><text x="10.3205%" y="383.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (3,245 samples, 78.93%)</title><rect x="10.0705%" y="357" width="78.9346%" height="15" fill="rgb(245,175,0)" fg:x="414" fg:w="3245"/><text x="10.3205%" y="367.50">core::ops::function::FnOnce::call_once</text></g><g><title>ray_tracing_3d::main (3,245 samples, 78.93%)</title><rect x="10.0705%" y="341" width="78.9346%" height="15" fill="rgb(208,168,36)" fg:x="414" fg:w="3245"/><text x="10.3205%" y="351.50">ray_tracing_3d::main</text></g><g><title>ray_tracing_3d::ray_trace_image (3,245 samples, 78.93%)</title><rect x="10.0705%" y="325" width="78.9346%" height="15" fill="rgb(246,171,24)" fg:x="414" fg:w="3245"/><text x="10.3205%" y="335.50">ray_tracing_3d::ray_trace_image</text></g><g><title>ray_tracing_3d::optic::image::Grid::make_image (3,243 samples, 78.89%)</title><rect x="10.1192%" y="309" width="78.8859%" height="15" fill="rgb(215,142,24)" fg:x="416" fg:w="3243"/><text x="10.3692%" y="319.50">ray_tracing_3d::optic::image::Grid::make_image</text></g><g><title>ray_tracing_3d::optic::image::Grid::trace_pixel_color (3,219 samples, 78.30%)</title><rect x="10.7030%" y="293" width="78.3021%" height="15" fill="rgb(250,187,7)" fg:x="440" fg:w="3219"/><text x="10.9530%" y="303.50">ray_tracing_3d::optic::image::Grid::trace_pixel_color</text></g><g><title>ray_tracing_3d::optic::image::get_background_color (142 samples, 3.45%)</title><rect x="85.5510%" y="277" width="3.4541%" height="15" fill="rgb(228,66,33)" fg:x="3517" fg:w="142"/><text x="85.8010%" y="287.50">ray..</text></g><g><title>ray_tracing_3d::optic::color::Color::new (142 samples, 3.45%)</title><rect x="85.5510%" y="261" width="3.4541%" height="15" fill="rgb(234,215,21)" fg:x="3517" fg:w="142"/><text x="85.8010%" y="271.50">ray..</text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::contains (123 samples, 2.99%)</title><rect x="86.0131%" y="245" width="2.9920%" height="15" fill="rgb(222,191,20)" fg:x="3536" fg:w="123"/><text x="86.2631%" y="255.50">cor..</text></g><g><title>core::ops::range::RangeBounds::contains (117 samples, 2.85%)</title><rect x="86.1591%" y="229" width="2.8460%" height="15" fill="rgb(245,79,54)" fg:x="3542" fg:w="117"/><text x="86.4091%" y="239.50">co..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (49 samples, 1.19%)</title><rect x="87.8132%" y="213" width="1.1919%" height="15" fill="rgb(240,10,37)" fg:x="3610" fg:w="49"/><text x="88.0632%" y="223.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (29 samples, 0.71%)</title><rect x="88.2997%" y="197" width="0.7054%" height="15" fill="rgb(214,192,32)" fg:x="3630" fg:w="29"/><text x="88.5497%" y="207.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.02%)</title><rect x="89.0051%" y="485" width="0.0243%" height="15" fill="rgb(209,36,54)" fg:x="3659" fg:w="1"/><text x="89.2551%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.02%)</title><rect x="89.0294%" y="485" width="0.0243%" height="15" fill="rgb(220,10,11)" fg:x="3660" fg:w="1"/><text x="89.2794%" y="495.50"></text></g><g><title>core::core_arch::x86::sse41::_mm_insert_epi32 (2 samples, 0.05%)</title><rect x="89.0538%" y="485" width="0.0486%" height="15" fill="rgb(221,106,17)" fg:x="3661" fg:w="2"/><text x="89.3038%" y="495.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="89.1024%" y="485" width="0.0243%" height="15" fill="rgb(251,142,44)" fg:x="3663" fg:w="1"/><text x="89.3524%" y="495.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (1 samples, 0.02%)</title><rect x="89.1267%" y="485" width="0.0243%" height="15" fill="rgb(238,13,15)" fg:x="3664" fg:w="1"/><text x="89.3767%" y="495.50"></text></g><g><title>core::ops::range::RangeBounds::contains (6 samples, 0.15%)</title><rect x="89.1511%" y="485" width="0.1459%" height="15" fill="rgb(208,107,27)" fg:x="3665" fg:w="6"/><text x="89.4011%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;ray_tracing_3d::geometry::vector::UnitVector&gt;&gt; (1 samples, 0.02%)</title><rect x="89.2970%" y="485" width="0.0243%" height="15" fill="rgb(205,136,37)" fg:x="3671" fg:w="1"/><text x="89.5470%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (46 samples, 1.12%)</title><rect x="89.9781%" y="469" width="1.1189%" height="15" fill="rgb(250,205,27)" fg:x="3699" fg:w="46"/><text x="90.2281%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (7 samples, 0.17%)</title><rect x="90.9268%" y="453" width="0.1703%" height="15" fill="rgb(210,80,43)" fg:x="3738" fg:w="7"/><text x="91.1768%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_extracti128_si256 (4 samples, 0.10%)</title><rect x="91.0971%" y="469" width="0.0973%" height="15" fill="rgb(247,160,36)" fg:x="3745" fg:w="4"/><text x="91.3471%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="91.1700%" y="453" width="0.0243%" height="15" fill="rgb(234,13,49)" fg:x="3748" fg:w="1"/><text x="91.4200%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (22 samples, 0.54%)</title><rect x="91.1944%" y="469" width="0.5351%" height="15" fill="rgb(234,122,0)" fg:x="3749" fg:w="22"/><text x="91.4444%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (4 samples, 0.10%)</title><rect x="91.6322%" y="453" width="0.0973%" height="15" fill="rgb(207,146,38)" fg:x="3767" fg:w="4"/><text x="91.8822%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (10 samples, 0.24%)</title><rect x="91.7295%" y="469" width="0.2432%" height="15" fill="rgb(207,177,25)" fg:x="3771" fg:w="10"/><text x="91.9795%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (4 samples, 0.10%)</title><rect x="91.8755%" y="453" width="0.0973%" height="15" fill="rgb(211,178,42)" fg:x="3777" fg:w="4"/><text x="92.1255%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (20 samples, 0.49%)</title><rect x="91.9728%" y="469" width="0.4865%" height="15" fill="rgb(230,69,54)" fg:x="3781" fg:w="20"/><text x="92.2228%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (4 samples, 0.10%)</title><rect x="92.3620%" y="453" width="0.0973%" height="15" fill="rgb(214,135,41)" fg:x="3797" fg:w="4"/><text x="92.6120%" y="463.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.02%)</title><rect x="92.4349%" y="437" width="0.0243%" height="15" fill="rgb(237,67,25)" fg:x="3800" fg:w="1"/><text x="92.6849%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (12 samples, 0.29%)</title><rect x="92.4593%" y="469" width="0.2919%" height="15" fill="rgb(222,189,50)" fg:x="3801" fg:w="12"/><text x="92.7093%" y="479.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.02%)</title><rect x="92.7268%" y="453" width="0.0243%" height="15" fill="rgb(245,148,34)" fg:x="3812" fg:w="1"/><text x="92.9768%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (9 samples, 0.22%)</title><rect x="92.7512%" y="469" width="0.2189%" height="15" fill="rgb(222,29,6)" fg:x="3813" fg:w="9"/><text x="93.0012%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (20 samples, 0.49%)</title><rect x="92.9701%" y="469" width="0.4865%" height="15" fill="rgb(221,189,43)" fg:x="3822" fg:w="20"/><text x="93.2201%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (3 samples, 0.07%)</title><rect x="93.3836%" y="453" width="0.0730%" height="15" fill="rgb(207,36,27)" fg:x="3839" fg:w="3"/><text x="93.6336%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (10 samples, 0.24%)</title><rect x="93.4566%" y="469" width="0.2432%" height="15" fill="rgb(217,90,24)" fg:x="3842" fg:w="10"/><text x="93.7066%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi32 (2 samples, 0.05%)</title><rect x="93.6998%" y="469" width="0.0486%" height="15" fill="rgb(224,66,35)" fg:x="3852" fg:w="2"/><text x="93.9498%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_storeu_si128 (3 samples, 0.07%)</title><rect x="93.7485%" y="469" width="0.0730%" height="15" fill="rgb(221,13,50)" fg:x="3854" fg:w="3"/><text x="93.9985%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_unaligned (1 samples, 0.02%)</title><rect x="93.7971%" y="453" width="0.0243%" height="15" fill="rgb(236,68,49)" fg:x="3856" fg:w="1"/><text x="94.0471%" y="463.50"></text></g><g><title>core::core_arch::x86::sse41::_mm_insert_epi32 (1 samples, 0.02%)</title><rect x="93.8215%" y="469" width="0.0243%" height="15" fill="rgb(229,146,28)" fg:x="3857" fg:w="1"/><text x="94.0715%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (2 samples, 0.05%)</title><rect x="93.8701%" y="453" width="0.0486%" height="15" fill="rgb(225,31,38)" fg:x="3859" fg:w="2"/><text x="94.1201%" y="463.50"></text></g><g><title>core::array::_&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T: N]&gt;::into_iter (2 samples, 0.05%)</title><rect x="93.9188%" y="453" width="0.0486%" height="15" fill="rgb(250,208,3)" fg:x="3861" fg:w="2"/><text x="94.1688%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (2 samples, 0.05%)</title><rect x="93.9188%" y="437" width="0.0486%" height="15" fill="rgb(246,54,23)" fg:x="3861" fg:w="2"/><text x="94.1688%" y="447.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (2 samples, 0.05%)</title><rect x="93.9188%" y="421" width="0.0486%" height="15" fill="rgb(243,76,11)" fg:x="3861" fg:w="2"/><text x="94.1688%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.02%)</title><rect x="93.9431%" y="405" width="0.0243%" height="15" fill="rgb(245,21,50)" fg:x="3862" fg:w="1"/><text x="94.1931%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (9 samples, 0.22%)</title><rect x="93.8458%" y="469" width="0.2189%" height="15" fill="rgb(228,9,43)" fg:x="3858" fg:w="9"/><text x="94.0958%" y="479.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (4 samples, 0.10%)</title><rect x="93.9674%" y="453" width="0.0973%" height="15" fill="rgb(208,100,47)" fg:x="3863" fg:w="4"/><text x="94.2174%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (4 samples, 0.10%)</title><rect x="93.9674%" y="437" width="0.0973%" height="15" fill="rgb(232,26,8)" fg:x="3863" fg:w="4"/><text x="94.2174%" y="447.50"></text></g><g><title>[libc.so.6] (2 samples, 0.05%)</title><rect x="94.0161%" y="421" width="0.0486%" height="15" fill="rgb(216,166,38)" fg:x="3865" fg:w="2"/><text x="94.2661%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="94.1134%" y="437" width="0.0486%" height="15" fill="rgb(251,202,51)" fg:x="3869" fg:w="2"/><text x="94.3634%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (2 samples, 0.05%)</title><rect x="94.1134%" y="421" width="0.0486%" height="15" fill="rgb(254,216,34)" fg:x="3869" fg:w="2"/><text x="94.3634%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (2 samples, 0.05%)</title><rect x="94.1134%" y="405" width="0.0486%" height="15" fill="rgb(251,32,27)" fg:x="3869" fg:w="2"/><text x="94.3634%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::get_unchecked (2 samples, 0.05%)</title><rect x="94.1134%" y="389" width="0.0486%" height="15" fill="rgb(208,127,28)" fg:x="3869" fg:w="2"/><text x="94.3634%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (2 samples, 0.05%)</title><rect x="94.1134%" y="373" width="0.0486%" height="15" fill="rgb(224,137,22)" fg:x="3869" fg:w="2"/><text x="94.3634%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::get_unchecked (2 samples, 0.05%)</title><rect x="94.1134%" y="357" width="0.0486%" height="15" fill="rgb(254,70,32)" fg:x="3869" fg:w="2"/><text x="94.3634%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (1 samples, 0.02%)</title><rect x="94.1377%" y="341" width="0.0243%" height="15" fill="rgb(229,75,37)" fg:x="3870" fg:w="1"/><text x="94.3877%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::get_unchecked (1 samples, 0.02%)</title><rect x="94.1377%" y="325" width="0.0243%" height="15" fill="rgb(252,64,23)" fg:x="3870" fg:w="1"/><text x="94.3877%" y="335.50"></text></g><g><title>&lt;core::slice::iter::ChunksExactMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="94.1620%" y="437" width="0.0730%" height="15" fill="rgb(232,162,48)" fg:x="3871" fg:w="3"/><text x="94.4120%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut [T]&gt;::split_at_mut (2 samples, 0.05%)</title><rect x="94.1863%" y="421" width="0.0486%" height="15" fill="rgb(246,160,12)" fg:x="3872" fg:w="2"/><text x="94.4363%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut [T]&gt;::split_at_mut_unchecked (2 samples, 0.05%)</title><rect x="94.1863%" y="405" width="0.0486%" height="15" fill="rgb(247,166,0)" fg:x="3872" fg:w="2"/><text x="94.4363%" y="415.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.02%)</title><rect x="94.2107%" y="389" width="0.0243%" height="15" fill="rgb(249,219,21)" fg:x="3873" fg:w="1"/><text x="94.4607%" y="399.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="94.2107%" y="373" width="0.0243%" height="15" fill="rgb(205,209,3)" fg:x="3873" fg:w="1"/><text x="94.4607%" y="383.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,S4,NI&gt; as core::ops::arith::Add&gt;::add (3 samples, 0.07%)</title><rect x="94.2350%" y="437" width="0.0730%" height="15" fill="rgb(243,44,1)" fg:x="3874" fg:w="3"/><text x="94.4850%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi32 (1 samples, 0.02%)</title><rect x="94.2836%" y="421" width="0.0243%" height="15" fill="rgb(206,159,16)" fg:x="3876" fg:w="1"/><text x="94.5336%" y="431.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,S4,NI&gt; as ppv_lite86::types::StoreBytes&gt;::write_le (6 samples, 0.15%)</title><rect x="94.3080%" y="437" width="0.1459%" height="15" fill="rgb(244,77,30)" fg:x="3877" fg:w="6"/><text x="94.5580%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_storeu_si128 (2 samples, 0.05%)</title><rect x="94.4053%" y="421" width="0.0486%" height="15" fill="rgb(218,69,12)" fg:x="3881" fg:w="2"/><text x="94.6553%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_unaligned (2 samples, 0.05%)</title><rect x="94.4053%" y="405" width="0.0486%" height="15" fill="rgb(212,87,7)" fg:x="3881" fg:w="2"/><text x="94.6553%" y="415.50"></text></g><g><title>core::ptr::write_unaligned (1 samples, 0.02%)</title><rect x="94.4296%" y="389" width="0.0243%" height="15" fill="rgb(245,114,25)" fg:x="3882" fg:w="1"/><text x="94.6796%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="94.4296%" y="373" width="0.0243%" height="15" fill="rgb(210,61,42)" fg:x="3882" fg:w="1"/><text x="94.6796%" y="383.50"></text></g><g><title>core::core_arch::x86::sse41::_mm_insert_epi32 (2 samples, 0.05%)</title><rect x="94.4539%" y="421" width="0.0486%" height="15" fill="rgb(211,52,33)" fg:x="3883" fg:w="2"/><text x="94.7039%" y="431.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (1 samples, 0.02%)</title><rect x="94.4782%" y="405" width="0.0243%" height="15" fill="rgb(234,58,33)" fg:x="3884" fg:w="1"/><text x="94.7282%" y="415.50"></text></g><g><title>&lt;core::core_arch::x86::__m128i as core::core_arch::x86::m128iExt&gt;::as_m128i (1 samples, 0.02%)</title><rect x="94.4782%" y="389" width="0.0243%" height="15" fill="rgb(220,115,36)" fg:x="3884" fg:w="1"/><text x="94.7282%" y="399.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,ppv_lite86::x86_64::YesS4,NI&gt; as ppv_lite86::types::Vec4&lt;u32&gt;&gt;::insert (3 samples, 0.07%)</title><rect x="94.4539%" y="437" width="0.0730%" height="15" fill="rgb(243,153,54)" fg:x="3883" fg:w="3"/><text x="94.7039%" y="447.50"></text></g><g><title>ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,S4,NI&gt;::new (1 samples, 0.02%)</title><rect x="94.5026%" y="421" width="0.0243%" height="15" fill="rgb(251,47,18)" fg:x="3885" fg:w="1"/><text x="94.7526%" y="431.50"></text></g><g><title>[libc.so.6] (2 samples, 0.05%)</title><rect x="94.5269%" y="421" width="0.0486%" height="15" fill="rgb(242,102,42)" fg:x="3886" fg:w="2"/><text x="94.7769%" y="431.50"></text></g><g><title>core::array::_&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T: N]&gt;::into_iter (1 samples, 0.02%)</title><rect x="94.5755%" y="421" width="0.0243%" height="15" fill="rgb(234,31,38)" fg:x="3888" fg:w="1"/><text x="94.8255%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.02%)</title><rect x="94.5755%" y="405" width="0.0243%" height="15" fill="rgb(221,117,51)" fg:x="3888" fg:w="1"/><text x="94.8255%" y="415.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="94.5755%" y="389" width="0.0243%" height="15" fill="rgb(212,20,18)" fg:x="3888" fg:w="1"/><text x="94.8255%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="94.6242%" y="389" width="0.0243%" height="15" fill="rgb(245,133,36)" fg:x="3890" fg:w="1"/><text x="94.8742%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.02%)</title><rect x="94.6485%" y="373" width="0.0243%" height="15" fill="rgb(212,6,19)" fg:x="3891" fg:w="1"/><text x="94.8985%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (7 samples, 0.17%)</title><rect x="94.5269%" y="437" width="0.1703%" height="15" fill="rgb(218,1,36)" fg:x="3886" fg:w="7"/><text x="94.7769%" y="447.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (4 samples, 0.10%)</title><rect x="94.5999%" y="421" width="0.0973%" height="15" fill="rgb(246,84,54)" fg:x="3889" fg:w="4"/><text x="94.8499%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (4 samples, 0.10%)</title><rect x="94.5999%" y="405" width="0.0973%" height="15" fill="rgb(242,110,6)" fg:x="3889" fg:w="4"/><text x="94.8499%" y="415.50"></text></g><g><title>core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (2 samples, 0.05%)</title><rect x="94.6485%" y="389" width="0.0486%" height="15" fill="rgb(214,47,5)" fg:x="3891" fg:w="2"/><text x="94.8985%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.02%)</title><rect x="94.6728%" y="373" width="0.0243%" height="15" fill="rgb(218,159,25)" fg:x="3892" fg:w="1"/><text x="94.9228%" y="383.50"></text></g><g><title>ppv_lite86::types::Machine::unpack (1 samples, 0.02%)</title><rect x="94.6972%" y="437" width="0.0243%" height="15" fill="rgb(215,211,28)" fg:x="3893" fg:w="1"/><text x="94.9472%" y="447.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,S4,NI&gt; as ppv_lite86::types::Store&lt;ppv_lite86::x86_64::vec128_storage&gt;&gt;::unpack (1 samples, 0.02%)</title><rect x="94.6972%" y="421" width="0.0243%" height="15" fill="rgb(238,59,32)" fg:x="3893" fg:w="1"/><text x="94.9472%" y="431.50"></text></g><g><title>core::core_arch::x86_64::sse2::_mm_cvtsi64_si128 (1 samples, 0.02%)</title><rect x="94.7458%" y="405" width="0.0243%" height="15" fill="rgb(226,82,3)" fg:x="3895" fg:w="1"/><text x="94.9958%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi64x (1 samples, 0.02%)</title><rect x="94.7458%" y="389" width="0.0243%" height="15" fill="rgb(240,164,32)" fg:x="3895" fg:w="1"/><text x="94.9958%" y="399.50"></text></g><g><title>core::core_arch::simd::i64x2::new (1 samples, 0.02%)</title><rect x="94.7458%" y="373" width="0.0243%" height="15" fill="rgb(232,46,7)" fg:x="3895" fg:w="1"/><text x="94.9958%" y="383.50"></text></g><g><title>ppv_lite86::types::Machine::vec (3 samples, 0.07%)</title><rect x="94.7215%" y="437" width="0.0730%" height="15" fill="rgb(229,129,53)" fg:x="3894" fg:w="3"/><text x="94.9715%" y="447.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,ppv_lite86::x86_64::YesS4,NI&gt; as ppv_lite86::types::MultiLane&lt;[u32: 4]&gt;&gt;::from_lanes (3 samples, 0.07%)</title><rect x="94.7215%" y="421" width="0.0730%" height="15" fill="rgb(234,188,29)" fg:x="3894" fg:w="3"/><text x="94.9715%" y="431.50"></text></g><g><title>core::core_arch::x86_64::sse41::_mm_insert_epi64 (1 samples, 0.02%)</title><rect x="94.7701%" y="405" width="0.0243%" height="15" fill="rgb(246,141,4)" fg:x="3896" fg:w="1"/><text x="95.0201%" y="415.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i64x2 (1 samples, 0.02%)</title><rect x="94.7701%" y="389" width="0.0243%" height="15" fill="rgb(229,23,39)" fg:x="3896" fg:w="1"/><text x="95.0201%" y="399.50"></text></g><g><title>&lt;core::core_arch::x86::__m128i as core::core_arch::x86::m128iExt&gt;::as_m128i (1 samples, 0.02%)</title><rect x="94.7701%" y="373" width="0.0243%" height="15" fill="rgb(206,12,3)" fg:x="3896" fg:w="1"/><text x="95.0201%" y="383.50"></text></g><g><title>ppv_lite86::x86_64::sse2::avx2::_&lt;impl ppv_lite86::types::MultiLane&lt;[ppv_lite86::x86_64::sse2::u32x4_sse2&lt;ppv_lite86::x86_64::YesS3,ppv_lite86::x86_64::YesS4,NI&gt;: 4]&gt; for ppv_lite86::soft::x2&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt;,ppv_lite86::x86_64::sse2::G0&gt;&gt;::from_lanes (1 samples, 0.02%)</title><rect x="94.7945%" y="437" width="0.0243%" height="15" fill="rgb(252,226,20)" fg:x="3897" fg:w="1"/><text x="95.0445%" y="447.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::MultiLane&lt;[ppv_lite86::x86_64::sse2::u32x4_sse2&lt;ppv_lite86::x86_64::YesS3,ppv_lite86::x86_64::YesS4,NI&gt;: 2]&gt;&gt;::from_lanes (1 samples, 0.02%)</title><rect x="94.7945%" y="421" width="0.0243%" height="15" fill="rgb(216,123,35)" fg:x="3897" fg:w="1"/><text x="95.0445%" y="431.50"></text></g><g><title>ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt;::new (1 samples, 0.02%)</title><rect x="94.7945%" y="405" width="0.0243%" height="15" fill="rgb(212,68,40)" fg:x="3897" fg:w="1"/><text x="95.0445%" y="415.50"></text></g><g><title>ppv_lite86::x86_64::sse2::avx2::_&lt;impl ppv_lite86::types::MultiLane&lt;[ppv_lite86::x86_64::sse2::u32x4_sse2&lt;ppv_lite86::x86_64::YesS3,ppv_lite86::x86_64::YesS4,NI&gt;: 4]&gt; for ppv_lite86::soft::x2&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt;,ppv_lite86::x86_64::sse2::G0&gt;&gt;::to_lanes (21 samples, 0.51%)</title><rect x="94.8188%" y="437" width="0.5108%" height="15" fill="rgb(254,125,32)" fg:x="3898" fg:w="21"/><text x="95.0688%" y="447.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::MultiLane&lt;[ppv_lite86::x86_64::sse2::u32x4_sse2&lt;ppv_lite86::x86_64::YesS3,ppv_lite86::x86_64::YesS4,NI&gt;: 2]&gt;&gt;::to_lanes (21 samples, 0.51%)</title><rect x="94.8188%" y="421" width="0.5108%" height="15" fill="rgb(253,97,22)" fg:x="3898" fg:w="21"/><text x="95.0688%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_extracti128_si256 (20 samples, 0.49%)</title><rect x="94.8431%" y="405" width="0.4865%" height="15" fill="rgb(241,101,14)" fg:x="3899" fg:w="20"/><text x="95.0931%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (7 samples, 0.17%)</title><rect x="95.1593%" y="389" width="0.1703%" height="15" fill="rgb(238,103,29)" fg:x="3912" fg:w="7"/><text x="95.4093%" y="399.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (3 samples, 0.07%)</title><rect x="95.2566%" y="373" width="0.0730%" height="15" fill="rgb(233,195,47)" fg:x="3916" fg:w="3"/><text x="95.5066%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.05%)</title><rect x="95.4026%" y="389" width="0.0486%" height="15" fill="rgb(246,218,30)" fg:x="3922" fg:w="2"/><text x="95.6526%" y="399.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (4 samples, 0.10%)</title><rect x="95.3783%" y="421" width="0.0973%" height="15" fill="rgb(219,145,47)" fg:x="3921" fg:w="4"/><text x="95.6283%" y="431.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (3 samples, 0.07%)</title><rect x="95.4026%" y="405" width="0.0730%" height="15" fill="rgb(243,12,26)" fg:x="3922" fg:w="3"/><text x="95.6526%" y="415.50"></text></g><g><title>ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt;::new (1 samples, 0.02%)</title><rect x="95.4512%" y="389" width="0.0243%" height="15" fill="rgb(214,87,16)" fg:x="3924" fg:w="1"/><text x="95.7012%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (5 samples, 0.12%)</title><rect x="95.4756%" y="389" width="0.1216%" height="15" fill="rgb(208,99,42)" fg:x="3925" fg:w="5"/><text x="95.7256%" y="399.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (6 samples, 0.15%)</title><rect x="95.4756%" y="421" width="0.1459%" height="15" fill="rgb(253,99,2)" fg:x="3925" fg:w="6"/><text x="95.7256%" y="431.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (6 samples, 0.15%)</title><rect x="95.4756%" y="405" width="0.1459%" height="15" fill="rgb(220,168,23)" fg:x="3925" fg:w="6"/><text x="95.7256%" y="415.50"></text></g><g><title>ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt;::new (1 samples, 0.02%)</title><rect x="95.5972%" y="389" width="0.0243%" height="15" fill="rgb(242,38,24)" fg:x="3930" fg:w="1"/><text x="95.8472%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (4 samples, 0.10%)</title><rect x="95.6945%" y="389" width="0.0973%" height="15" fill="rgb(225,182,9)" fg:x="3934" fg:w="4"/><text x="95.9445%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="95.7675%" y="373" width="0.0243%" height="15" fill="rgb(243,178,37)" fg:x="3937" fg:w="1"/><text x="96.0175%" y="383.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.02%)</title><rect x="95.7675%" y="357" width="0.0243%" height="15" fill="rgb(232,139,19)" fg:x="3937" fg:w="1"/><text x="96.0175%" y="367.50"></text></g><g><title>rand_chacha::guts::diagonalize (21 samples, 0.51%)</title><rect x="95.3296%" y="437" width="0.5108%" height="15" fill="rgb(225,201,24)" fg:x="3919" fg:w="21"/><text x="95.5796%" y="447.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (9 samples, 0.22%)</title><rect x="95.6215%" y="421" width="0.2189%" height="15" fill="rgb(221,47,46)" fg:x="3931" fg:w="9"/><text x="95.8715%" y="431.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (9 samples, 0.22%)</title><rect x="95.6215%" y="405" width="0.2189%" height="15" fill="rgb(249,23,13)" fg:x="3931" fg:w="9"/><text x="95.8715%" y="415.50"></text></g><g><title>ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt;::new (2 samples, 0.05%)</title><rect x="95.7918%" y="389" width="0.0486%" height="15" fill="rgb(219,9,5)" fg:x="3938" fg:w="2"/><text x="96.0418%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (19 samples, 0.46%)</title><rect x="96.2540%" y="373" width="0.4622%" height="15" fill="rgb(254,171,16)" fg:x="3957" fg:w="19"/><text x="96.5040%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="96.6918%" y="357" width="0.0243%" height="15" fill="rgb(230,171,20)" fg:x="3975" fg:w="1"/><text x="96.9418%" y="367.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (33 samples, 0.80%)</title><rect x="95.9864%" y="421" width="0.8027%" height="15" fill="rgb(210,71,41)" fg:x="3946" fg:w="33"/><text x="96.2364%" y="431.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (33 samples, 0.80%)</title><rect x="95.9864%" y="405" width="0.8027%" height="15" fill="rgb(206,173,20)" fg:x="3946" fg:w="33"/><text x="96.2364%" y="415.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (31 samples, 0.75%)</title><rect x="96.0350%" y="389" width="0.7541%" height="15" fill="rgb(233,88,34)" fg:x="3948" fg:w="31"/><text x="96.2850%" y="399.50"></text></g><g><title>ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt;::new (3 samples, 0.07%)</title><rect x="96.7161%" y="373" width="0.0730%" height="15" fill="rgb(223,209,46)" fg:x="3976" fg:w="3"/><text x="96.9661%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (23 samples, 0.56%)</title><rect x="97.1297%" y="389" width="0.5595%" height="15" fill="rgb(250,43,18)" fg:x="3993" fg:w="23"/><text x="97.3797%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (6 samples, 0.15%)</title><rect x="97.5432%" y="373" width="0.1459%" height="15" fill="rgb(208,13,10)" fg:x="4010" fg:w="6"/><text x="97.7932%" y="383.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.02%)</title><rect x="97.6648%" y="357" width="0.0243%" height="15" fill="rgb(212,200,36)" fg:x="4015" fg:w="1"/><text x="97.9148%" y="367.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::bit::BitXor&gt;::bitxor (44 samples, 1.07%)</title><rect x="96.7891%" y="421" width="1.0703%" height="15" fill="rgb(225,90,30)" fg:x="3979" fg:w="44"/><text x="97.0391%" y="431.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::bit::BitXor&gt;::bitxor (36 samples, 0.88%)</title><rect x="96.9837%" y="405" width="0.8757%" height="15" fill="rgb(236,182,39)" fg:x="3987" fg:w="36"/><text x="97.2337%" y="415.50"></text></g><g><title>ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt;::new (7 samples, 0.17%)</title><rect x="97.6891%" y="389" width="0.1703%" height="15" fill="rgb(212,144,35)" fg:x="4016" fg:w="7"/><text x="97.9391%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (10 samples, 0.24%)</title><rect x="97.9810%" y="389" width="0.2432%" height="15" fill="rgb(228,63,44)" fg:x="4028" fg:w="10"/><text x="98.2310%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (2 samples, 0.05%)</title><rect x="98.1756%" y="373" width="0.0486%" height="15" fill="rgb(228,109,6)" fg:x="4036" fg:w="2"/><text x="98.4256%" y="383.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (13 samples, 0.32%)</title><rect x="97.9324%" y="405" width="0.3162%" height="15" fill="rgb(238,117,24)" fg:x="4026" fg:w="13"/><text x="98.1824%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.02%)</title><rect x="98.2243%" y="389" width="0.0243%" height="15" fill="rgb(242,26,26)" fg:x="4038" fg:w="1"/><text x="98.4743%" y="399.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (18 samples, 0.44%)</title><rect x="97.8594%" y="421" width="0.4378%" height="15" fill="rgb(221,92,48)" fg:x="4023" fg:w="18"/><text x="98.1094%" y="431.50"></text></g><g><title>ppv_lite86::soft::x2&lt;W,G&gt;::new (2 samples, 0.05%)</title><rect x="98.2486%" y="405" width="0.0486%" height="15" fill="rgb(209,209,32)" fg:x="4039" fg:w="2"/><text x="98.4986%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (4 samples, 0.10%)</title><rect x="98.3946%" y="389" width="0.0973%" height="15" fill="rgb(221,70,22)" fg:x="4045" fg:w="4"/><text x="98.6446%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (3 samples, 0.07%)</title><rect x="98.4919%" y="389" width="0.0730%" height="15" fill="rgb(248,145,5)" fg:x="4049" fg:w="3"/><text x="98.7419%" y="399.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.02%)</title><rect x="98.5405%" y="373" width="0.0243%" height="15" fill="rgb(226,116,26)" fg:x="4051" fg:w="1"/><text x="98.7905%" y="383.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (23 samples, 0.56%)</title><rect x="98.2973%" y="421" width="0.5595%" height="15" fill="rgb(244,5,17)" fg:x="4041" fg:w="23"/><text x="98.5473%" y="431.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (22 samples, 0.54%)</title><rect x="98.3216%" y="405" width="0.5351%" height="15" fill="rgb(252,159,33)" fg:x="4042" fg:w="22"/><text x="98.5716%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (12 samples, 0.29%)</title><rect x="98.5648%" y="389" width="0.2919%" height="15" fill="rgb(206,71,0)" fg:x="4052" fg:w="12"/><text x="98.8148%" y="399.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.02%)</title><rect x="98.8324%" y="373" width="0.0243%" height="15" fill="rgb(233,118,54)" fg:x="4063" fg:w="1"/><text x="99.0824%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (3 samples, 0.07%)</title><rect x="98.9297%" y="389" width="0.0730%" height="15" fill="rgb(234,83,48)" fg:x="4067" fg:w="3"/><text x="99.1797%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (4 samples, 0.10%)</title><rect x="99.0027%" y="389" width="0.0973%" height="15" fill="rgb(228,3,54)" fg:x="4070" fg:w="4"/><text x="99.2527%" y="399.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (14 samples, 0.34%)</title><rect x="98.8567%" y="421" width="0.3405%" height="15" fill="rgb(226,155,13)" fg:x="4064" fg:w="14"/><text x="99.1067%" y="431.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (13 samples, 0.32%)</title><rect x="98.8811%" y="405" width="0.3162%" height="15" fill="rgb(241,28,37)" fg:x="4065" fg:w="13"/><text x="99.1311%" y="415.50"></text></g><g><title>ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt;::new (4 samples, 0.10%)</title><rect x="99.1000%" y="389" width="0.0973%" height="15" fill="rgb(233,93,10)" fg:x="4074" fg:w="4"/><text x="99.3500%" y="399.50"></text></g><g><title>rand_chacha::guts::round (151 samples, 3.67%)</title><rect x="95.8404%" y="437" width="3.6731%" height="15" fill="rgb(225,113,19)" fg:x="3940" fg:w="151"/><text x="96.0904%" y="447.50">rand..</text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (13 samples, 0.32%)</title><rect x="99.1973%" y="421" width="0.3162%" height="15" fill="rgb(241,2,18)" fg:x="4078" fg:w="13"/><text x="99.4473%" y="431.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (13 samples, 0.32%)</title><rect x="99.1973%" y="405" width="0.3162%" height="15" fill="rgb(228,207,21)" fg:x="4078" fg:w="13"/><text x="99.4473%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (9 samples, 0.22%)</title><rect x="99.2946%" y="389" width="0.2189%" height="15" fill="rgb(213,211,35)" fg:x="4082" fg:w="9"/><text x="99.5446%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.05%)</title><rect x="99.4649%" y="373" width="0.0486%" height="15" fill="rgb(209,83,10)" fg:x="4089" fg:w="2"/><text x="99.7149%" y="383.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (4 samples, 0.10%)</title><rect x="99.5378%" y="405" width="0.0973%" height="15" fill="rgb(209,164,1)" fg:x="4092" fg:w="4"/><text x="99.7878%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (3 samples, 0.07%)</title><rect x="99.5622%" y="389" width="0.0730%" height="15" fill="rgb(213,184,43)" fg:x="4093" fg:w="3"/><text x="99.8122%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.05%)</title><rect x="99.5865%" y="373" width="0.0486%" height="15" fill="rgb(231,61,34)" fg:x="4094" fg:w="2"/><text x="99.8365%" y="383.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (6 samples, 0.15%)</title><rect x="99.5135%" y="421" width="0.1459%" height="15" fill="rgb(235,75,3)" fg:x="4091" fg:w="6"/><text x="99.7635%" y="431.50"></text></g><g><title>ppv_lite86::soft::x2&lt;W,G&gt;::new (1 samples, 0.02%)</title><rect x="99.6351%" y="405" width="0.0243%" height="15" fill="rgb(220,106,47)" fg:x="4096" fg:w="1"/><text x="99.8851%" y="415.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (4 samples, 0.10%)</title><rect x="99.6838%" y="405" width="0.0973%" height="15" fill="rgb(210,196,33)" fg:x="4098" fg:w="4"/><text x="99.9338%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (4 samples, 0.10%)</title><rect x="99.6838%" y="389" width="0.0973%" height="15" fill="rgb(229,154,42)" fg:x="4098" fg:w="4"/><text x="99.9338%" y="399.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (6 samples, 0.15%)</title><rect x="99.6595%" y="421" width="0.1459%" height="15" fill="rgb(228,114,26)" fg:x="4097" fg:w="6"/><text x="99.9095%" y="431.50"></text></g><g><title>ppv_lite86::soft::x2&lt;W,G&gt;::new (1 samples, 0.02%)</title><rect x="99.7811%" y="405" width="0.0243%" height="15" fill="rgb(208,144,1)" fg:x="4102" fg:w="1"/><text x="100.0311%" y="415.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (434 samples, 10.56%)</title><rect x="89.3213%" y="485" width="10.5570%" height="15" fill="rgb(239,112,37)" fg:x="3672" fg:w="434"/><text x="89.5713%" y="495.50">rand_chacha::gu..</text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (239 samples, 5.81%)</title><rect x="94.0647%" y="469" width="5.8137%" height="15" fill="rgb(210,96,50)" fg:x="3867" fg:w="239"/><text x="94.3147%" y="479.50">rand_ch..</text></g><g><title>rand_chacha::guts::refill_wide_impl (239 samples, 5.81%)</title><rect x="94.0647%" y="453" width="5.8137%" height="15" fill="rgb(222,178,2)" fg:x="3867" fg:w="239"/><text x="94.3147%" y="463.50">rand_ch..</text></g><g><title>rand_chacha::guts::undiagonalize (15 samples, 0.36%)</title><rect x="99.5135%" y="437" width="0.3649%" height="15" fill="rgb(226,74,18)" fg:x="4091" fg:w="15"/><text x="99.7635%" y="447.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (3 samples, 0.07%)</title><rect x="99.8054%" y="421" width="0.0730%" height="15" fill="rgb(225,67,54)" fg:x="4103" fg:w="3"/><text x="100.0554%" y="431.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (3 samples, 0.07%)</title><rect x="99.8054%" y="405" width="0.0730%" height="15" fill="rgb(251,92,32)" fg:x="4103" fg:w="3"/><text x="100.0554%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.05%)</title><rect x="99.8297%" y="389" width="0.0486%" height="15" fill="rgb(228,149,22)" fg:x="4104" fg:w="2"/><text x="100.0797%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="99.8541%" y="373" width="0.0243%" height="15" fill="rgb(243,54,13)" fg:x="4105" fg:w="1"/><text x="100.1041%" y="383.50"></text></g><g><title>ray_tracing_3d::geometry::ray::Ray::first_point_hit_by_ray (2 samples, 0.05%)</title><rect x="99.8784%" y="485" width="0.0486%" height="15" fill="rgb(243,180,28)" fg:x="4106" fg:w="2"/><text x="100.1284%" y="495.50"></text></g><g><title>ray_tracing_3d::geometry::vector::UnitVector::new_from_coordinates (1 samples, 0.02%)</title><rect x="99.9270%" y="485" width="0.0243%" height="15" fill="rgb(208,167,24)" fg:x="4108" fg:w="1"/><text x="100.1770%" y="495.50"></text></g><g><title>ray_tracing_3d::geometry::vector::Vector::normalize (1 samples, 0.02%)</title><rect x="99.9514%" y="485" width="0.0243%" height="15" fill="rgb(245,73,45)" fg:x="4109" fg:w="1"/><text x="100.2014%" y="495.50"></text></g><g><title>all (4,111 samples, 100%)</title><rect x="0.0000%" y="517" width="100.0000%" height="15" fill="rgb(237,203,48)" fg:x="0" fg:w="4111"/><text x="0.2500%" y="527.50"></text></g><g><title>ray_tracing_3d (4,111 samples, 100.00%)</title><rect x="0.0000%" y="501" width="100.0000%" height="15" fill="rgb(211,197,16)" fg:x="0" fg:w="4111"/><text x="0.2500%" y="511.50">ray_tracing_3d</text></g><g><title>ray_tracing_3d::optic::image::Grid::ray_eye_pixel_point (1 samples, 0.02%)</title><rect x="99.9757%" y="485" width="0.0243%" height="15" fill="rgb(243,99,51)" fg:x="4110" fg:w="1"/><text x="100.2257%" y="495.50"></text></g></svg></svg>